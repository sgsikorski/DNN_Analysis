Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: mnist_instances.csv
  results_file: out.txt
  root_path: ../../props/mnist_2
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  no_batchdim_buffers: false
  save_output: false
  output_file: out.pkl
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1024
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: -1
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    apply_output_constraints_to: []
    disable_optimization: []
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.03
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: true
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 32
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 5
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sb_coeff_thresh: 0.001
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      branching_point_refinement: false
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      shortlist_size: 500
      loose_tanh_threshold: null
    new_input_split:
      enable: false
      batch_size: 2
      rounds: 1
      init_alpha_batch_size: 8192
      full_alpha: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_zero_crossing_score: false
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 100
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: diversed_PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0

Experiments at Mon Apr 29 18:04:33 2024 on gpusrv01
no customized start/end sample, testing all samples in mnist_instances.csv
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00164507, -0.01367846, -0.01010457, -0.01394473,  0.00165974,
         -0.00141443, -0.00192677,  1.01394534,  0.00164498, -0.00966380]],
       device='cuda:0')
diversed PGD initialization time: 0.1329
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00165608, -0.01365209, -0.01000597, -0.01391035,  0.00165370,
          -0.00137664, -0.00190318,  1.01376200,  0.00167783, -0.00973166],
         [ 0.00165608, -0.01365209, -0.01000597, -0.01391035,  0.00165370,
          -0.00137664, -0.00190318,  1.01376200,  0.00167783, -0.00973166]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01210594, 1.02741408, 1.02376795, 1.02767229, 1.01210833,
          1.01513863, 1.01566517, 1.01208413, 1.02349365]]], device='cuda:0')
number of violation:  0
Attack finished in 1.4354 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00164507, -0.01367846, -0.01010457, -0.01394473,  0.00165974,
         -0.00141443, -0.00192677,  1.01394534,  0.00164498, -0.00966380]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01210582, 1.02741396, 1.02376795, 1.02767217, 1.01210797, 1.01513863,
         1.01566517, 1.01208413, 1.02349138]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 3.5074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.18983611e-02, -3.38828713e-02,  1.03310144e+00, -1.87858939e-02,
         -5.84031269e-03,  5.10022789e-03, -1.68263465e-02, -2.70505548e-02,
         -4.50558960e-04, -1.51604563e-02]], device='cuda:0')
diversed PGD initialization time: 0.1177
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.18943416e-02, -3.38648930e-02,  1.03306150e+00, -1.87801868e-02,
          -5.83393127e-03,  5.10053337e-03, -1.68189332e-02, -2.70444602e-02,
          -4.50797379e-04, -1.51542500e-02],
         [-1.18943416e-02, -3.38648930e-02,  1.03306150e+00, -1.87801868e-02,
          -5.83393127e-03,  5.10053337e-03, -1.68189332e-02, -2.70444602e-02,
          -4.50797379e-04, -1.51542500e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04495585, 1.06692636, 1.05184174, 1.03889549, 1.02796102,
          1.04988039, 1.06010592, 1.03351235, 1.04821575]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3803 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.18983611e-02, -3.38828713e-02,  1.03310144e+00, -1.87858939e-02,
         -5.84031269e-03,  5.10022789e-03, -1.68263465e-02, -2.70505548e-02,
         -4.50558960e-04, -1.51604563e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04495358, 1.06691885, 1.05183959, 1.03889060, 1.02796102, 1.04987812,
         1.06009912, 1.03351152, 1.04821193]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4748 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.65648013e-03,  1.00394428e+00, -7.36819208e-03, -4.99929488e-03,
         -5.35029545e-03, -2.13568658e-03, -4.29180264e-03, -4.78178263e-05,
         -4.20182198e-03,  6.69531524e-04]], device='cuda:0')
diversed PGD initialization time: 0.1286
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.64897367e-03,  1.00380099e+00, -7.33837485e-03, -4.97949123e-03,
          -5.34067675e-03, -2.11843103e-03, -4.28910926e-03, -2.24709511e-05,
          -4.18310612e-03,  6.90832734e-04],
         [-1.64897367e-03,  1.00380099e+00, -7.33837485e-03, -4.97949123e-03,
          -5.34067675e-03, -2.11843103e-03, -4.28910926e-03, -2.24709511e-05,
          -4.18310612e-03,  6.90832734e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00545001, 1.01113939, 1.00878048, 1.00914168, 1.00591946,
          1.00809014, 1.00382352, 1.00798404, 1.00311017]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4268 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.65648013e-03,  1.00394428e+00, -7.36819208e-03, -4.99929488e-03,
         -5.35029545e-03, -2.13568658e-03, -4.29180264e-03, -4.78178263e-05,
         -4.20182198e-03,  6.69531524e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00544953, 1.01113844, 1.00878000, 1.00914133, 1.00591910, 1.00808847,
         1.00382316, 1.00798392, 1.00311005]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.01251197, -0.01503862, -0.00750864, -0.01476592, -0.01233387,
          0.00799956, -0.00542090, -0.01942389, -0.00127944, -0.01266499]],
       device='cuda:0')
diversed PGD initialization time: 0.1281
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.01242268, -0.01504651, -0.00747880, -0.01476249, -0.01234287,
           0.00801337, -0.00536871, -0.01942933, -0.00127136, -0.01265320],
         [ 1.01242268, -0.01504651, -0.00747880, -0.01476249, -0.01234287,
           0.00801337, -0.00536871, -0.01942933, -0.00127136, -0.01265320]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02746916, 1.01990151, 1.02718520, 1.02476549, 1.00440931,
          1.01779139, 1.03185201, 1.01369405, 1.02507591]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4227 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.01251197, -0.01503862, -0.00750864, -0.01476592, -0.01233387,
          0.00799956, -0.00542090, -0.01942389, -0.00127944, -0.01266499]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02746248, 1.01989925, 1.02717662, 1.02476144, 1.00440931, 1.01778960,
         1.03184032, 1.01368940, 1.02507019]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5454 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00403238,  0.00381503,  0.01022679,  0.00528147,  0.93259925,
          0.00372205,  0.00464892,  0.00155434,  0.00391795,  0.00146757]],
       device='cuda:0')
diversed PGD initialization time: 0.1721
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00403873,  0.00382139,  0.01023461,  0.00528406,  0.93253517,
           0.00372500,  0.00464845,  0.00155693,  0.00391873,  0.00146981],
         [-0.00403873,  0.00382139,  0.01023461,  0.00528406,  0.93253517,
           0.00372500,  0.00464845,  0.00155693,  0.00391873,  0.00146981]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93657392, 0.92871380, 0.92230058, 0.92725110, 0.92881018,
          0.92788672, 0.93097824, 0.92861646, 0.93106538]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4586 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00403238,  0.00381503,  0.01022679,  0.00528147,  0.93259925,
          0.00372205,  0.00464892,  0.00155434,  0.00391795,  0.00146757]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93657357, 0.92871332, 0.92230058, 0.92725098, 0.92881006, 0.92788643,
         0.93097657, 0.92861629, 0.93106055]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5475 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00208712,  1.01089036, -0.00870283, -0.00610587, -0.00577037,
         -0.00314745, -0.00354713, -0.00162911, -0.00595046, -0.00117508]],
       device='cuda:0')
diversed PGD initialization time: 0.1296
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00207930,  1.01074529, -0.00867437, -0.00608553, -0.00576076,
          -0.00313096, -0.00354181, -0.00160523, -0.00593274, -0.00115532],
         [-0.00207930,  1.01074529, -0.00867437, -0.00608553, -0.00576076,
          -0.00313096, -0.00354181, -0.00160523, -0.00593274, -0.00115532]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01282454, 1.01941967, 1.01683080, 1.01650608, 1.01387620,
          1.01428711, 1.01235056, 1.01667798, 1.01190066]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4396 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00208712,  1.01089036, -0.00870283, -0.00610587, -0.00577037,
         -0.00314745, -0.00354713, -0.00162911, -0.00595046, -0.00117508]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01282454, 1.01941943, 1.01683068, 1.01650596, 1.01387608, 1.01428688,
         1.01235044, 1.01667786, 1.01190054]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5429 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.43513522e-03, -4.43323702e-03,  6.31228089e-04, -3.16604972e-03,
          9.90533829e-01, -2.81823426e-03,  1.07269734e-04, -6.70215487e-03,
         -1.53591484e-03,  7.75769353e-04]], device='cuda:0')
diversed PGD initialization time: 0.1469
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.44298068e-03, -4.43279743e-03,  6.30393624e-04, -3.17014009e-03,
           9.90499854e-01, -2.82015651e-03,  1.03481114e-04, -6.69781864e-03,
          -1.54004246e-03,  7.83212483e-04],
         [-5.44298068e-03, -4.43279743e-03,  6.30393624e-04, -3.17014009e-03,
           9.90499854e-01, -2.82015651e-03,  1.03481114e-04, -6.69781864e-03,
          -1.54004246e-03,  7.83212483e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99594283, 0.99493265, 0.98986948, 0.99366999, 0.99331999,
          0.99039638, 0.99719769, 0.99203992, 0.98971665]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4572 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.43513522e-03, -4.43323702e-03,  6.31228089e-04, -3.16604972e-03,
          9.90533829e-01, -2.81823426e-03,  1.07269734e-04, -6.70215487e-03,
         -1.53591484e-03,  7.75769353e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99593538, 0.99493015, 0.98986435, 0.99366426, 0.99331653, 0.99039251,
         0.99719071, 0.99203503, 0.98971653]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5487 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.97537342e-03,  2.51879692e-02,  5.06376699e-02,  4.01139259e-04,
         -5.97523041e-02,  9.76528972e-03,  1.19148381e-02, -7.26505965e-02,
          1.46179572e-02,  9.88191426e-01]], device='cuda:0')
diversed PGD initialization time: 0.1260
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.98785314e-03,  2.51989812e-02,  5.06730825e-02,  4.04566526e-04,
          -5.96307926e-02,  9.79353487e-03,  1.19232051e-02, -7.27145523e-02,
           1.46325231e-02,  9.87999439e-01],
         [ 7.98785314e-03,  2.51989812e-02,  5.06730825e-02,  4.04566526e-04,
          -5.96307926e-02,  9.79353487e-03,  1.19232051e-02, -7.27145523e-02,
           1.46325231e-02,  9.87999439e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98001158, 0.96280044, 0.93732637, 0.98759484, 1.04763019,
          0.97820592, 0.97607625, 1.06071401, 0.97336692]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4242 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 7.97537342e-03,  2.51879692e-02,  5.06376699e-02,  4.01139259e-04,
         -5.97523041e-02,  9.76528972e-03,  1.19148381e-02, -7.26505965e-02,
          1.46179572e-02,  9.88191426e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98000681, 0.96279633, 0.93732643, 0.98758721, 1.04758084, 0.97819841,
         0.97607195, 1.06067443, 0.97336245]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5072 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.05062565, 0.02459314, 0.05356210, 0.00677804, 0.01399441, 0.55447346,
         0.13357574, 0.03555641, 0.06253521, 0.04559474]], device='cuda:0')
diversed PGD initialization time: 0.1265
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.05073863, 0.02463785, 0.05364394, 0.00680853, 0.01403535,
          0.55368888, 0.13377453, 0.03563513, 0.06265606, 0.04567914],
         [0.05073863, 0.02463785, 0.05364394, 0.00680853, 0.01403535,
          0.55368888, 0.13377453, 0.03563513, 0.06265606, 0.04567914]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.50295025, 0.52905107, 0.50004494, 0.54688036, 0.53965354,
          0.41991436, 0.51805377, 0.49103284, 0.50800973]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3930 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[0.05062565, 0.02459314, 0.05356210, 0.00677804, 0.01399441, 0.55447346,
         0.13357574, 0.03555641, 0.06253521, 0.04559474]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 0] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.50293630, 0.52903616, 0.50002640, 0.54686552, 0.53964037, 0.41991425,
         0.51803595, 0.49102440, 0.50799680]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8033 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00175483,  0.00397733,  0.00341161,  0.00778066,  0.01109941,
          0.00465090,  0.00381281, -0.01488568,  0.00499930,  0.98165607]],
       device='cuda:0')
diversed PGD initialization time: 0.1299
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00176024,  0.00398391,  0.00341970,  0.00779185,  0.01110564,
           0.00464676,  0.00381597, -0.01489870,  0.00499963,  0.98162699],
         [ 0.00176024,  0.00398391,  0.00341970,  0.00779185,  0.01110564,
           0.00464676,  0.00381597, -0.01489870,  0.00499963,  0.98162699]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97986674, 0.97764307, 0.97820729, 0.97383511, 0.97052133,
          0.97698021, 0.97781104, 0.99652570, 0.97662735]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4284 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00175483,  0.00397733,  0.00341161,  0.00778066,  0.01109941,
          0.00465090,  0.00381281, -0.01488568,  0.00499930,  0.98165607]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97986513, 0.97764117, 0.97820532, 0.97383255, 0.97052145, 0.97697824,
         0.97780865, 0.99652106, 0.97662508]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5533 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00468707e+00, -1.58774406e-02,  5.92753291e-04, -6.19041920e-03,
         -1.60357989e-02, -1.54814571e-02, -9.72966850e-03, -1.74486488e-02,
          9.02578235e-04, -1.02806911e-02]], device='cuda:0')
diversed PGD initialization time: 0.1237
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00466526e+00, -1.58777833e-02,  6.02170825e-04, -6.18834794e-03,
          -1.60369016e-02, -1.54853463e-02, -9.71949100e-03, -1.74481273e-02,
           9.05252993e-04, -1.02787241e-02],
         [ 1.00466526e+00, -1.58777833e-02,  6.02170825e-04, -6.18834794e-03,
          -1.60369016e-02, -1.54853463e-02, -9.71949100e-03, -1.74481273e-02,
           9.05252993e-04, -1.02787241e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02054310, 1.00406313, 1.01085365, 1.02070212, 1.02015066,
          1.01438475, 1.02211332, 1.00375998, 1.01494396]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4242 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00468707e+00, -1.58774406e-02,  5.92753291e-04, -6.19041920e-03,
         -1.60357989e-02, -1.54814571e-02, -9.72966850e-03, -1.74486488e-02,
          9.02578235e-04, -1.02806911e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02054012, 1.00406158, 1.01085103, 1.02069628, 1.02014709, 1.01438272,
         1.02211082, 1.00376022, 1.01494348]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6138 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.75900757e-04, -8.18818808e-06,  6.20110333e-03,  1.39238089e-02,
         -3.04193422e-03, -1.74384713e-02,  1.01692677e+00, -2.97103822e-03,
          5.01153618e-03,  6.35114312e-03]], device='cuda:0')
diversed PGD initialization time: 0.1382
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.67407095e-04, -1.00061297e-05,  6.19982183e-03,  1.39119476e-02,
          -3.04278731e-03, -1.73999146e-02,  1.01689506e+00, -2.97169387e-03,
           5.00845164e-03,  6.34920597e-03],
         [-1.67407095e-04, -1.00061297e-05,  6.19982183e-03,  1.39119476e-02,
          -3.04278731e-03, -1.73999146e-02,  1.01689506e+00, -2.97169387e-03,
           5.00845164e-03,  6.34920597e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01706243, 1.01690507, 1.01069522, 1.00298309, 1.01993787,
          1.03429496, 1.01986670, 1.01188660, 1.01054585]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4630 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.75900757e-04, -8.18818808e-06,  6.20110333e-03,  1.39238089e-02,
         -3.04193422e-03, -1.74384713e-02,  1.01692677e+00, -2.97103822e-03,
          5.01153618e-03,  6.35114312e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01706159, 1.01690412, 1.01069474, 1.00298321, 1.01993740, 1.03429222,
         1.01986587, 1.01188660, 1.01054537]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5433 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 4.27175313e-04,  6.36265427e-03,  4.13963199e-03,  5.83321601e-03,
         -7.98184425e-04,  4.91899252e-03,  1.67503953e-03, -1.67421997e-03,
          3.20433080e-03,  9.80199993e-01]], device='cuda:0')
diversed PGD initialization time: 0.1254
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 4.30148095e-04,  6.36713952e-03,  4.14578617e-03,  5.83454967e-03,
          -8.01328570e-04,  4.91894782e-03,  1.67695060e-03, -1.68594718e-03,
           3.20843607e-03,  9.80187416e-01],
         [ 4.30148095e-04,  6.36713952e-03,  4.14578617e-03,  5.83454967e-03,
          -8.01328570e-04,  4.91894782e-03,  1.67695060e-03, -1.68594718e-03,
           3.20843607e-03,  9.80187416e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97975725, 0.97382027, 0.97604162, 0.97435284, 0.98098874,
          0.97526848, 0.97851044, 0.98187339, 0.97697896]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4347 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 4.27175313e-04,  6.36265427e-03,  4.13963199e-03,  5.83321601e-03,
         -7.98184425e-04,  4.91899252e-03,  1.67503953e-03, -1.67421997e-03,
          3.20433080e-03,  9.80199993e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97975749, 0.97382033, 0.97604185, 0.97435158, 0.98098397, 0.97526735,
         0.97851026, 0.98185498, 0.97697914]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5153 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99935031, -0.01237392,  0.01119424,  0.00472860, -0.01393690,
         -0.02420676, -0.01226456, -0.01342438, -0.00454794, -0.00889340]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99931711, -0.01236878,  0.01120518,  0.00473738, -0.01393567,
          -0.02421907, -0.01225561, -0.01341528, -0.00454292, -0.00888544],
         [ 0.99931711, -0.01236878,  0.01120518,  0.00473738, -0.01393567,
          -0.02421907, -0.01225561, -0.01341528, -0.00454292, -0.00888544]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01168585, 0.98811191, 0.99457973, 1.01325274, 1.02353621,
          1.01157272, 1.01273239, 1.00386000, 1.00820255]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4281 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99935031, -0.01237392,  0.01119424,  0.00472860, -0.01393690,
         -0.02420676, -0.01226456, -0.01342438, -0.00454794, -0.00889340]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01168346, 0.98811203, 0.99457818, 1.01324975, 1.02353132, 1.01157117,
         1.01272845, 1.00385714, 1.00820017]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5305 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.78149813e-04,  9.67111707e-01,  1.85154378e-03, -1.64672732e-03,
         -4.16586176e-03, -1.94773823e-03,  6.49397075e-03,  2.59950757e-03,
         -7.18242675e-03, -4.71733510e-03]], device='cuda:0')
diversed PGD initialization time: 0.1243
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.85272568e-04,  9.66985106e-01,  1.87571347e-03, -1.62923336e-03,
          -4.15793434e-03, -1.93501264e-03,  6.50241226e-03,  2.61840224e-03,
          -7.16938823e-03, -4.70371544e-03],
         [ 7.85272568e-04,  9.66985106e-01,  1.87571347e-03, -1.62923336e-03,
          -4.15793434e-03, -1.93501264e-03,  6.50241226e-03,  2.61840224e-03,
          -7.16938823e-03, -4.70371544e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96619982, 0.96510941, 0.96861434, 0.97114307, 0.96892011,
          0.96048272, 0.96436667, 0.97415447, 0.97168881]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4265 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 7.78149813e-04,  9.67111707e-01,  1.85154378e-03, -1.64672732e-03,
         -4.16586176e-03, -1.94773823e-03,  6.49397075e-03,  2.59950757e-03,
         -7.18242675e-03, -4.71733510e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96619976, 0.96510917, 0.96861422, 0.97114283, 0.96891963, 0.96048301,
         0.96436644, 0.97415382, 0.97168791]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5469 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01031997, -0.01604795,  0.00183789, -0.00606862, -0.04290133,
          1.02160561, -0.00935398, -0.03993075, -0.00886821,  0.00310133]],
       device='cuda:0')
diversed PGD initialization time: 0.1325
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01032524, -0.01604534,  0.00184652, -0.00605571, -0.04290302,
           1.02156830, -0.00936004, -0.03993036, -0.00886432,  0.00310713],
         [-0.01032524, -0.01604534,  0.00184652, -0.00605571, -0.04290302,
           1.02156830, -0.00936004, -0.03993036, -0.00886432,  0.00310713]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03189349, 1.03761363, 1.01972175, 1.02762401, 1.06447136,
          1.03092837, 1.06149864, 1.03043258, 1.01846123]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4322 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01031997, -0.01604795,  0.00183789, -0.00606862, -0.04290133,
          1.02160561, -0.00935398, -0.03993075, -0.00886821,  0.00310133]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03188968, 1.03761160, 1.01972091, 1.02762282, 1.06445944, 1.03092229,
         1.06149065, 1.03043175, 1.01846111]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.83600187e-03,  8.57228786e-03,  1.25346780e-02,  1.96565241e-02,
         -1.97593123e-04,  4.51152772e-03,  7.45961070e-03, -1.01623982e-02,
          5.03894687e-03,  9.55177605e-01]], device='cuda:0')
diversed PGD initialization time: 0.1240
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.83911249e-03,  8.58133286e-03,  1.25485212e-02,  1.96762234e-02,
          -1.65212899e-04,  4.50800359e-03,  7.46420026e-03, -1.01354718e-02,
           5.03653288e-03,  9.55071092e-01],
         [ 1.83911249e-03,  8.58133286e-03,  1.25485212e-02,  1.96762234e-02,
          -1.65212899e-04,  4.50800359e-03,  7.46420026e-03, -1.01354718e-02,
           5.03653288e-03,  9.55071092e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.95323199, 0.94648975, 0.94252259, 0.93539488, 0.95523632,
          0.95056307, 0.94760692, 0.96520656, 0.95003456]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4258 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.83600187e-03,  8.57228786e-03,  1.25346780e-02,  1.96565241e-02,
         -1.97593123e-04,  4.51152772e-03,  7.45961070e-03, -1.01623982e-02,
          5.03894687e-03,  9.55177605e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95323133, 0.94648826, 0.94252139, 0.93539470, 0.95523447, 0.95055878,
         0.94760644, 0.96519858, 0.95003068]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5403 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.80774450e-04, -1.42060444e-02, -1.42274648e-02, -9.70579684e-03,
          5.09214029e-03, -1.87484920e-03, -2.71189958e-03,  1.00247860e+00,
          1.12742186e-03,  1.52814388e-03]], device='cuda:0')
diversed PGD initialization time: 0.1189
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 6.80126250e-04, -1.42019764e-02, -1.42104030e-02, -9.68968868e-03,
           5.10104373e-03, -1.86841190e-03, -2.71005929e-03,  1.00241768e+00,
           1.13209337e-03,  1.54379010e-03],
         [ 6.80126250e-04, -1.42019764e-02, -1.42104030e-02, -9.68968868e-03,
           5.10104373e-03, -1.86841190e-03, -2.71005929e-03,  1.00241768e+00,
           1.13209337e-03,  1.54379010e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00173759, 1.01661968, 1.01662803, 1.01210737, 0.99731666,
          1.00428605, 1.00512779, 1.00128555, 1.00087392]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4101 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.80774450e-04, -1.42060444e-02, -1.42274648e-02, -9.70579684e-03,
          5.09214029e-03, -1.87484920e-03, -2.71189958e-03,  1.00247860e+00,
          1.12742186e-03,  1.52814388e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00173652, 1.01661825, 1.01662552, 1.01210666, 0.99731642, 1.00428534,
         1.00512707, 1.00128484, 1.00087237]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5044 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01870070, -0.02688348, -0.01832844,  0.87718892, -0.04482957,
          0.07153806, -0.01994596, -0.07481536, -0.01444381,  0.23745129]],
       device='cuda:0')
diversed PGD initialization time: 0.1293
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01873837, -0.02695476, -0.01843110,  0.87665713, -0.04487571,
           0.07139711, -0.01997698, -0.07510556, -0.01450974,  0.23878938],
         [-0.01873837, -0.02695476, -0.01843110,  0.87665713, -0.04487571,
           0.07139711, -0.01997698, -0.07510556, -0.01450974,  0.23878938]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.89539552, 0.90361190, 0.89508820, 0.92153287, 0.80526000,
          0.89663410, 0.95176268, 0.89116687, 0.63786775]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4407 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01870070, -0.02688348, -0.01832844,  0.87718892, -0.04482957,
          0.07153806, -0.01994596, -0.07481536, -0.01444381,  0.23745129]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89529324, 0.90348291, 0.89492249, 0.92140442, 0.80483717, 0.89652449,
         0.95147228, 0.89103425, 0.63786781]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.15247574e-03, -3.13531607e-03, -1.09000504e-03, -4.64010239e-03,
          9.78728592e-01, -3.11692059e-03, -6.09185547e-04, -6.08648360e-03,
         -3.38897854e-03,  2.88482010e-03]], device='cuda:0')
diversed PGD initialization time: 0.1353
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.15894657e-03, -3.13510001e-03, -1.08769536e-03, -4.64215875e-03,
           9.78680432e-01, -3.11864913e-03, -6.13048673e-04, -6.07848167e-03,
          -3.39204818e-03,  2.90013850e-03],
         [-9.15894657e-03, -3.13510001e-03, -1.08769536e-03, -4.64215875e-03,
           9.78680432e-01, -3.11864913e-03, -6.13048673e-04, -6.07848167e-03,
          -3.39204818e-03,  2.90013850e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98783940, 0.98181552, 0.97976816, 0.98332262, 0.98179907,
          0.97929347, 0.98475891, 0.98207247, 0.97578031]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4319 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.15247574e-03, -3.13531607e-03, -1.09000504e-03, -4.64010239e-03,
          9.78728592e-01, -3.11692059e-03, -6.09185547e-04, -6.08648360e-03,
         -3.38897854e-03,  2.88482010e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98783481, 0.98181355, 0.97976506, 0.98331898, 0.98179668, 0.97929078,
         0.98475415, 0.98206937, 0.97578025]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5307 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.79111212e-03,  2.27614492e-03, -2.03554332e-03,  5.61028719e-04,
          1.81734525e-02,  2.99964100e-03, -1.22010708e-03, -9.83753800e-03,
          1.50095671e-03,  9.98472691e-01]], device='cuda:0')
diversed PGD initialization time: 0.1242
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.78794190e-03,  2.27792561e-03, -2.03014910e-03,  6.07192516e-04,
           1.81393586e-02,  3.02544236e-03, -1.20995194e-03, -9.79404151e-03,
           1.52345002e-03,  9.98365462e-01],
         [-1.78794190e-03,  2.27792561e-03, -2.03014910e-03,  6.07192516e-04,
           1.81393586e-02,  3.02544236e-03, -1.20995194e-03, -9.79404151e-03,
           1.52345002e-03,  9.98365462e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00015342, 0.99608755, 1.00039566, 0.99775827, 0.98022610,
          0.99533999, 0.99957544, 1.00815952, 0.99684203]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4240 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.79111212e-03,  2.27614492e-03, -2.03554332e-03,  5.61028719e-04,
          1.81734525e-02,  2.99964100e-03, -1.22010708e-03, -9.83753800e-03,
          1.50095671e-03,  9.98472691e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00014341, 0.99607855, 1.00038457, 0.99774766, 0.98022622, 0.99532968,
         0.99956441, 1.00814319, 0.99683291]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5406 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.96038894e-02, -6.51784241e-03, -4.96385992e-03,  2.28454024e-02,
         -5.06981835e-03, -4.24765572e-02,  1.06546605e+00, -1.11417025e-02,
         -1.10824555e-02,  9.39443707e-04]], device='cuda:0')
diversed PGD initialization time: 0.1275
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.95998065e-02, -6.49915636e-03, -4.92887199e-03,  2.28324533e-02,
          -5.05699962e-03, -4.24543396e-02,  1.06531215e+00, -1.11171007e-02,
          -1.10174716e-02,  9.56296921e-04],
         [ 1.95998065e-02, -6.49915636e-03, -4.92887199e-03,  2.28324533e-02,
          -5.05699962e-03, -4.24543396e-02,  1.06531215e+00, -1.11171007e-02,
          -1.10174716e-02,  9.56296921e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04571235, 1.07181132, 1.07024097, 1.04247975, 1.07036912,
          1.10776651, 1.07642925, 1.07632959, 1.06435585]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4216 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.96038894e-02, -6.51784241e-03, -4.96385992e-03,  2.28454024e-02,
         -5.06981835e-03, -4.24765572e-02,  1.06546605e+00, -1.11417025e-02,
         -1.10824555e-02,  9.39443707e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04571176, 1.07181048, 1.07024014, 1.04247952, 1.07036841, 1.10776198,
         1.07642829, 1.07632875, 1.06435525]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5487 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00193233,  0.00276577,  0.01307753,  0.01754732, -0.00244879,
         -0.01128992,  0.99674886, -0.00161661,  0.01504923,  0.01082405]],
       device='cuda:0')
diversed PGD initialization time: 0.1285
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00193578,  0.00276940,  0.01308450,  0.01755086, -0.00244706,
          -0.01129087,  0.99672800, -0.00161305,  0.01505802,  0.01082814],
         [-0.00193578,  0.00276940,  0.01308450,  0.01755086, -0.00244706,
          -0.01129087,  0.99672800, -0.00161305,  0.01505802,  0.01082814]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99866378, 0.99395859, 0.98364353, 0.97917712, 0.99917507,
          1.00801885, 0.99834108, 0.98166996, 0.98589987]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4381 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00193233,  0.00276577,  0.01307753,  0.01754732, -0.00244879,
         -0.01128992,  0.99674886, -0.00161661,  0.01504923,  0.01082405]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99866116, 0.99395770, 0.98364300, 0.97917724, 0.99917400, 1.00800991,
         0.99833965, 0.98166972, 0.98589933]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5448 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.80167973e-03, -1.87998861e-02, -4.07956541e-03, -4.31270897e-03,
         -4.31533195e-02,  1.03864682e+00, -6.31705672e-03, -4.35708612e-02,
         -1.07494593e-02,  7.94209540e-04]], device='cuda:0')
diversed PGD initialization time: 0.1336
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.80217147e-03, -1.87942684e-02, -4.07412648e-03, -4.30928171e-03,
          -4.31407727e-02,  1.03862631e+00, -6.31446391e-03, -4.35581207e-02,
          -1.07453540e-02,  7.96414912e-04],
         [-6.80217147e-03, -1.87942684e-02, -4.07412648e-03, -4.30928171e-03,
          -4.31407727e-02,  1.03862631e+00, -6.31446391e-03, -4.35581207e-02,
          -1.07453540e-02,  7.96414912e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04542851, 1.05742061, 1.04270041, 1.04293561, 1.08176708,
          1.04494083, 1.08218443, 1.04937172, 1.03782988]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4292 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-6.80167973e-03, -1.87998861e-02, -4.07956541e-03, -4.31270897e-03,
         -4.31533195e-02,  1.03864682e+00, -6.31705672e-03, -4.35708612e-02,
         -1.07494593e-02,  7.94209540e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04542363, 1.05741632, 1.04269946, 1.04293072, 1.08175325, 1.04493558,
         1.08217645, 1.04937041, 1.03783011]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5282 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.40494853e-03,  8.88928771e-04,  1.27016157e-02,  3.97325307e-03,
          9.76094246e-01,  4.78630513e-03,  7.29671121e-03, -2.35994011e-02,
          5.80566376e-03, -9.54262912e-03]], device='cuda:0')
diversed PGD initialization time: 0.1238
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.40139461e-03,  9.00045037e-04,  1.27335042e-02,  3.98144871e-03,
           9.76027846e-01,  4.80173528e-03,  7.30704516e-03, -2.36333013e-02,
           5.81847876e-03, -9.57269967e-03],
         [-1.40139461e-03,  9.00045037e-04,  1.27335042e-02,  3.98144871e-03,
           9.76027846e-01,  4.80173528e-03,  7.30704516e-03, -2.36333013e-02,
           5.81847876e-03, -9.57269967e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97742927, 0.97512782, 0.96329433, 0.97204638, 0.97122610,
          0.96872079, 0.99966115, 0.97020936, 0.98560053]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4240 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.40494853e-03,  8.88928771e-04,  1.27016157e-02,  3.97325307e-03,
          9.76094246e-01,  4.78630513e-03,  7.29671121e-03, -2.35994011e-02,
          5.80566376e-03, -9.54262912e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97742021, 0.97512513, 0.96329445, 0.97204089, 0.97122294, 0.96871775,
         0.99941123, 0.97020721, 0.98554349]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5595 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00367248e+00, -9.84361768e-03, -4.22126055e-03, -1.11633986e-02,
         -6.05255738e-03,  7.09953159e-03, -6.28251582e-03, -1.30044967e-02,
          8.93115997e-04, -8.36862624e-03]], device='cuda:0')
diversed PGD initialization time: 0.1265
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00366819e+00, -9.84086841e-03, -4.21652198e-03, -1.11607462e-02,
          -6.04939833e-03,  7.10190088e-03, -6.27768040e-03, -1.30021274e-02,
           8.91603529e-04, -8.36647302e-03],
         [ 1.00366819e+00, -9.84086841e-03, -4.21652198e-03, -1.11607462e-02,
          -6.04939833e-03,  7.10190088e-03, -6.27768040e-03, -1.30021274e-02,
           8.91603529e-04, -8.36647302e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01350904, 1.00788474, 1.01482892, 1.00971758, 0.99656630,
          1.00994587, 1.01667035, 1.00277662, 1.01203465]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4254 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00367248e+00, -9.84361768e-03, -4.22126055e-03, -1.11633986e-02,
         -6.05255738e-03,  7.09953159e-03, -6.28251582e-03, -1.30044967e-02,
          8.93115997e-04, -8.36862624e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01350665, 1.00788116, 1.01482582, 1.00971389, 0.99656630, 1.00994408,
         1.01666749, 1.00277376, 1.01203275]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.06543976e-04, -1.51199102e-02, -2.02062726e-02, -1.52675360e-02,
         -7.34329224e-05, -5.93406707e-03, -4.77884710e-03,  1.04047358e+00,
         -2.69557536e-03, -1.70519203e-03]], device='cuda:0')
diversed PGD initialization time: 0.1195
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.06469470e-04, -1.51093304e-02, -2.01910585e-02, -1.52586997e-02,
          -6.37620687e-05, -5.92639297e-03, -4.77389246e-03,  1.04041219e+00,
          -2.68985331e-03, -1.69871747e-03],
         [-8.06469470e-04, -1.51093304e-02, -2.01910585e-02, -1.52586997e-02,
          -6.37620687e-05, -5.92639297e-03, -4.77389246e-03,  1.04041219e+00,
          -2.68985331e-03, -1.69871747e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04121864, 1.05552149, 1.06060326, 1.05567086, 1.04047596,
          1.04633856, 1.04518604, 1.04310203, 1.04211092]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4198 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.06543976e-04, -1.51199102e-02, -2.02062726e-02, -1.52675360e-02,
         -7.34329224e-05, -5.93406707e-03, -4.77884710e-03,  1.04047358e+00,
         -2.69557536e-03, -1.70519203e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04121804, 1.05552030, 1.06059980, 1.05566883, 1.04047608, 1.04633808,
         1.04518569, 1.04310143, 1.04210937]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5435 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.20487639e-03, -4.06265259e-04,  6.03215396e-03,  2.05695629e-03,
          9.55336988e-01,  1.55948848e-03,  3.23063880e-03,  2.17755139e-03,
          2.11397558e-03,  3.86197120e-03]], device='cuda:0')
diversed PGD initialization time: 0.1255
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.20751762e-03, -4.03970480e-04,  6.03576005e-03,  2.05786526e-03,
           9.55296874e-01,  1.56053156e-03,  3.23010981e-03,  2.18449533e-03,
           2.11407244e-03,  3.86887044e-03],
         [-2.20751762e-03, -4.03970480e-04,  6.03576005e-03,  2.05786526e-03,
           9.55296874e-01,  1.56053156e-03,  3.23010981e-03,  2.18449533e-03,
           2.11407244e-03,  3.86887044e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.95750439, 0.95570087, 0.94926113, 0.95323902, 0.95373636,
          0.95206678, 0.95311236, 0.95318282, 0.95142800]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4081 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-2.20487639e-03, -4.06265259e-04,  6.03215396e-03,  2.05695629e-03,
          9.55336988e-01,  1.55948848e-03,  3.23063880e-03,  2.17755139e-03,
          2.11397558e-03,  3.86197120e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95750409, 0.95569986, 0.94926131, 0.95323902, 0.95373601, 0.95206642,
         0.95311183, 0.95318276, 0.95141912]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4968 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00542343e+00, -2.73254812e-02, -9.09686089e-04, -1.62501037e-02,
         -2.62377225e-02, -2.95572728e-03,  8.43650103e-03, -3.40563506e-02,
         -3.95689905e-03, -1.80461481e-02]], device='cuda:0')
diversed PGD initialization time: 0.1127
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00540268e+00, -2.73234695e-02, -8.99657607e-04, -1.62475556e-02,
          -2.62350328e-02, -2.95896083e-03,  8.45160335e-03, -3.40543836e-02,
          -3.95503640e-03, -1.80431157e-02],
         [ 1.00540268e+00, -2.73234695e-02, -8.99657607e-04, -1.62475556e-02,
          -2.62350328e-02, -2.95896083e-03,  8.45160335e-03, -3.40543836e-02,
          -3.95503640e-03, -1.80431157e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03272617, 1.00630236, 1.02165020, 1.03163767, 1.00836170,
          0.99695110, 1.03945708, 1.00935769, 1.02344584]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4342 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00542343e+00, -2.73254812e-02, -9.09686089e-04, -1.62501037e-02,
         -2.62377225e-02, -2.95572728e-03,  8.43650103e-03, -3.40563506e-02,
         -3.95689905e-03, -1.80461481e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03272235, 1.00629950, 1.02164543, 1.03163266, 1.00835729, 0.99695092,
         1.03945267, 1.00935543, 1.02344382]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5516 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.81193650e-03,  9.44215178e-01,  5.75941801e-03,  2.34039128e-03,
         -2.11819261e-03,  2.58749723e-03,  2.52747536e-03,  8.26744735e-03,
         -6.62215054e-04,  3.45056504e-03]], device='cuda:0')
diversed PGD initialization time: 0.1269
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.81781128e-03,  9.44109678e-01,  5.77858090e-03,  2.35556066e-03,
          -2.11124495e-03,  2.59893388e-03,  2.53286213e-03,  8.28360021e-03,
          -6.49802387e-04,  3.46414000e-03],
         [ 1.81781128e-03,  9.44109678e-01,  5.77858090e-03,  2.35556066e-03,
          -2.11124495e-03,  2.59893388e-03,  2.53286213e-03,  8.28360021e-03,
          -6.49802387e-04,  3.46414000e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94229186, 0.93833113, 0.94175410, 0.94622093, 0.94151074,
          0.94157684, 0.93582606, 0.94475949, 0.94064552]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4218 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.81193650e-03,  9.44215178e-01,  5.75941801e-03,  2.34039128e-03,
         -2.11819261e-03,  2.58749723e-03,  2.52747536e-03,  8.26744735e-03,
         -6.62215054e-04,  3.45056504e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94229168, 0.93833095, 0.94175386, 0.94622070, 0.94151062, 0.94157600,
         0.93582612, 0.94475931, 0.94064546]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5333 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.92510970e-02, -1.28677636e-02,  2.12607235e-02,  9.58380103e-01,
         -5.16735576e-02,  3.77550051e-02, -1.32934004e-03, -3.31254900e-02,
          5.81763685e-04,  2.14622170e-03]], device='cuda:0')
diversed PGD initialization time: 0.1291
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.92525499e-02, -1.28736049e-02,  2.12737173e-02,  9.58336592e-01,
          -5.16837575e-02,  3.77720520e-02, -1.32307038e-03, -3.31312865e-02,
           5.90480864e-04,  2.15201080e-03],
         [-1.92525499e-02, -1.28736049e-02,  2.12737173e-02,  9.58336592e-01,
          -5.16837575e-02,  3.77720520e-02, -1.32307038e-03, -3.31312865e-02,
           5.90480864e-04,  2.15201080e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97758913, 0.97121018, 0.93706286, 1.01002038, 0.92056453,
          0.95965964, 0.99146789, 0.95774609, 0.95618457]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4284 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.92510970e-02, -1.28677636e-02,  2.12607235e-02,  9.58380103e-01,
         -5.16735576e-02,  3.77550051e-02, -1.32934004e-03, -3.31254900e-02,
          5.81763685e-04,  2.14622170e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97758645, 0.97120690, 0.93705726, 1.01001024, 0.92056501, 0.95965648,
         0.99146068, 0.95774466, 0.95618200]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5281 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.20669603e-04,  9.73913670e-01,  2.60327756e-03, -2.34080851e-03,
         -3.95470485e-03,  5.94593585e-04, -2.35819817e-03,  5.99978864e-03,
         -2.56469101e-03,  1.90927088e-03]], device='cuda:0')
diversed PGD initialization time: 0.1273
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.12134963e-04,  9.73757863e-01,  2.63504684e-03, -2.31964886e-03,
          -3.94481793e-03,  6.11200929e-04, -2.35012174e-03,  6.02485240e-03,
          -2.54770368e-03,  1.92754716e-03],
         [-1.12134963e-04,  9.73757863e-01,  2.63504684e-03, -2.31964886e-03,
          -3.94481793e-03,  6.11200929e-04, -2.35012174e-03,  6.02485240e-03,
          -2.54770368e-03,  1.92754716e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97386998, 0.97112280, 0.97607750, 0.97770268, 0.97314668,
          0.97610795, 0.96773303, 0.97630554, 0.97183031]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4284 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.20669603e-04,  9.73913670e-01,  2.60327756e-03, -2.34080851e-03,
         -3.95470485e-03,  5.94593585e-04, -2.35819817e-03,  5.99978864e-03,
         -2.56469101e-03,  1.90927088e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97386479, 0.97111887, 0.97607154, 0.97769755, 0.97314167, 0.97610110,
         0.96772873, 0.97630036, 0.97182500]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5194 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.67470388e-02, -8.68286192e-03,  1.29524916e-02,  9.96457934e-01,
         -4.47862111e-02,  7.30768591e-03, -4.84431535e-03, -3.06050181e-02,
         -2.97664106e-03,  1.68398023e-04]], device='cuda:0')
diversed PGD initialization time: 0.1258
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.67433359e-02, -8.67873430e-03,  1.29566640e-02,  9.96412396e-01,
          -4.47776206e-02,  7.32056051e-03, -4.84248996e-03, -3.05948704e-02,
          -2.97136605e-03,  1.73047185e-04],
         [-1.67433359e-02, -8.67873430e-03,  1.29566640e-02,  9.96412396e-01,
          -4.47776206e-02,  7.32056051e-03, -4.84248996e-03, -3.05948704e-02,
          -2.97136605e-03,  1.73047185e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01315570, 1.00509119, 0.98345572, 1.04119003, 0.98909181,
          1.00125492, 1.02700722, 0.99938375, 0.99623936]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4307 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.67470388e-02, -8.68286192e-03,  1.29524916e-02,  9.96457934e-01,
         -4.47862111e-02,  7.30768591e-03, -4.84431535e-03, -3.06050181e-02,
         -2.97664106e-03,  1.68398023e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01315165, 1.00508952, 0.98345572, 1.04118013, 0.98907876, 1.00125337,
         1.02700090, 0.99938202, 0.99623764]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5448 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.10971145e-02, -4.62532043e-05,  7.00609386e-03, -2.78744102e-03,
          9.61082399e-01, -1.02318823e-04, -1.28224492e-03, -2.79829800e-02,
         -1.34815276e-03,  1.58955157e-03]], device='cuda:0')
diversed PGD initialization time: 0.1339
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.10923573e-02, -3.44365835e-05,  7.02165067e-03, -2.77455151e-03,
           9.60960686e-01, -8.98391008e-05, -1.27557293e-03, -2.79798806e-02,
          -1.34046376e-03,  1.62804127e-03],
         [-1.10923573e-02, -3.44365835e-05,  7.02165067e-03, -2.77455151e-03,
           9.60960686e-01, -8.98391008e-05, -1.27557293e-03, -2.79798806e-02,
          -1.34046376e-03,  1.62804127e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97205305, 0.96099514, 0.95393902, 0.96373522, 0.96105051,
          0.96223629, 0.98894060, 0.96230114, 0.95933264]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4165 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.10971145e-02, -4.62532043e-05,  7.00609386e-03, -2.78744102e-03,
          9.61082399e-01, -1.02318823e-04, -1.28224492e-03, -2.79829800e-02,
         -1.34815276e-03,  1.58955157e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97205228, 0.96099430, 0.95393884, 0.96373481, 0.96105003, 0.96223545,
         0.98893583, 0.96230078, 0.95931756]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5198 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.06179747e-03, -2.31121778e-02, -1.65129155e-02, -2.14579552e-02,
          2.28069723e-04, -4.66480851e-03, -3.54619324e-03,  1.02104735e+00,
          1.15818530e-03, -1.98818743e-04]], device='cuda:0')
diversed PGD initialization time: 0.1290
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.06179747e-03, -2.31041312e-02, -1.65015161e-02, -2.14461386e-02,
           2.30032951e-04, -4.66100127e-03, -3.54386866e-03,  1.02100539e+00,
           1.16151571e-03, -2.01284885e-04],
         [ 3.06179747e-03, -2.31041312e-02, -1.65015161e-02, -2.14461386e-02,
           2.30032951e-04, -4.66100127e-03, -3.54386866e-03,  1.02100539e+00,
           1.16151571e-03, -2.01284885e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01794362, 1.04410958, 1.03750694, 1.04245150, 1.02077532,
          1.02566636, 1.02454925, 1.01984382, 1.02120662]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4147 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 3.06179747e-03, -2.31121778e-02, -1.65129155e-02, -2.14579552e-02,
          2.28069723e-04, -4.66480851e-03, -3.54619324e-03,  1.02104735e+00,
          1.15818530e-03, -1.98818743e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01794386, 1.04410505, 1.03750598, 1.04244590, 1.02077436, 1.02566540,
         1.02454782, 1.01984298, 1.02119637]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5175 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01310483, -0.02462848,  1.03063273, -0.01132144, -0.00764753,
          0.00422164, -0.01221813, -0.03002878, -0.00552006, -0.01690963]],
       device='cuda:0')
diversed PGD initialization time: 0.1316
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01309808, -0.02461800,  1.03058910, -0.01131327, -0.00763420,
           0.00422091, -0.01221135, -0.03000821, -0.00551464, -0.01689842],
         [-0.01309808, -0.02461800,  1.03058910, -0.01131327, -0.00763420,
           0.00422091, -0.01221135, -0.03000821, -0.00551464, -0.01689842]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04368722, 1.05520713, 1.04190242, 1.03822327, 1.02636814,
          1.04280043, 1.06059730, 1.03610373, 1.04748750]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4256 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01310483, -0.02462848,  1.03063273, -0.01132144, -0.00764753,
          0.00422164, -0.01221813, -0.03002878, -0.00552006, -0.01690963]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04368496, 1.05520201, 1.04189968, 1.03821909, 1.02636838, 1.04279888,
         1.06059301, 1.03610206, 1.04748452]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5251 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.56815383e-03, -3.36018205e-03,  2.25216150e-03, -7.96963274e-03,
         -2.93905661e-03,  2.89876014e-03, -4.80752438e-04,  9.90116239e-01,
          4.98686731e-03, -2.12450027e-02]], device='cuda:0')
diversed PGD initialization time: 0.1352
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.57140973e-03, -3.30110639e-03,  2.30628252e-03, -7.94860721e-03,
          -2.95063108e-03,  2.91366130e-03, -4.74087894e-04,  9.90011334e-01,
           4.99710441e-03, -2.12909654e-02],
         [ 3.57140973e-03, -3.30110639e-03,  2.30628252e-03, -7.94860721e-03,
          -2.95063108e-03,  2.91366130e-03, -4.74087894e-04,  9.90011334e-01,
           4.99710441e-03, -2.12909654e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98643994, 0.99331242, 0.98770505, 0.99795997, 0.99296194,
          0.98709768, 0.99048543, 0.98501420, 1.01130235]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4162 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 3.56815383e-03, -3.36018205e-03,  2.25216150e-03, -7.96963274e-03,
         -2.93905661e-03,  2.89876014e-03, -4.80752438e-04,  9.90116239e-01,
          4.98686731e-03, -2.12450027e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98643970, 0.99329507, 0.98770398, 0.99795914, 0.99295998, 0.98709774,
         0.99048525, 0.98501426, 1.01128972]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5313 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.91922212e-04,  9.64024603e-01,  9.29802656e-04, -1.09121203e-04,
         -3.34159285e-03,  3.64802778e-04,  1.86029822e-03,  4.64253128e-03,
         -2.76923180e-03,  1.14209950e-03]], device='cuda:0')
diversed PGD initialization time: 0.1269
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.97700137e-04,  9.63916838e-01,  9.51275229e-04, -9.41529870e-05,
          -3.33450735e-03,  3.76954675e-04,  1.86447799e-03,  4.66027856e-03,
          -2.75642425e-03,  1.15636736e-03],
         [ 7.97700137e-04,  9.63916838e-01,  9.51275229e-04, -9.41529870e-05,
          -3.33450735e-03,  3.76954675e-04,  1.86447799e-03,  4.66027856e-03,
          -2.75642425e-03,  1.15636736e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96311915, 0.96296555, 0.96401101, 0.96725136, 0.96353990,
          0.96205235, 0.95925653, 0.96667325, 0.96276045]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4209 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 7.91922212e-04,  9.64024603e-01,  9.29802656e-04, -1.09121203e-04,
         -3.34159285e-03,  3.64802778e-04,  1.86029822e-03,  4.64253128e-03,
         -2.76923180e-03,  1.14209950e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96311909, 0.96296561, 0.96401083, 0.96725130, 0.96353978, 0.96205151,
         0.95925671, 0.96667296, 0.96275997]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5716 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00116015,  0.06847097,  0.86528254,  0.02063693,  0.00454234,
          0.00944312, -0.00648018, -0.01239191,  0.01422424,  0.00149939]],
       device='cuda:0')
diversed PGD initialization time: 0.1300
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00124224,  0.06859908,  0.86389250,  0.02107241,  0.00462407,
           0.00949139, -0.00636803, -0.01220481,  0.01437157,  0.00163396],
         [ 0.00124224,  0.06859908,  0.86389250,  0.02107241,  0.00462407,
           0.00949139, -0.00636803, -0.01220481,  0.01437157,  0.00163396]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.86265028, 0.79529345, 0.84282011, 0.85926843, 0.85440111,
          0.87026054, 0.87609732, 0.84952092, 0.86225855]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4175 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00116015,  0.06847097,  0.86528254,  0.02063693,  0.00454234,
          0.00944312, -0.00648018, -0.01239191,  0.01422424,  0.00149939]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.86264628, 0.79529369, 0.84279239, 0.85926503, 0.85439503, 0.87025607,
         0.87609124, 0.84951717, 0.86225390]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5079 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.00003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=9.804964065551758e-06, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.21825796e-04,  9.87222195e-01, -2.84682214e-03, -4.18472290e-03,
         -5.20771369e-03, -3.87730449e-03,  5.57762384e-03, -9.15706158e-04,
         -9.44996625e-03, -6.77204132e-03]], device='cuda:0')
diversed PGD initialization time: 0.1290
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.17586416e-04,  9.87136364e-01, -2.82831490e-03, -4.17290628e-03,
          -5.20169362e-03, -3.86599451e-03,  5.57696819e-03, -8.99329782e-04,
          -9.43756849e-03, -6.75730407e-03],
         [-4.17586416e-04,  9.87136364e-01, -2.82831490e-03, -4.17290628e-03,
          -5.20169362e-03, -3.86599451e-03,  5.57696819e-03, -8.99329782e-04,
          -9.43756849e-03, -6.75730407e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98755395, 0.98996466, 0.99130929, 0.99233806, 0.99100238,
          0.98155940, 0.98803568, 0.99657393, 0.99389368]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4069 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.21825796e-04,  9.87222195e-01, -2.84682214e-03, -4.18472290e-03,
         -5.20771369e-03, -3.87730449e-03,  5.57762384e-03, -9.15706158e-04,
         -9.44996625e-03, -6.77204132e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98755372, 0.98996365, 0.99130893, 0.99233770, 0.99100149, 0.98155981,
         0.98803473, 0.99657273, 0.99389213]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4972 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.76568159e-03, -1.08296126e-02,  4.46438789e-05, -1.02872401e-02,
          1.17706507e-03,  2.52565742e-03,  5.39552420e-04,  9.94357347e-01,
          5.07091731e-03, -1.64081529e-02]], device='cuda:0')
diversed PGD initialization time: 0.1297
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01074270, -0.00352389,  0.02077705,  0.00123123,  0.00198330,
           0.01043081,  0.00389177,  0.92848396,  0.01139629, -0.01778122],
         [ 0.01074270, -0.00352389,  0.02077705,  0.00123123,  0.00198330,
           0.01043081,  0.00389177,  0.92848396,  0.01139629, -0.01778122]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.91774124, 0.93200785, 0.90770692, 0.92725271, 0.92650068,
          0.91805315, 0.92459220, 0.91708767, 0.94626516]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4538 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.76568159e-03, -1.08296126e-02,  4.46438789e-05, -1.02872401e-02,
          1.17706507e-03,  2.52565742e-03,  5.39552420e-04,  9.94357347e-01,
          5.07091731e-03, -1.64081529e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 4] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.88214910, 0.89866138, 0.86085439, 0.89309448, 0.89294624, 0.88540041,
         0.89249569, 0.88408720, 0.91152465]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7486 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.11658610e-02, -3.18943560e-02,  1.03030872e+00, -1.79622769e-02,
         -4.36865166e-03,  4.52227890e-03, -1.58604309e-02, -2.53093094e-02,
         -4.54999506e-04, -1.38381347e-02]], device='cuda:0')
diversed PGD initialization time: 0.1300
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.11253448e-02, -3.05461287e-02,  1.02595878e+00, -1.74057484e-02,
          -4.19198349e-03,  4.89491969e-03, -1.52220950e-02, -2.52244174e-02,
          -4.64513898e-04, -1.36273578e-02],
         [-1.11253448e-02, -3.05461287e-02,  1.02595878e+00, -1.74057484e-02,
          -4.19198349e-03,  4.89491969e-03, -1.52220950e-02, -2.52244174e-02,
          -4.64513898e-04, -1.36273578e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03708410, 1.05650496, 1.04336452, 1.03015077, 1.02106380,
          1.04118085, 1.05118322, 1.02642334, 1.03958619]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4760 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.11658610e-02, -3.18943560e-02,  1.03030872e+00, -1.79622769e-02,
         -4.36865166e-03,  4.52227890e-03, -1.58604309e-02, -2.53093094e-02,
         -4.54999506e-04, -1.38381347e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 5] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03293395, 1.05163085, 1.03942227, 1.02588773, 1.01830089, 1.03771627,
         1.04603720, 1.02337098, 1.03578770]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5696 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00144235,  0.99862927, -0.00515087, -0.00457099, -0.00506665,
         -0.00129763, -0.00496749,  0.00163253, -0.00332109,  0.00166848]],
       device='cuda:0')
diversed PGD initialization time: 0.1158
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.32405281e-04,  9.83399868e-01, -2.34417617e-03, -2.36936659e-03,
          -4.01134416e-03,  4.78424132e-04, -4.40775603e-03,  4.07199562e-03,
          -1.42499059e-03,  3.85179371e-03],
         [-6.32405281e-04,  9.83399868e-01, -2.34417617e-03, -2.36936659e-03,
          -4.01134416e-03,  4.78424132e-04, -4.40775603e-03,  4.07199562e-03,
          -1.42499059e-03,  3.85179371e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98403227, 0.98574406, 0.98576921, 0.98741120, 0.98292142,
          0.98780763, 0.97932786, 0.98482484, 0.97954810]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4097 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00144235,  0.99862927, -0.00515087, -0.00457099, -0.00506665,
         -0.00129763, -0.00496749,  0.00163253, -0.00332109,  0.00166848]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 11] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97841102, 0.97982222, 0.97960502, 0.98176658, 0.97712141, 0.98196018,
         0.97342366, 0.97888994, 0.97355342]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5162 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00593972e+00, -1.49032921e-02, -4.87239659e-03, -1.41212046e-02,
         -1.20147280e-02,  8.63872468e-03, -9.62037593e-04, -1.92518085e-02,
         -8.43867660e-04, -1.15059018e-02]], device='cuda:0')
diversed PGD initialization time: 0.1282
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00233507e+00, -1.50680691e-02, -3.67569923e-03, -1.36638433e-02,
          -1.24269687e-02,  8.96416605e-03,  1.41067058e-03, -1.91979259e-02,
          -6.75588846e-04, -1.08796284e-02],
         [ 1.00233507e+00, -1.50680691e-02, -3.67569923e-03, -1.36638433e-02,
          -1.24269687e-02,  8.96416605e-03,  1.41067058e-03, -1.91979259e-02,
          -6.75588846e-04, -1.08796284e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01740313, 1.00601077, 1.01599896, 1.01476204, 0.99337089,
          1.00092435, 1.02153301, 1.00301063, 1.01321471]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4303 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00593972e+00, -1.49032921e-02, -4.87239659e-03, -1.41212046e-02,
         -1.20147280e-02,  8.63872468e-03, -9.62037593e-04, -1.92518085e-02,
         -8.43867660e-04, -1.15059018e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 4] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00789452, 0.99249703, 1.00480390, 1.00557387, 0.98216748, 0.98593020,
         1.01112998, 0.99149233, 1.00169146]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5174 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.71261111e-03,  3.38126719e-03,  1.00516528e-02,  5.68962097e-03,
          9.39004958e-01,  3.75867635e-03,  5.05983457e-03,  1.79618597e-03,
          4.34602052e-03,  1.87143683e-04]], device='cuda:0')
diversed PGD initialization time: 0.1285
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00212682,  0.00496271,  0.01420353,  0.00768334,  0.93176615,
           0.00574293,  0.00631250, -0.00410624,  0.00617056, -0.00348793],
         [-0.00212682,  0.00496271,  0.01420353,  0.00768334,  0.93176615,
           0.00574293,  0.00631250, -0.00410624,  0.00617056, -0.00348793]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93389297, 0.92680347, 0.91756260, 0.92408282, 0.92602324,
          0.92545366, 0.93587238, 0.92559558, 0.93525410]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4599 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-2.71261111e-03,  3.38126719e-03,  1.00516528e-02,  5.68962097e-03,
          9.39004958e-01,  3.75867635e-03,  5.05983457e-03,  1.79618597e-03,
          4.34602052e-03,  1.87143683e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 2] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93152541, 0.92393571, 0.91466057, 0.92176121, 0.92335838, 0.92294174,
         0.92439330, 0.92313355, 0.92837286]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5894 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.82617083e-03,  1.00566435e+00, -7.44722784e-03, -5.40573895e-03,
         -5.42038307e-03, -2.41929293e-03, -3.77059728e-03, -5.03271818e-04,
         -5.08071482e-03, -1.71549618e-04]], device='cuda:0')
diversed PGD initialization time: 0.1267
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.18792731e-04,  9.86710787e-01, -3.65254283e-03, -2.74985284e-03,
          -4.15033475e-03, -1.88209116e-04, -3.27014178e-03,  2.72913277e-03,
          -2.65520066e-03,  2.57144868e-03],
         [-8.18792731e-04,  9.86710787e-01, -3.65254283e-03, -2.74985284e-03,
          -4.15033475e-03, -1.88209116e-04, -3.27014178e-03,  2.72913277e-03,
          -2.65520066e-03,  2.57144868e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98752958, 0.99036336, 0.98946065, 0.99086112, 0.98689902,
          0.98998094, 0.98398167, 0.98936599, 0.98413932]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4374 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.82617083e-03,  1.00566435e+00, -7.44722784e-03, -5.40573895e-03,
         -5.42038307e-03, -2.41929293e-03, -3.77059728e-03, -5.03271818e-04,
         -5.08071482e-03, -1.71549618e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 7] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98509115, 0.98757315, 0.98682213, 0.98840302, 0.98432779, 0.98752385,
         0.98128104, 0.98675931, 0.98149931]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5400 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.23560664e-03, -4.45712358e-03,  1.26679242e-03, -2.35801935e-03,
          9.91782188e-01, -2.48912722e-03,  5.75184822e-04, -5.68413734e-03,
         -8.48896801e-04, -3.41832638e-05]], device='cuda:0')
diversed PGD initialization time: 0.1397
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.46750969e-03, -4.31208313e-03,  1.61521137e-03, -2.32765079e-03,
           9.88335252e-01, -2.43722647e-03,  4.62688506e-04, -4.83916700e-03,
          -8.80561769e-04,  1.24722719e-05],
         [-4.46750969e-03, -4.31208313e-03,  1.61521137e-03, -2.32765079e-03,
           9.88335252e-01, -2.43722647e-03,  4.62688506e-04, -4.83916700e-03,
          -8.80561769e-04,  1.24722719e-05]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99280274, 0.99264735, 0.98672003, 0.99066293, 0.99077249,
          0.98787254, 0.99317443, 0.98921579, 0.98832279]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4509 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.23560664e-03, -4.45712358e-03,  1.26679242e-03, -2.35801935e-03,
          9.91782188e-01, -2.48912722e-03,  5.75184822e-04, -5.68413734e-03,
         -8.48896801e-04, -3.41832638e-05]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 4] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99112576, 0.99122739, 0.98518252, 0.98645020, 0.98700958, 0.98623306,
         0.99128622, 0.98686719, 0.98635536]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5413 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00692480,  0.02315307,  0.04787949,  0.00233832, -0.06410939,
          0.01049760,  0.01103346, -0.06735989,  0.01422609,  0.99433482]],
       device='cuda:0')
diversed PGD initialization time: 0.1267
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00845456,  0.02482447,  0.05380173,  0.00714853, -0.05384602,
           0.01556013,  0.01268936, -0.05673458,  0.01706261,  0.94779044],
         [ 0.00845456,  0.02482447,  0.05380173,  0.00714853, -0.05384602,
           0.01556013,  0.01268936, -0.05673458,  0.01706261,  0.94779044]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93933588, 0.92296600, 0.89398873, 0.94064188, 1.00163651,
          0.93223029, 0.93510109, 1.00452507, 0.93072784]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4329 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00692480,  0.02315307,  0.04787949,  0.00233832, -0.06410939,
          0.01049760,  0.01103346, -0.06735989,  0.01422609,  0.99433482]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92484021, 0.90862858, 0.86893636, 0.92437327, 0.98412311, 0.91642052,
         0.92047727, 0.97108585, 0.91600955]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5494 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.04904056, 0.02367145, 0.05123481, 0.00333296, 0.01346017, 0.56918246,
         0.13464801, 0.03375125, 0.06058793, 0.04337599]], device='cuda:0')
diversed PGD initialization time: 0.1258
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.06271046,  0.02996194,  0.06211634, -0.00499420,  0.01906125,
           0.47735471,  0.16264346,  0.04415496,  0.07638568,  0.05365809],
         [ 0.06271046,  0.02996194,  0.06211634, -0.00499420,  0.01906125,
           0.47735471,  0.16264346,  0.04415496,  0.07638568,  0.05365809]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.41464424, 0.44739276, 0.41523838, 0.48234892, 0.45829344,
          0.31471124, 0.43319976, 0.40096903, 0.42369661]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4395 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[0.04904056, 0.02367145, 0.05123481, 0.00333296, 0.01346017, 0.56918246,
         0.13464801, 0.03375125, 0.06058793, 0.04337599]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 3] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.38058215, 0.41470474, 0.38091168, 0.43785763, 0.42590058, 0.27365574,
         0.39917606, 0.36756060, 0.38944256]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5249 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00123111,  0.00338713,  0.00266385,  0.00668894,  0.01059489,
          0.00505490,  0.00347088, -0.01358469,  0.00493979,  0.98428589]],
       device='cuda:0')
diversed PGD initialization time: 0.1275
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00201752,  0.00434108,  0.00383916,  0.00831483,  0.01150238,
           0.00445425,  0.00393021, -0.01547156,  0.00499230,  0.98005486],
         [ 0.00201752,  0.00434108,  0.00383916,  0.00831483,  0.01150238,
           0.00445425,  0.00393021, -0.01547156,  0.00499230,  0.98005486]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97803736, 0.97571379, 0.97621572, 0.97174001, 0.96855247,
          0.97560060, 0.97612464, 0.99552643, 0.97506255]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4149 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00123111,  0.00338713,  0.00266385,  0.00668894,  0.01059489,
          0.00505490,  0.00347088, -0.01358469,  0.00493979,  0.98428589]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 0] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97777653, 0.97544092, 0.97589236, 0.97135198, 0.96855259, 0.97529322,
         0.97579944, 0.99483639, 0.97470754]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5150 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00453806e+00, -1.49827451e-02,  8.12068582e-04, -6.17533922e-03,
         -1.47039630e-02, -1.45584941e-02, -9.23213363e-03, -1.67201757e-02,
          9.63829458e-04, -9.81206447e-03]], device='cuda:0')
diversed PGD initialization time: 0.1335
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00138354, -0.01494851,  0.00241901, -0.00554818, -0.01483555,
          -0.01552734, -0.00786076, -0.01652342,  0.00119389, -0.00951821],
         [ 1.00138354, -0.01494851,  0.00241901, -0.00554818, -0.01483555,
          -0.01552734, -0.00786076, -0.01652342,  0.00119389, -0.00951821]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01633203, 0.99896455, 1.00693178, 1.01621914, 1.01691091,
          1.00924432, 1.01790690, 1.00018966, 1.01090169]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4076 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00453806e+00, -1.49827451e-02,  8.12068582e-04, -6.17533922e-03,
         -1.47039630e-02, -1.45584941e-02, -9.23213363e-03, -1.67201757e-02,
          9.63829458e-04, -9.81206447e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01603520, 0.99896431, 1.00685596, 1.01558101, 1.01581001, 1.00881994,
         1.01765692, 1.00002325, 1.01080608]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5001 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.22280622e-04, -8.24630260e-05,  6.09567761e-03,  1.29251927e-02,
         -3.03521752e-03, -1.47946328e-02,  1.01463342e+00, -2.90359557e-03,
          4.68338281e-03,  6.17390871e-03]], device='cuda:0')
diversed PGD initialization time: 0.1282
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.47496536e-03, -3.52159142e-04,  5.90200722e-03,  1.11829862e-02,
          -3.16032767e-03, -9.13506001e-03,  1.00999355e+00, -3.00060213e-03,
           4.23231721e-03,  5.88831306e-03],
         [ 1.47496536e-03, -3.52159142e-04,  5.90200722e-03,  1.11829862e-02,
          -3.16032767e-03, -9.13506001e-03,  1.00999355e+00, -3.00060213e-03,
           4.23231721e-03,  5.88831306e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00851858, 1.01034570, 1.00409150, 0.99881059, 1.01315391,
          1.01912856, 1.01299417, 1.00576127, 1.00410521]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4035 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.22280622e-04, -8.24630260e-05,  6.09567761e-03,  1.29251927e-02,
         -3.03521752e-03, -1.47946328e-02,  1.01463342e+00, -2.90359557e-03,
          4.68338281e-03,  6.17390871e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 1] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00834799, 1.01007521, 1.00383925, 0.99874604, 1.01292491, 1.01838350,
         1.01272416, 1.00566626, 1.00389111]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5007 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.42641366e-05,  5.81573695e-03,  3.49250436e-03,  5.74753433e-03,
         -6.03292137e-04,  5.16167283e-03,  1.46592408e-03, -3.15159559e-05,
          2.81257182e-03,  9.81121242e-01]], device='cuda:0')
diversed PGD initialization time: 0.1363
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 4.63221222e-04,  6.51074201e-03,  4.40265238e-03,  6.12320751e-03,
          -9.48850065e-04,  5.08397073e-03,  1.73372775e-03, -1.53589249e-03,
           3.28242034e-03,  9.78997231e-01],
         [ 4.63221222e-04,  6.51074201e-03,  4.40265238e-03,  6.12320751e-03,
          -9.48850065e-04,  5.08397073e-03,  1.73372775e-03, -1.53589249e-03,
           3.28242034e-03,  9.78997231e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97853398, 0.97248650, 0.97459459, 0.97287405, 0.97994608,
          0.97391325, 0.97726351, 0.98053312, 0.97571480]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4139 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.42641366e-05,  5.81573695e-03,  3.49250436e-03,  5.74753433e-03,
         -6.03292137e-04,  5.16167283e-03,  1.46592408e-03, -3.15159559e-05,
          2.81257182e-03,  9.81121242e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97638643, 0.97017896, 0.97252280, 0.96979475, 0.97709203, 0.97268945,
         0.97538733, 0.97788626, 0.97463536]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99990326, -0.01174201,  0.01195006,  0.00462743, -0.01253081,
         -0.02325777, -0.01111105, -0.01335920, -0.00502915, -0.00894193]],
       device='cuda:0')
diversed PGD initialization time: 0.1276
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99498940, -0.01093923,  0.01347174,  0.00594615, -0.01233581,
          -0.02499381, -0.00986861, -0.01191793, -0.00424984, -0.00770489],
         [ 0.99498940, -0.01093923,  0.01347174,  0.00594615, -0.01233581,
          -0.02499381, -0.00986861, -0.01191793, -0.00424984, -0.00770489]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00592864, 0.98151767, 0.98904324, 1.00732517, 1.01998317,
          1.00485802, 1.00690734, 0.99923921, 1.00269425]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4244 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99990326, -0.01174201,  0.01195006,  0.00462743, -0.01253081,
         -0.02325777, -0.01111105, -0.01335920, -0.00502915, -0.00894193]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00480020, 0.98066610, 0.98810929, 1.00606143, 1.01850903, 1.00396967,
         1.00565481, 0.99813980, 1.00167966]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.19014555e-04,  9.67749834e-01,  1.89402699e-03, -1.71004236e-03,
         -4.17860225e-03, -1.77248567e-03,  5.74044883e-03,  2.87657976e-03,
         -6.76294416e-03, -4.17970121e-03]], device='cuda:0')
diversed PGD initialization time: 0.1305
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.63419917e-03,  9.51513886e-01,  4.97113168e-03,  5.51477075e-04,
          -3.15463170e-03, -1.30183995e-04,  6.81921095e-03,  5.29934466e-03,
          -5.07320464e-03, -2.40506232e-03],
         [ 1.63419917e-03,  9.51513886e-01,  4.97113168e-03,  5.51477075e-04,
          -3.15463170e-03, -1.30183995e-04,  6.81921095e-03,  5.29934466e-03,
          -5.07320464e-03, -2.40506232e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94987971, 0.94654274, 0.95096242, 0.95466852, 0.95164406,
          0.94469470, 0.94621456, 0.95658708, 0.95391893]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4469 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 7.19014555e-04,  9.67749834e-01,  1.89402699e-03, -1.71004236e-03,
         -4.17860225e-03, -1.77248567e-03,  5.74044883e-03,  2.87657976e-03,
         -6.76294416e-03, -4.17970121e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 7] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94559586, 0.94168055, 0.94629627, 0.95031476, 0.94705170, 0.94044447,
         0.94141549, 0.95189130, 0.94909668]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00966756, -0.01559299,  0.00145712, -0.00704533, -0.04103528,
          1.02278709, -0.00851366, -0.03892238, -0.00901448,  0.00256212]],
       device='cuda:0')
diversed PGD initialization time: 0.1404
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01044318, -0.01520354,  0.00273420, -0.00516388, -0.04128173,
           1.01729810, -0.00939941, -0.03886907, -0.00844701,  0.00341281],
         [-0.01044318, -0.01520354,  0.00273420, -0.00516388, -0.04128173,
           1.01729810, -0.00939941, -0.03886907, -0.00844701,  0.00341281]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02774131, 1.03250170, 1.01456392, 1.02246201, 1.05857980,
          1.02669752, 1.05616713, 1.02574515, 1.01388526]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4433 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00966756, -0.01559299,  0.00145712, -0.00704533, -0.04103528,
          1.02278709, -0.00851366, -0.03892238, -0.00901448,  0.00256212]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02604175, 1.03143048, 1.01371849, 1.02131164, 1.05588424, 1.02468002,
         1.05395651, 1.02479517, 1.01313961]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6263 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00120941,  0.00807643,  0.01153088,  0.01742101, -0.00136011,
          0.00534961,  0.00645171, -0.00826451,  0.00554818,  0.95761096]],
       device='cuda:0')
diversed PGD initialization time: 0.1328
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00166366,  0.00940267,  0.01356168,  0.02030534,  0.00337913,
           0.00483578,  0.00712347, -0.00430639,  0.00519446,  0.94197619],
         [ 0.00166366,  0.00940267,  0.01356168,  0.02030534,  0.00337913,
           0.00483578,  0.00712347, -0.00430639,  0.00519446,  0.94197619]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94031250, 0.93257350, 0.92841452, 0.92167085, 0.93859708,
          0.93714041, 0.93485272, 0.94628257, 0.93678176]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4318 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00120941,  0.00807643,  0.01153088,  0.01742101, -0.00136011,
          0.00534961,  0.00645171, -0.00826451,  0.00554818,  0.95761096]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 1] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94015658, 0.93230867, 0.92820096, 0.92161024, 0.93832886, 0.93650544,
         0.93477517, 0.94506770, 0.93618882]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5371 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.88801098e-04, -1.32400692e-02, -1.26128197e-02, -1.00678205e-02,
          4.95963916e-03, -1.59823895e-03, -2.37019733e-03,  1.00360239e+00,
          1.25344843e-03, -1.27203763e-04]], device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.94838101e-04, -1.26496851e-02, -1.01513416e-02, -7.73809850e-03,
           6.24584407e-03, -6.70105219e-04, -2.10351497e-03,  9.94800270e-01,
           1.92914158e-03,  2.13436782e-03],
         [ 2.94838101e-04, -1.26496851e-02, -1.01513416e-02, -7.73809850e-03,
           6.24584407e-03, -6.70105219e-04, -2.10351497e-03,  9.94800270e-01,
           1.92914158e-03,  2.13436782e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99450541, 1.00744998, 1.00495160, 1.00253832, 0.98855442,
          0.99547040, 0.99690378, 0.99287111, 0.99266589]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4440 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 3.88801098e-04, -1.32400692e-02, -1.26128197e-02, -1.00678205e-02,
          4.95963916e-03, -1.59823895e-03, -2.37019733e-03,  1.00360239e+00,
          1.25344843e-03, -1.27203763e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 4] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99332058, 1.00597715, 1.00299287, 1.00110435, 0.98732877, 0.99418390,
         0.99569339, 0.99162984, 0.99122626]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5441 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01722202, -0.02722785, -0.01654454,  0.83979762, -0.04454815,
          0.05084780, -0.01674706, -0.08284143, -0.01224198,  0.29697841]],
       device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01631578, -0.03112312, -0.01219425,  0.67817378, -0.02892942,
           0.02275694, -0.00923857, -0.07635754, -0.00691433,  0.46531010],
         [-0.01631578, -0.03112312, -0.01219425,  0.67817378, -0.02892942,
           0.02275694, -0.00923857, -0.07635754, -0.00691433,  0.46531010]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.69448954, 0.70929688, 0.69036806, 0.70710319, 0.65541685,
          0.68741238, 0.75453132, 0.68508810, 0.21286368]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4598 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01722202, -0.02722785, -0.01654454,  0.83979762, -0.04454815,
          0.05084780, -0.01674706, -0.08284143, -0.01224198,  0.29697841]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 11, 1, 1] with unstable size 10 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.65024352, 0.66372013, 0.63637197, 0.65429759, 0.57940608, 0.64053440,
         0.69908136, 0.63647354, 0.11980635]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5973 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.90335611e-03, -3.26724350e-03, -4.02033329e-04, -3.80921364e-03,
          9.79318261e-01, -2.83848494e-03, -2.04697251e-04, -4.89483774e-03,
         -2.71026790e-03,  3.20266187e-03]], device='cuda:0')
diversed PGD initialization time: 0.1345
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.15173814e-03, -3.10861319e-03, -3.57434154e-04, -4.33534384e-03,
           9.72990990e-01, -3.08804214e-03, -7.71220773e-04, -4.26627696e-03,
          -3.30308825e-03,  4.68911231e-03],
         [-9.15173814e-03, -3.10861319e-03, -3.57434154e-04, -4.33534384e-03,
           9.72990990e-01, -3.08804214e-03, -7.71220773e-04, -4.26627696e-03,
          -3.30308825e-03,  4.68911231e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98214275, 0.97609961, 0.97334844, 0.97732633, 0.97607905,
          0.97376221, 0.97725725, 0.97629410, 0.96830189]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4724 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-7.90335611e-03, -3.26724350e-03, -4.02033329e-04, -3.80921364e-03,
          9.79318261e-01, -2.83848494e-03, -2.04697251e-04, -4.89483774e-03,
         -2.71026790e-03,  3.20266187e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98043191, 0.97516620, 0.97187698, 0.97585177, 0.97500706, 0.97265989,
         0.97531474, 0.97498101, 0.96663594]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.58890337e-03,  2.23674625e-03, -1.66718662e-03,  1.63289905e-03,
          1.49698518e-02,  4.10588831e-03, -5.82866371e-04, -7.09034503e-03,
          2.11743265e-03,  9.95817363e-01]], device='cuda:0')
diversed PGD initialization time: 0.1286
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.22518465e-03,  2.76176631e-03, -1.20982528e-03,  2.38350034e-03,
           1.70775466e-02,  3.55914235e-03, -6.07255846e-04, -9.02993977e-03,
           2.13745981e-03,  9.93530631e-01],
         [-1.22518465e-03,  2.76176631e-03, -1.20982528e-03,  2.38350034e-03,
           1.70775466e-02,  3.55914235e-03, -6.07255846e-04, -9.02993977e-03,
           2.13745981e-03,  9.93530631e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99475580, 0.99076885, 0.99474049, 0.99114716, 0.97645307,
          0.98997152, 0.99413788, 1.00256062, 0.99139315]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4281 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.58890337e-03,  2.23674625e-03, -1.66718662e-03,  1.63289905e-03,
          1.49698518e-02,  4.10588831e-03, -5.82866371e-04, -7.09034503e-03,
          2.11743265e-03,  9.95817363e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 4] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99171615, 0.98800582, 0.99127460, 0.98850006, 0.97608238, 0.98773527,
         0.99099028, 0.99805945, 0.98936498]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5195 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01895330, -0.00488308, -0.00214900,  0.02114022, -0.00389631,
         -0.03951877,  1.05138063, -0.00888571, -0.00586911,  0.00224634]],
       device='cuda:0')
diversed PGD initialization time: 0.1478
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.77784003e-02, -3.95669788e-03, -4.69878316e-04,  1.93230957e-02,
          -3.39623168e-03, -3.60794887e-02,  1.04282010e+00, -7.41292536e-03,
          -3.24607641e-03,  2.75109708e-03],
         [ 1.77784003e-02, -3.95669788e-03, -4.69878316e-04,  1.93230957e-02,
          -3.39623168e-03, -3.60794887e-02,  1.04282010e+00, -7.41292536e-03,
          -3.24607641e-03,  2.75109708e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02504170, 1.04677677, 1.04329002, 1.02349699, 1.04621637,
          1.07889962, 1.05023301, 1.04606616, 1.04006898]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4579 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.01895330, -0.00488308, -0.00214900,  0.02114022, -0.00389631,
         -0.03951877,  1.05138063, -0.00888571, -0.00586911,  0.00224634]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 4] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01272154, 1.03395736, 1.02918720, 1.01181340, 1.03364694, 1.06766057,
         1.03715134, 1.02945340, 1.02712333]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00157642,  0.00241540,  0.01233052,  0.01679472, -0.00254214,
         -0.01059531,  0.99784589, -0.00186680,  0.01419754,  0.01035954]],
       device='cuda:0')
diversed PGD initialization time: 0.1253
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00207530,  0.00294390,  0.01335089,  0.01731400, -0.00228743,
          -0.01073936,  0.99480557, -0.00135176,  0.01548560,  0.01095700],
         [-0.00207530,  0.00294390,  0.01335089,  0.01731400, -0.00228743,
          -0.01073936,  0.99480557, -0.00135176,  0.01548560,  0.01095700]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99688089, 0.99186170, 0.98145467, 0.97749156, 0.99709302,
          1.00554490, 0.99615735, 0.97931999, 0.98384857]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4220 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00157642,  0.00241540,  0.01233052,  0.01679472, -0.00254214,
         -0.01059531,  0.99784589, -0.00186680,  0.01419754,  0.01035954]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99545580, 0.99061936, 0.98016435, 0.97626758, 0.99586028, 1.00286853,
         0.99474156, 0.97796601, 0.98265582]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5246 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.23406097e-03, -1.80261731e-02, -4.09364700e-03, -3.71100008e-03,
         -4.07152362e-02,  1.03750324e+00, -5.57144731e-03, -4.20049131e-02,
         -1.06793568e-02,  2.35229731e-04]], device='cuda:0')
diversed PGD initialization time: 0.1205
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.30249083e-03, -1.72017664e-02, -3.29940021e-03, -3.24738771e-03,
          -3.88712771e-02,  1.03456616e+00, -5.19324839e-03, -4.01411802e-02,
          -1.00810379e-02,  5.55008650e-04],
         [-6.30249083e-03, -1.72017664e-02, -3.29940021e-03, -3.24738771e-03,
          -3.88712771e-02,  1.03456616e+00, -5.19324839e-03, -4.01411802e-02,
          -1.00810379e-02,  5.55008650e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04086864, 1.05176795, 1.03786552, 1.03781354, 1.07343745,
          1.03975940, 1.07470739, 1.04464722, 1.03401113]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3706 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-6.23406097e-03, -1.80261731e-02, -4.09364700e-03, -3.71100008e-03,
         -4.07152362e-02,  1.03750324e+00, -5.57144731e-03, -4.20049131e-02,
         -1.06793568e-02,  2.35229731e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03985596, 1.05081940, 1.03721082, 1.03676343, 1.07110989, 1.03868580,
         1.07312167, 1.04403186, 1.03352892]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4613 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.48494542e-03, -5.09761274e-04,  7.98027217e-03,  3.36649269e-03,
          9.80189919e-01,  2.92403996e-03,  5.85776940e-03, -1.27611160e-02,
          4.01928276e-03, -6.08946383e-03]], device='cuda:0')
diversed PGD initialization time: 0.1131
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00141083, -0.00209015,  0.00220069,  0.00252676,  0.94803852,
           0.00107003,  0.00414933,  0.05176808,  0.00188649, -0.01842694],
         [-0.00141083, -0.00209015,  0.00220069,  0.00252676,  0.94803852,
           0.00107003,  0.00414933,  0.05176808,  0.00188649, -0.01842694]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94944936, 0.95012867, 0.94583786, 0.94551176, 0.94696850,
          0.94388920, 0.89627045, 0.94615203, 0.96646547]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3662 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.48494542e-03, -5.09761274e-04,  7.98027217e-03,  3.36649269e-03,
          9.80189919e-01,  2.92403996e-03,  5.85776940e-03, -1.27611160e-02,
          4.01928276e-03, -6.08946383e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94129753, 0.94171804, 0.93637007, 0.93710208, 0.93851459, 0.93565524,
         0.87680715, 0.93782747, 0.95372677]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4877 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00352430e+00, -9.38542187e-03, -3.67787480e-03, -1.09384954e-02,
         -5.33385202e-03,  7.17475265e-03, -5.69339097e-03, -1.27206296e-02,
          7.56651163e-04, -8.11968744e-03]], device='cuda:0')
diversed PGD initialization time: 0.1150
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00292575e+00, -8.98618996e-03, -2.99440324e-03, -1.05527341e-02,
          -4.87646088e-03,  7.52416998e-03, -4.98996675e-03, -1.23746991e-02,
           5.36806881e-04, -7.80557841e-03],
         [ 1.00292575e+00, -8.98618996e-03, -2.99440324e-03, -1.05527341e-02,
          -4.87646088e-03,  7.52416998e-03, -4.98996675e-03, -1.23746991e-02,
           5.36806881e-04, -7.80557841e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01191199, 1.00592017, 1.01347852, 1.00780225, 0.99540156,
          1.00791574, 1.01530051, 1.00238895, 1.01073134]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3877 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00352430e+00, -9.38542187e-03, -3.67787480e-03, -1.09384954e-02,
         -5.33385202e-03,  7.17475265e-03, -5.69339097e-03, -1.27206296e-02,
          7.56651163e-04, -8.11968744e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01152992, 1.00539505, 1.01299977, 1.00722575, 0.99540144, 1.00759304,
         1.01482856, 1.00188005, 1.01036656]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.66267830e-04, -1.38410628e-02, -1.84029937e-02, -1.55641735e-02,
          9.09104943e-04, -5.25940955e-03, -4.15494293e-03,  1.03674531e+00,
         -2.28417665e-03, -2.08792090e-03]], device='cuda:0')
diversed PGD initialization time: 0.1317
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.78948045e-04, -1.01068392e-02, -1.54772401e-02, -1.15355104e-02,
           1.32781640e-03, -2.47749686e-03, -2.77325511e-03,  1.01918352e+00,
          -3.28153372e-04, -1.54533982e-03],
         [ 1.78948045e-04, -1.01068392e-02, -1.54772401e-02, -1.15355104e-02,
           1.32781640e-03, -2.47749686e-03, -2.77325511e-03,  1.01918352e+00,
          -3.28153372e-04, -1.54533982e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01900458, 1.02929032, 1.03466082, 1.03071904, 1.01785564,
          1.02166104, 1.02195680, 1.01951170, 1.02072883]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4237 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.66267830e-04, -1.38410628e-02, -1.84029937e-02, -1.55641735e-02,
          9.09104943e-04, -5.25940955e-03, -4.15494293e-03,  1.03674531e+00,
         -2.28417665e-03, -2.08792090e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 6] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00644350, 1.01625454, 1.02185524, 1.01610875, 1.00564802, 1.00822449,
         1.00957119, 1.00650585, 1.00802219]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5214 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.10862607e-04,  7.47427344e-04,  8.93090665e-03,  4.80744243e-03,
          9.51493204e-01,  3.51633877e-03,  4.65787202e-03, -6.07244670e-03,
          3.97457927e-03,  9.97093320e-03]], device='cuda:0')
diversed PGD initialization time: 0.1369
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00416731,  0.00500463,  0.01904877,  0.01530516,  0.88447952,
           0.01211783,  0.00823182, -0.01685770,  0.00977127,  0.05001614],
         [ 0.00416731,  0.00500463,  0.01904877,  0.01530516,  0.88447952,
           0.01211783,  0.00823182, -0.01685770,  0.00977127,  0.05001614]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.88031220, 0.87947488, 0.86543077, 0.86917436, 0.87236166,
          0.87624770, 0.90133721, 0.87470824, 0.83446336]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4221 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.10862607e-04,  7.47427344e-04,  8.93090665e-03,  4.80744243e-03,
          9.51493204e-01,  3.51633877e-03,  4.65787202e-03, -6.07244670e-03,
          3.97457927e-03,  9.97093320e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 6] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.80904740, 0.80660534, 0.78845489, 0.79268569, 0.79730231, 0.80489987,
         0.82599992, 0.80156296, 0.73126763]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5347 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00502765e+00, -2.61968970e-02, -5.40301204e-04, -1.60021335e-02,
         -2.46408246e-02, -2.42733210e-03,  9.40464437e-03, -3.30749005e-02,
         -3.88316810e-03, -1.73801184e-02]], device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00192142e+00, -2.62044147e-02,  7.94485211e-04, -1.58735961e-02,
          -2.46364065e-02, -2.77180225e-03,  1.14526600e-02, -3.30596268e-02,
          -3.49688530e-03, -1.70802772e-02],
         [ 1.00192142e+00, -2.62044147e-02,  7.94485211e-04, -1.58735961e-02,
          -2.46364065e-02, -2.77180225e-03,  1.14526600e-02, -3.30596268e-02,
          -3.49688530e-03, -1.70802772e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02812588, 1.00112689, 1.01779497, 1.02655780, 1.00469327,
          0.99046874, 1.03498101, 1.00541830, 1.01900172]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4088 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00502765e+00, -2.61968970e-02, -5.40301204e-04, -1.60021335e-02,
         -2.46408246e-02, -2.42733210e-03,  9.40464437e-03, -3.30749005e-02,
         -3.88316810e-03, -1.73801184e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 1] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02732599, 1.00063360, 1.01687598, 1.02547133, 1.00423110, 0.99032158,
         1.03412032, 1.00521755, 1.01860440]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4942 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.87175721e-03,  9.42286193e-01,  6.34092093e-03,  2.60354578e-03,
         -1.94536150e-03,  3.02922726e-03,  2.03978643e-03,  8.90199840e-03,
         -1.08540058e-04,  4.17829305e-03]], device='cuda:0')
diversed PGD initialization time: 0.1306
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.73174420e-03,  9.26777184e-01,  9.18878615e-03,  4.82823700e-03,
          -9.23532993e-04,  4.72013652e-03,  2.79862061e-03,  1.13021284e-02,
           1.72912329e-03,  6.19259477e-03],
         [ 2.73174420e-03,  9.26777184e-01,  9.18878615e-03,  4.82823700e-03,
          -9.23532993e-04,  4.72013652e-03,  2.79862061e-03,  1.13021284e-02,
           1.72912329e-03,  6.19259477e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92404544, 0.91758841, 0.92194897, 0.92770070, 0.92205703,
          0.92397857, 0.91547507, 0.92504805, 0.92058456]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4289 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.87175721e-03,  9.42286193e-01,  6.34092093e-03,  2.60354578e-03,
         -1.94536150e-03,  3.02922726e-03,  2.03978643e-03,  8.90199840e-03,
         -1.08540058e-04,  4.17829305e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92335868, 0.91656917, 0.92128444, 0.92703336, 0.92137223, 0.92315936,
         0.91465557, 0.92444175, 0.91999847]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.84183754e-02, -1.19851381e-02,  1.91204548e-02,  9.62093949e-01,
         -4.88948636e-02,  3.66887525e-02, -2.17638165e-03, -3.12951654e-02,
         -7.88643956e-05,  1.74658000e-03]], device='cuda:0')
diversed PGD initialization time: 0.1273
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01881035, -0.01280956,  0.02110802,  0.95657980, -0.05058115,
           0.03898103, -0.00141129, -0.03252931,  0.00098833,  0.00238413],
         [-0.01881035, -0.01280956,  0.02110802,  0.95657980, -0.05058115,
           0.03898103, -0.00141129, -0.03252931,  0.00098833,  0.00238413]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97539014, 0.96938938, 0.93547177, 1.00716090, 0.91759878,
          0.95799112, 0.98910910, 0.95559150, 0.95419568]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4104 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.84183754e-02, -1.19851381e-02,  1.91204548e-02,  9.62093949e-01,
         -4.88948636e-02,  3.66887525e-02, -2.17638165e-03, -3.12951654e-02,
         -7.88643956e-05,  1.74658000e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97406542, 0.96790397, 0.93359971, 1.00435615, 0.91632181, 0.95644915,
         0.98691761, 0.95435596, 0.95276445]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5003 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.49968332e-04,  9.61079240e-01,  5.31314313e-03, -5.82203269e-04,
         -3.09942290e-03,  2.13351846e-03, -2.10854411e-03,  8.27801228e-03,
         -9.10960138e-04,  3.78853083e-03]], device='cuda:0')
diversed PGD initialization time: 0.1372
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00170559,  0.93996626,  0.00946800,  0.00235212, -0.00173262,
           0.00443697, -0.00112139,  0.01166520,  0.00151994,  0.00644255],
         [ 0.00170559,  0.93996626,  0.00946800,  0.00235212, -0.00173262,
           0.00443697, -0.00112139,  0.01166520,  0.00151994,  0.00644255]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93826067, 0.93049824, 0.93761414, 0.94169891, 0.93552929,
          0.94108766, 0.92830110, 0.93844634, 0.93352371]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4446 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 5.49968332e-04,  9.61079240e-01,  5.31314313e-03, -5.82203269e-04,
         -3.09942290e-03,  2.13351846e-03, -2.10854411e-03,  8.27801228e-03,
         -9.10960138e-04,  3.78853083e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 11] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93555081, 0.92763799, 0.93466544, 0.93901008, 0.93277138, 0.93813443,
         0.92546928, 0.93561226, 0.93065238]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5887 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.55467503e-02, -8.46666098e-03,  1.18243843e-02,  9.94544864e-01,
         -4.20500524e-02,  8.93979520e-03, -4.73639369e-03, -2.88806707e-02,
         -2.57609040e-03,  4.18365002e-04]], device='cuda:0')
diversed PGD initialization time: 0.1384
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.48195587e-02, -8.15249979e-03,  1.12242103e-02,  9.88253117e-01,
          -4.01728116e-02,  1.31381080e-02, -4.67929989e-03, -2.66744792e-02,
          -1.97634101e-03,  9.10058618e-04],
         [-1.48195587e-02, -8.15249979e-03,  1.12242103e-02,  9.88253117e-01,
          -4.01728116e-02,  1.31381080e-02, -4.67929989e-03, -2.66744792e-02,
          -1.97634101e-03,  9.10058618e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00307262, 0.99640560, 0.97702891, 1.02842593, 0.97511500,
          0.99293244, 1.01492763, 0.99022949, 0.98734307]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4409 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.55467503e-02, -8.46666098e-03,  1.18243843e-02,  9.94544864e-01,
         -4.20500524e-02,  8.93979520e-03, -4.73639369e-03, -2.88806707e-02,
         -2.57609040e-03,  4.18365002e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 0] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00228047, 0.99546796, 0.97540206, 1.02719510, 0.97511512, 0.99210441,
         1.01433599, 0.98940593, 0.98650730]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5383 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.65518504e-03,  7.82646239e-04,  8.48852098e-03, -1.16880238e-03,
          9.54855084e-01,  1.05778128e-03, -3.43747437e-04, -2.66991854e-02,
         -2.37606466e-04,  2.58207321e-03]], device='cuda:0')
diversed PGD initialization time: 0.1246
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.35204327e-03,  2.26374716e-03,  1.04279667e-02,  3.70644033e-04,
           9.39189374e-01,  2.45145708e-03,  4.31511551e-04, -2.62717903e-02,
           6.87740743e-04,  7.88897276e-03],
         [-9.35204327e-03,  2.26374716e-03,  1.04279667e-02,  3.70644033e-04,
           9.39189374e-01,  2.45145708e-03,  4.31511551e-04, -2.62717903e-02,
           6.87740743e-04,  7.88897276e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94854140, 0.93692565, 0.92876142, 0.93881875, 0.93673790,
          0.93875784, 0.96546113, 0.93850166, 0.93130040]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4913 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.65518504e-03,  7.82646239e-04,  8.48852098e-03, -1.16880238e-03,
          9.54855084e-01,  1.05778128e-03, -3.43747437e-04, -2.66991854e-02,
         -2.37606466e-04,  2.58207321e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 1] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94504446, 0.93475175, 0.92658621, 0.93655974, 0.93440264, 0.93662739,
         0.96295941, 0.93641073, 0.92706680]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6070 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.49481946e-03, -2.12157294e-02, -1.60585195e-02, -1.93450302e-02,
          6.95358962e-04, -4.19925153e-03, -3.10654938e-03,  1.01861930e+00,
          1.38338655e-03, -2.94046104e-03]], device='cuda:0')
diversed PGD initialization time: 0.1379
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00224227, -0.01943261, -0.01381770, -0.01696536,  0.00114586,
          -0.00362133, -0.00279764,  1.01211345,  0.00175396, -0.00351196],
         [ 0.00224227, -0.01943261, -0.01381770, -0.01696536,  0.00114586,
          -0.00362133, -0.00279764,  1.01211345,  0.00175396, -0.00351196]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00987113, 1.03154612, 1.02593112, 1.02907884, 1.01096761,
          1.01573479, 1.01491106, 1.01035953, 1.01562536]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4316 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.49481946e-03, -2.12157294e-02, -1.60585195e-02, -1.93450302e-02,
          6.95358962e-04, -4.19925153e-03, -3.10654938e-03,  1.01861930e+00,
          1.38338655e-03, -2.94046104e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 1] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00916564, 1.03019667, 1.02380896, 1.02765369, 1.00994742, 1.01512897,
         1.01449764, 1.00997210, 1.01274514]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01227429, -0.02435003,  1.02804196, -0.01081567, -0.00651614,
          0.00395373, -0.01183433, -0.02838749, -0.00475191, -0.01552834]],
       device='cuda:0')
diversed PGD initialization time: 0.1388
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01183027, -0.02311864,  1.02293289, -0.01018694, -0.00541231,
           0.00426900, -0.01107530, -0.02611534, -0.00437746, -0.01451862],
         [-0.01183027, -0.02311864,  1.02293289, -0.01018694, -0.00541231,
           0.00426900, -0.01107530, -0.02611534, -0.00437746, -0.01451862]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03476310, 1.04605150, 1.03311980, 1.02834523, 1.01866388,
          1.03400815, 1.04904819, 1.02731037, 1.03745151]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4314 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01227429, -0.02435003,  1.02804196, -0.01081567, -0.00651614,
          0.00395373, -0.01183433, -0.02838749, -0.00475191, -0.01552834]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03258121, 1.04373014, 1.03084767, 1.02556860, 1.01779640, 1.03225672,
         1.04636717, 1.02535784, 1.03510249]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.12147290e-03,  2.27475166e-03,  3.42477858e-03, -8.85292888e-03,
         -2.79384479e-03,  2.58338451e-03, -4.45906073e-04,  9.86189485e-01,
          4.66224551e-03, -2.24660113e-02]], device='cuda:0')
diversed PGD initialization time: 0.1413
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 4.35457379e-03,  1.21887103e-02,  8.91956687e-03, -5.53084910e-03,
          -3.92669812e-03,  5.57289273e-03,  7.84512609e-04,  9.65589523e-01,
           6.63159043e-03, -2.65803337e-02],
         [ 4.35457379e-03,  1.21887103e-02,  8.91956687e-03, -5.53084910e-03,
          -3.92669812e-03,  5.57289273e-03,  7.84512609e-04,  9.65589523e-01,
           6.63159043e-03, -2.65803337e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96123493, 0.95340079, 0.95666993, 0.97112036, 0.96951622,
          0.96001661, 0.96480501, 0.95895791, 0.99216986]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4331 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 3.12147290e-03,  2.27475166e-03,  3.42477858e-03, -8.85292888e-03,
         -2.79384479e-03,  2.58338451e-03, -4.45906073e-04,  9.86189485e-01,
          4.66224551e-03, -2.24660113e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 7, 1, 4] with unstable size 6 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95295131, 0.94296426, 0.94302988, 0.96209538, 0.96167260, 0.95088083,
         0.95658994, 0.95063573, 0.98238635]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5274 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.51173294e-04,  9.65144455e-01,  1.21214986e-03, -3.21321189e-04,
         -3.35466862e-03,  6.39311969e-04,  7.52564520e-04,  5.10561466e-03,
         -2.32651830e-03,  1.81227922e-03]], device='cuda:0')
diversed PGD initialization time: 0.1307
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.46036223e-03,  9.50157106e-01,  4.20470536e-03,  1.76939368e-03,
          -2.36988813e-03,  2.34949589e-03,  1.25557929e-03,  7.61233270e-03,
          -4.72500920e-04,  3.87132168e-03],
         [ 1.46036223e-03,  9.50157106e-01,  4.20470536e-03,  1.76939368e-03,
          -2.36988813e-03,  2.34949589e-03,  1.25557929e-03,  7.61233270e-03,
          -4.72500920e-04,  3.87132168e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94869673, 0.94595242, 0.94838774, 0.95252699, 0.94780761,
          0.94890153, 0.94254476, 0.95062959, 0.94628578]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4454 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.51173294e-04,  9.65144455e-01,  1.21214986e-03, -3.21321189e-04,
         -3.35466862e-03,  6.39311969e-04,  7.52564520e-04,  5.10561466e-03,
         -2.32651830e-03,  1.81227922e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 7] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94471437, 0.94139040, 0.94407356, 0.94848186, 0.94357288, 0.94486356,
         0.93812263, 0.94637543, 0.94193149]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5395 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.86298043e-04,  6.90160096e-02,  8.29883039e-01,  2.57396698e-02,
          6.38649985e-03,  1.45373642e-02, -2.65003741e-03, -3.07781994e-03,
          1.76221132e-02,  7.25588202e-03]], device='cuda:0')
diversed PGD initialization time: 0.1378
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00936664,  0.07834584,  0.63122755,  0.17686912,  0.01309805,
          -0.03147957,  0.01719613,  0.01119654,  0.03434723,  0.01915675],
         [ 0.00936664,  0.07834584,  0.63122755,  0.17686912,  0.01309805,
          -0.03147957,  0.01719613,  0.01119654,  0.03434723,  0.01915675]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.62186092, 0.55288172, 0.45435843, 0.61812949, 0.66270709,
          0.61403143, 0.62003100, 0.59688032, 0.61207080]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4229 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.86298043e-04,  6.90160096e-02,  8.29883039e-01,  2.57396698e-02,
          6.38649985e-03,  1.45373642e-02, -2.65003741e-03, -3.07781994e-03,
          1.76221132e-02,  7.25588202e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 9] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.56693828, 0.49737403, 0.37715173, 0.56575406, 0.57180136, 0.56008863,
         0.56113315, 0.54276526, 0.55689269]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5033 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.00575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0014383792877197266, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.80681998e-04,  9.83952284e-01, -1.61336362e-03, -3.83099914e-03,
         -5.01261279e-03, -3.24579328e-03,  4.79891896e-03,  2.32368708e-04,
         -8.56212527e-03, -5.75637817e-03]], device='cuda:0')
diversed PGD initialization time: 0.1454
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.32068652e-04,  9.71731305e-01,  9.79721546e-04, -2.12390721e-03,
          -4.15438041e-03, -1.63780898e-03,  4.71682101e-03,  2.54561007e-03,
          -6.77487254e-03, -3.64544988e-03],
         [ 3.32068652e-04,  9.71731305e-01,  9.79721546e-04, -2.12390721e-03,
          -4.15438041e-03, -1.63780898e-03,  4.71682101e-03,  2.54561007e-03,
          -6.77487254e-03, -3.64544988e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97139925, 0.97075158, 0.97385520, 0.97588569, 0.97336912,
          0.96701449, 0.96918571, 0.97850621, 0.97537673]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4419 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-2.80681998e-04,  9.83952284e-01, -1.61336362e-03, -3.83099914e-03,
         -5.01261279e-03, -3.24579328e-03,  4.79891896e-03,  2.32368708e-04,
         -8.56212527e-03, -5.75637817e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 7] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97077477, 0.96998024, 0.97313106, 0.97520250, 0.97258675, 0.96648377,
         0.96837294, 0.97766113, 0.97441310]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5375 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00560426, -0.00584414,  0.00541173, -0.00262269,  0.00125592,
          0.00827602,  0.00318688,  0.96093649,  0.00938068, -0.01777881]],
       device='cuda:0')
diversed PGD initialization time: 0.1280
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.02818888, 0.01320148, 0.24815188, 0.03618940, 0.01799964,
          0.03216330, 0.01597328, 0.52386850, 0.03071182, 0.01657543],
         [0.02818888, 0.01320148, 0.24815188, 0.03618940, 0.01799964,
          0.03216330, 0.01597328, 0.52386850, 0.03071182, 0.01657543]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.49567962, 0.51066703, 0.27571660, 0.48767909, 0.50586885,
          0.49170521, 0.50789523, 0.49315667, 0.50729305]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3958 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00560426, -0.00584414,  0.00541173, -0.00262269,  0.00125592,
          0.00827602,  0.00318688,  0.96093649,  0.00938068, -0.01777881]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 12, 1, 7] with unstable size 11 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.46619469, 0.46793675, 0.25227457, 0.46369708, 0.48715726, 0.45601887,
         0.48291177, 0.46796277, 0.48686272]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4770 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.06780566e-02, -3.06724012e-02,  1.02878666e+00, -1.72797590e-02,
         -3.16317379e-03,  3.99813056e-03, -1.51476562e-02, -2.37885118e-02,
         -4.09074128e-04, -1.27610415e-02]], device='cuda:0')
diversed PGD initialization time: 0.1453
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00992472, -0.03558935,  1.01639998,  0.06944686, -0.00570570,
          -0.04926605, -0.00977985, -0.02862163, -0.00307317, -0.01567294],
         [-0.00992472, -0.03558935,  1.01639998,  0.06944686, -0.00570570,
          -0.04926605, -0.00977985, -0.02862163, -0.00307317, -0.01567294]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02632475, 1.05198932, 0.94695312, 1.02210569, 1.06566608,
          1.02617979, 1.04502165, 1.01947320, 1.03207290]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4455 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.06780566e-02, -3.06724012e-02,  1.02878666e+00, -1.72797590e-02,
         -3.16317379e-03,  3.99813056e-03, -1.51476562e-02, -2.37885118e-02,
         -4.09074128e-04, -1.27610415e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 8] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00997925, 1.02692628, 0.93824005, 1.00500584, 1.00611472, 1.01172364,
         1.02431178, 1.00432038, 1.01554549]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5254 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.27519295e-03,  9.94617820e-01, -3.60144675e-03, -4.20489907e-03,
         -4.83986363e-03, -6.61499798e-04, -5.46418130e-03,  2.85030901e-03,
         -2.62092799e-03,  2.46975571e-03]], device='cuda:0')
diversed PGD initialization time: 0.1352
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00489207, 0.87577760, 0.01808842, 0.01285486, 0.00242544,
          0.01324632, 0.00116171, 0.01954399, 0.01109386, 0.01808488],
         [0.00489207, 0.87577760, 0.01808842, 0.01285486, 0.00242544,
          0.01324632, 0.00116171, 0.01954399, 0.01109386, 0.01808488]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.87088555, 0.85768920, 0.86292273, 0.87335217, 0.86253130,
          0.87461591, 0.85623360, 0.86468375, 0.85769272]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4462 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.27519295e-03,  9.94617820e-01, -3.60144675e-03, -4.20489907e-03,
         -4.83986363e-03, -6.61499798e-04, -5.46418130e-03,  2.85030901e-03,
         -2.62092799e-03,  2.46975571e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 19] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.75561142, 0.72466427, 0.72928703, 0.75677085, 0.73057222, 0.75433326,
         0.73421395, 0.71997005, 0.72771090]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5474 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00252295e+00, -1.41758323e-02, -3.31206620e-03, -1.33057684e-02,
         -1.11275949e-02,  8.42311233e-03,  1.43297762e-03, -1.84549242e-02,
         -6.64591789e-04, -1.05810612e-02]], device='cuda:0')
diversed PGD initialization time: 0.1405
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00162745e+00, -1.45341828e-02, -2.70818174e-03, -1.33417398e-02,
          -1.16628371e-02,  9.22508538e-03,  2.92801112e-03, -1.88810527e-02,
          -9.32142138e-04, -1.05110556e-02],
         [ 1.00162745e+00, -1.45341828e-02, -2.70818174e-03, -1.33417398e-02,
          -1.16628371e-02,  9.22508538e-03,  2.92801112e-03, -1.88810527e-02,
          -9.32142138e-04, -1.05110556e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01616168, 1.00433564, 1.01496923, 1.01329029, 0.99240237,
          0.99869943, 1.02050853, 1.00255954, 1.01213849]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4361 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00252295e+00, -1.41758323e-02, -3.31206620e-03, -1.33057684e-02,
         -1.11275949e-02,  8.42311233e-03,  1.43297762e-03, -1.84549242e-02,
         -6.64591789e-04, -1.05810612e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 6] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00857174, 0.99725777, 1.01002538, 1.00901258, 0.99207568, 0.99615371,
         1.01691711, 0.99940950, 1.00981879]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5254 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00134232,  0.00298230,  0.01008035,  0.00617010,  0.94537824,
          0.00388360,  0.00552710,  0.00159575,  0.00486048, -0.00130714]],
       device='cuda:0')
diversed PGD initialization time: 0.1293
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00455094, 0.00970933, 0.02296403, 0.01615858, 0.74676991,
          0.01153173, 0.01005181, 0.09008676, 0.01167659, 0.06821658],
         [0.00455094, 0.00970933, 0.02296403, 0.01615858, 0.74676991,
          0.01153173, 0.01005181, 0.09008676, 0.01167659, 0.06821658]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.74221897, 0.73706055, 0.72380590, 0.73061132, 0.73523819,
          0.73671812, 0.65668315, 0.73509330, 0.67855334]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4240 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00134232,  0.00298230,  0.01008035,  0.00617010,  0.94537824,
          0.00388360,  0.00552710,  0.00159575,  0.00486048, -0.00130714]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 9, 1, 7] with unstable size 8 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.61659837, 0.61120462, 0.58674896, 0.59629369, 0.60550213, 0.61074561,
         0.48700497, 0.60796607, 0.48949921]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5055 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.48914382e-03,  9.99115586e-01, -5.88467717e-03, -4.52968478e-03,
         -4.99534234e-03, -1.53713673e-03, -4.00377065e-03,  8.83787870e-04,
         -4.00940329e-03,  1.03712827e-03]], device='cuda:0')
diversed PGD initialization time: 0.1262
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.71490014e-04,  9.67594862e-01,  2.16618180e-04, -3.59117985e-06,
          -2.81831995e-03,  2.31997669e-03, -3.46658751e-03,  6.31278753e-03,
           3.01599503e-04,  6.00299239e-03],
         [ 1.71490014e-04,  9.67594862e-01,  2.16618180e-04, -3.59117985e-06,
          -2.81831995e-03,  2.31997669e-03, -3.46658751e-03,  6.31278753e-03,
           3.01599503e-04,  6.00299239e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96742338, 0.96737826, 0.96759844, 0.97041321, 0.96527487,
          0.97106147, 0.96128207, 0.96729326, 0.96159184]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4401 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.48914382e-03,  9.99115586e-01, -5.88467717e-03, -4.52968478e-03,
         -4.99534234e-03, -1.53713673e-03, -4.00377065e-03,  8.83787870e-04,
         -4.00940329e-03,  1.03712827e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 12] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95290834, 0.95090759, 0.95236677, 0.95620322, 0.94892979, 0.95605600,
         0.94580001, 0.94995683, 0.94153118]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5442 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.42780724e-03, -4.79525328e-03,  1.62012875e-03, -8.74131918e-04,
          9.91933405e-01, -1.44373626e-03,  9.02321190e-04, -4.93253767e-03,
         -7.57500529e-05, -6.73539937e-04]], device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 4.12147492e-04, -5.16276062e-03,  5.23106754e-03,  1.44263357e-03,
           9.30724442e-01,  2.32550725e-02,  6.09461963e-03, -1.12597346e-02,
           6.89000636e-03,  3.22713181e-02],
         [ 4.12147492e-04, -5.16276062e-03,  5.23106754e-03,  1.44263357e-03,
           9.30724442e-01,  2.32550725e-02,  6.09461963e-03, -1.12597346e-02,
           6.89000636e-03,  3.22713181e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93031228, 0.93588722, 0.92549336, 0.92928183, 0.90746939,
          0.92462981, 0.94198418, 0.92383444, 0.89845312]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3886 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-3.42780724e-03, -4.79525328e-03,  1.62012875e-03, -8.74131918e-04,
          9.91933405e-01, -1.44373626e-03,  9.02321190e-04, -4.93253767e-03,
         -7.57500529e-05, -6.73539937e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 10, 1, 4] with unstable size 9 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.90702200, 0.91770393, 0.90458918, 0.90500593, 0.85410225, 0.89838064,
         0.91332138, 0.88821769, 0.87415248]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4822 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00589080,  0.02071182,  0.04410236,  0.00349879, -0.07036972,
          0.01032483,  0.01009385, -0.05552290,  0.01278628,  1.00019038]],
       device='cuda:0')
diversed PGD initialization time: 0.1364
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01441930,  0.03533200,  0.07446114,  0.03004438, -0.08457416,
           0.03214870,  0.02043848, -0.03325430,  0.02995903,  0.85125369],
         [ 0.01441930,  0.03533200,  0.07446114,  0.03004438, -0.08457416,
           0.03214870,  0.02043848, -0.03325430,  0.02995903,  0.85125369]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.83683437, 0.81592166, 0.77679253, 0.82120931, 0.93582785,
          0.81910497, 0.83081520, 0.88450801, 0.82129467]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4330 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00589080,  0.02071182,  0.04410236,  0.00349879, -0.07036972,
          0.01032483,  0.01009385, -0.05552290,  0.01278628,  1.00019038]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 14, 1, 8] with unstable size 13 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.77618158, 0.75733542, 0.61943495, 0.75638974, 0.87252307, 0.75852919,
         0.77185667, 0.77890533, 0.76297092]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5921 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04670355,  0.02242018,  0.04831819, -0.00060529,  0.01264117,
          0.58801603,  0.13561499,  0.03136355,  0.05818108,  0.04070981]],
       device='cuda:0')
diversed PGD initialization time: 0.1307
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.03766299,  0.01840167,  0.04258762, -0.00112437,  0.00960368,
           0.44403112,  0.31524748,  0.02575733,  0.06116399,  0.03910231],
         [ 0.03766299,  0.01840167,  0.04258762, -0.00112437,  0.00960368,
           0.44403112,  0.31524748,  0.02575733,  0.06116399,  0.03910231]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.40636814, 0.42562944, 0.40144348, 0.44515550, 0.43442744,
          0.12878364, 0.41827381, 0.38286713, 0.40492880]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4271 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.04670355,  0.02242018,  0.04831819, -0.00060529,  0.01264117,
          0.58801603,  0.13561499,  0.03136355,  0.05818108,  0.04070981]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 4] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.23114559,  0.26345518,  0.22851151,  0.28515118,  0.27480674,
         -0.05180036,  0.24666467,  0.21755674,  0.23788613]], device='cuda:0') None
best_l after optimization: 2.412593126296997
alpha/beta optimization time: 1.9597804546356201
initial alpha-crown bounds: tensor([[ 0.28833306,  0.31344348,  0.28054643,  0.36190808,  0.32513076,
         -0.02028961,  0.29884475,  0.27222359,  0.29245251]], device='cuda:0')
Worst class: (+ rhs) -0.02028961479663849
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.30635380744934
##### Instance 88 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28833305835723877.

Properties batch 1, size 1
Remaining timeout: 117.23460149765015
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.31344348192214966.

Properties batch 2, size 1
Remaining timeout: 117.16879773139954
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2805464267730713.

Properties batch 3, size 1
Remaining timeout: 117.1041989326477
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.36190807819366455.

Properties batch 4, size 1
Remaining timeout: 117.03980445861816
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.32513076066970825.

Properties batch 5, size 1
Remaining timeout: 116.97341060638428
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02028961]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.04670355,  0.02242018,  0.04831819, -0.00060529,  0.01264117,
         0.58801603,  0.13561499,  0.03136355,  0.05818108,  0.04070981],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02028961]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 4
Node /17 input 0: size torch.Size([256]) unstable 5
-----------------
# of unstable neurons: 9
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] 
split level 1: [/input, 30] 
split level 2: [/input, 246] 
split level 3: [/input.3, 152] 
split level 4: [/input.3, 31] 
split level 5: [/input, 153] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0114    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0241    set_bounds 0.0114    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.058554887771606445


Properties batch 6, size 1
Remaining timeout: 116.82044315338135
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.29884475469589233.

Properties batch 7, size 1
Remaining timeout: 116.74842143058777
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2722235918045044.

Properties batch 8, size 1
Remaining timeout: 116.68137812614441
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.29245251417160034.
Result: safe in 3.3825 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.97541982e-04,  2.78713554e-03,  1.90404058e-03,  5.57884574e-03,
          1.00706033e-02,  5.46779484e-03,  3.12341005e-03, -1.22544616e-02,
          4.88017499e-03,  9.86958683e-01]], device='cuda:0')
diversed PGD initialization time: 0.1260
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00224995,  0.00466523,  0.00422409,  0.00878771,  0.01185354,
           0.00428719,  0.00403479, -0.01599586,  0.00499474,  0.97861123],
         [ 0.00224995,  0.00466523,  0.00422409,  0.00878771,  0.01185354,
           0.00428719,  0.00403479, -0.01599586,  0.00499474,  0.97861123]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97636127, 0.97394598, 0.97438717, 0.96982354, 0.96675771,
          0.97432405, 0.97457647, 0.99460709, 0.97361648]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4170 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.97541982e-04,  2.78713554e-03,  1.90404058e-03,  5.57884574e-03,
          1.00706033e-02,  5.46779484e-03,  3.12341005e-03, -1.22544616e-02,
          4.88017499e-03,  9.86958683e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97572356, 0.97330940, 0.97371322, 0.96902937, 0.96672267, 0.97362268,
         0.97382522, 0.99286348, 0.97280860]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5082 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00436175e+00, -1.41443387e-02,  9.82537866e-04, -6.16601110e-03,
         -1.34723298e-02, -1.35815442e-02, -8.80418718e-03, -1.60225630e-02,
          1.01120770e-03, -9.37734544e-03]], device='cuda:0')
diversed PGD initialization time: 0.1133
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99831229, -0.01403457,  0.00420831, -0.00474995, -0.01375702,
          -0.01560114, -0.00638048, -0.01555002,  0.00136903, -0.00877586],
         [ 0.99831229, -0.01403457,  0.00420831, -0.00474995, -0.01375702,
          -0.01560114, -0.00638048, -0.01555002,  0.00136903, -0.00877586]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01234686, 0.99410397, 1.00306225, 1.01206934, 1.01391339,
          1.00469279, 1.01386237, 0.99694324, 1.00708818]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4417 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00436175e+00, -1.41443387e-02,  9.82537866e-04, -6.16601110e-03,
         -1.34723298e-02, -1.35815442e-02, -8.80418718e-03, -1.60225630e-02,
          1.01120770e-03, -9.37734544e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01163304, 0.99400198, 1.00293422, 1.01061189, 1.01148856, 1.00340986,
         1.01328611, 0.99635541, 1.00675440]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5724 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.17913902e-04, -1.56171620e-04,  5.99063933e-03,  1.19227469e-02,
         -3.02829593e-03, -1.21392980e-02,  1.01233327e+00, -2.83564627e-03,
          4.35250998e-03,  5.99664450e-03]], device='cuda:0')
diversed PGD initialization time: 0.1394
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.05393508e-03, -4.64215875e-04,  5.77580929e-03,  8.38159025e-03,
          -3.15270573e-03, -1.41010433e-03,  1.00346756e+00, -2.79089808e-03,
           3.46641988e-03,  5.51756471e-03],
         [ 2.05393508e-03, -4.64215875e-04,  5.77580929e-03,  8.38159025e-03,
          -3.15270573e-03, -1.41010433e-03,  1.00346756e+00, -2.79089808e-03,
           3.46641988e-03,  5.51756471e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00141358, 1.00393176, 0.99769175, 0.99508595, 1.00662029,
          1.00487769, 1.00625849, 1.00000119, 0.99795002]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4340 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.17913902e-04, -1.56171620e-04,  5.99063933e-03,  1.19227469e-02,
         -3.02829593e-03, -1.21392980e-02,  1.01233327e+00, -2.83564627e-03,
          4.35250998e-03,  5.99664450e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 2] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99676466, 1.00119650, 0.99479139, 0.99359226, 1.00402987, 0.99845135,
         1.00340939, 0.99718845, 0.99516916]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5504 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.65154648e-04,  5.06680459e-03,  2.79398263e-03,  4.75539267e-03,
         -9.45884734e-04,  5.75971603e-03,  1.31898001e-03,  5.12391329e-04,
          3.08448821e-03,  9.83610868e-01]], device='cuda:0')
diversed PGD initialization time: 0.1273
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.03972512e-04,  6.37315214e-03,  4.37867641e-03,  6.76432252e-03,
          -1.25342980e-03,  5.39634377e-03,  1.79527327e-03, -2.11313367e-04,
           3.07588279e-03,  9.77801561e-01],
         [ 3.03972512e-04,  6.37315214e-03,  4.37867641e-03,  6.76432252e-03,
          -1.25342980e-03,  5.39634377e-03,  1.79527327e-03, -2.11313367e-04,
           3.07588279e-03,  9.77801561e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97749758, 0.97142839, 0.97342288, 0.97103727, 0.97905499,
          0.97240520, 0.97600627, 0.97801286, 0.97472566]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4231 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.65154648e-04,  5.06680459e-03,  2.79398263e-03,  4.75539267e-03,
         -9.45884734e-04,  5.75971603e-03,  1.31898001e-03,  5.12391329e-04,
          3.08448821e-03,  9.83610868e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 0] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97441930, 0.96805000, 0.97007215, 0.96730989, 0.97517931, 0.97073162,
         0.97340131, 0.97644514, 0.97276092]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5558 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00069380, -0.01107948,  0.01237558,  0.00450613, -0.01113153,
         -0.02205227, -0.01021312, -0.01318051, -0.00547726, -0.00893755]],
       device='cuda:0')
diversed PGD initialization time: 0.1289
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99106747, -0.00946473,  0.01502849,  0.00747573, -0.01107686,
          -0.02594424, -0.00846902, -0.01002201, -0.00389165, -0.00628766],
         [ 0.99106747, -0.00946473,  0.01502849,  0.00747573, -0.01107686,
          -0.02594424, -0.00846902, -0.01002201, -0.00389165, -0.00628766]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00053215, 0.97603899, 0.98359174, 1.00214434, 1.01701176,
          0.99953651, 1.00108945, 0.99495912, 0.99735510]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4068 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00069380, -0.01107948,  0.01237558,  0.00450613, -0.01113153,
         -0.02205227, -0.01021312, -0.01318051, -0.00547726, -0.00893755]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 8] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99741399, 0.97329414, 0.98111302, 0.99849343, 1.01268959, 0.99644184,
         0.99785703, 0.99184364, 0.99459875]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5081 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.63622874e-04,  9.64689612e-01,  2.71807611e-03, -1.28416717e-03,
         -3.96424159e-03, -1.21854246e-03,  5.20843267e-03,  3.74513865e-03,
         -5.97082824e-03, -3.25260311e-03]], device='cuda:0')
diversed PGD initialization time: 0.1271
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.97381899e-03,  9.44278717e-01,  6.71331584e-03,  1.56043470e-03,
          -2.62952968e-03,  1.02450699e-03,  6.15859777e-03,  7.01303780e-03,
          -3.62197310e-03, -6.64286315e-04],
         [ 1.97381899e-03,  9.44278717e-01,  6.71331584e-03,  1.56043470e-03,
          -2.62952968e-03,  1.02450699e-03,  6.15859777e-03,  7.01303780e-03,
          -3.62197310e-03, -6.64286315e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94230491, 0.93756539, 0.94271827, 0.94690824, 0.94325423,
          0.93812013, 0.93726569, 0.94790071, 0.94494301]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4109 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 8.63622874e-04,  9.64689612e-01,  2.71807611e-03, -1.28416717e-03,
         -3.96424159e-03, -1.21854246e-03,  5.20843267e-03,  3.74513865e-03,
         -5.97082824e-03, -3.25260311e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 15] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92254812, 0.91549915, 0.92124003, 0.92688805, 0.92242211, 0.91807145,
         0.91568190, 0.92654169, 0.92336357]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5059 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00901410, -0.01513279,  0.00107969, -0.00801407, -0.03915827,
          1.02395606, -0.00767479, -0.03790821, -0.00916149,  0.00202154]],
       device='cuda:0')
diversed PGD initialization time: 0.1286
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01035761, -0.01424689,  0.00383297, -0.00461611, -0.03965038,
           1.01364267, -0.00925928, -0.03712051, -0.00790667,  0.00348727],
         [-0.01035761, -0.01424689,  0.00383297, -0.00461611, -0.03965038,
           1.01364267, -0.00925928, -0.03712051, -0.00790667,  0.00348727]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02400029, 1.02788961, 1.00980973, 1.01825881, 1.05329311,
          1.02290189, 1.05076313, 1.02154934, 1.01015544]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4142 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00901410, -0.01513279,  0.00107969, -0.00801407, -0.03915827,
          1.02395606, -0.00767479, -0.03790821, -0.00916149,  0.00202154]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 9] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01812410, 1.02346754, 1.00602579, 1.01272833, 1.04528320, 1.01606321,
         1.04419875, 1.01712406, 1.00588608]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.63997775e-04,  7.56398588e-03,  1.05018020e-02,  1.51242018e-02,
         -2.54825130e-03,  6.20854646e-03,  5.41628152e-03, -6.35857880e-03,
          6.07475638e-03,  9.60151076e-01]], device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00145393, 0.01017140, 0.01449750, 0.02078902, 0.00676933,
          0.00520236, 0.00673187, 0.00140977, 0.00538670, 0.92941439],
         [0.00145393, 0.01017140, 0.01449750, 0.02078902, 0.00676933,
          0.00520236, 0.00673187, 0.00140977, 0.00538670, 0.92941439]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92796046, 0.91924298, 0.91491687, 0.90862536, 0.92264509,
          0.92421204, 0.92268252, 0.92800462, 0.92402768]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3989 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 5.63997775e-04,  7.56398588e-03,  1.05018020e-02,  1.51242018e-02,
         -2.54825130e-03,  6.20854646e-03,  5.41628152e-03, -6.35857880e-03,
          6.07475638e-03,  9.60151076e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92258573, 0.91328359, 0.90916145, 0.90333027, 0.91458344, 0.91825873,
         0.91756636, 0.91780519, 0.91799736]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5155 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.01482999e-05, -1.22584254e-02, -1.09603554e-02, -1.04347765e-02,
          4.82264161e-03, -1.31761283e-03, -2.02430412e-03,  1.00476253e+00,
          1.37979537e-03, -1.80689991e-03]], device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.05088949e-03, -6.72187656e-03, -9.66414809e-03, -4.86396253e-03,
           6.48676232e-03,  1.86639279e-03, -6.64468855e-04,  9.82151866e-01,
           3.26452404e-03,  2.97360122e-03],
         [ 1.05088949e-03, -6.72187656e-03, -9.66414809e-03, -4.86396253e-03,
           6.48676232e-03,  1.86639279e-03, -6.64468855e-04,  9.82151866e-01,
           3.26452404e-03,  2.97360122e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98110098, 0.98887372, 0.99181604, 0.98701584, 0.97566509,
          0.98028547, 0.98281634, 0.97888732, 0.97917825]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4191 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 9.01482999e-05, -1.22584254e-02, -1.09603554e-02, -1.04347765e-02,
          4.82264161e-03, -1.31761283e-03, -2.02430412e-03,  1.00476253e+00,
          1.37979537e-03, -1.80689991e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 6] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81111234, 0.81017876, 0.79531616, 0.79390663, 0.80263901, 0.79578918,
         0.80939698, 0.79923594, 0.79319048]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5257 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01545527, -0.02869884, -0.01231603,  0.79820848, -0.04353974,
          0.02967267, -0.01235529, -0.08619145, -0.00796327,  0.35391980]],
       device='cuda:0')
diversed PGD initialization time: 0.1253
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.44625641e-02, -3.14860269e-02,  4.58218157e-03,  4.31883335e-01,
           1.31119415e-03,  2.74351016e-02, -4.54403460e-04, -5.37145883e-02,
           4.89222258e-03,  6.23718381e-01],
         [-1.44625641e-02, -3.14860269e-02,  4.58218157e-03,  4.31883335e-01,
           1.31119415e-03,  2.74351016e-02, -4.54403460e-04, -5.37145883e-02,
           4.89222258e-03,  6.23718381e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.44634590,  0.46336937,  0.42730117,  0.43057215,  0.40444824,
           0.43233773,  0.48559791,  0.42699111, -0.19183505]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1332 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1939 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.79028407e-03, -3.42002511e-03,  1.07884407e-04, -3.13886255e-03,
          9.80817854e-01, -2.61626393e-03,  1.62281096e-04, -4.10676003e-03,
         -2.11667269e-03,  3.18732113e-03]], device='cuda:0')
diversed PGD initialization time: 0.1251
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.14911926e-03, -3.01848352e-03, -1.78962946e-05, -4.18698788e-03,
           9.70405817e-01, -3.01660597e-03, -7.94794410e-04, -3.31009924e-03,
          -3.23382765e-03,  4.83351946e-03],
         [-9.14911926e-03, -3.01848352e-03, -1.78962946e-05, -4.18698788e-03,
           9.70405817e-01, -3.01660597e-03, -7.94794410e-04, -3.31009924e-03,
          -3.23382765e-03,  4.83351946e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97955495, 0.97342432, 0.97042370, 0.97459280, 0.97342241,
          0.97120059, 0.97371590, 0.97363967, 0.96557230]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3997 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-6.79028407e-03, -3.42002511e-03,  1.07884407e-04, -3.13886255e-03,
          9.80817854e-01, -2.61626393e-03,  1.62281096e-04, -4.10676003e-03,
         -2.11667269e-03,  3.18732113e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 7] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97676855, 0.97136712, 0.96795040, 0.97210044, 0.97137922, 0.96914965,
         0.97093445, 0.97138876, 0.96344912]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4809 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.44180283e-03,  2.17899680e-03, -1.39895082e-03,  1.37572736e-03,
          1.26349740e-02,  4.45655733e-03, -2.10344791e-04, -5.55384159e-03,
          2.06782669e-03,  9.96182799e-01]], device='cuda:0')
diversed PGD initialization time: 0.1237
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.37372786e-04,  3.20059806e-03, -5.14671206e-04,  2.84217298e-03,
           1.68049745e-02,  3.38768214e-03, -2.66145915e-04, -9.36917961e-03,
           2.10855156e-03,  9.91718531e-01],
         [-7.37372786e-04,  3.20059806e-03, -5.14671206e-04,  2.84217298e-03,
           1.68049745e-02,  3.38768214e-03, -2.66145915e-04, -9.36917961e-03,
           2.10855156e-03,  9.91718531e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99245590, 0.98851794, 0.99223322, 0.98887634, 0.97491354,
          0.98833084, 0.99198467, 1.00108767, 0.98960996]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4095 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.44180283e-03,  2.17899680e-03, -1.39895082e-03,  1.37572736e-03,
          1.26349740e-02,  4.45655733e-03, -2.10344791e-04, -5.55384159e-03,
          2.06782669e-03,  9.96182799e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 5] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98528659, 0.98186028, 0.98415864, 0.98232216, 0.97235864, 0.98290002,
         0.98463792, 0.98795897, 0.98452967]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5156 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01837333, -0.00441927, -0.00161479,  0.01980852, -0.00351210,
         -0.03695434,  1.04616058, -0.00805356, -0.00520631,  0.00233208]],
       device='cuda:0')
diversed PGD initialization time: 0.1343
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00672635, -0.00940810, -0.01221992,  0.01107980, -0.00756210,
           0.05331895,  1.02787006, -0.01729043, -0.02066628, -0.00867692],
         [ 0.00672635, -0.00940810, -0.01221992,  0.01107980, -0.00756210,
           0.05331895,  1.02787006, -0.01729043, -0.02066628, -0.00867692]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02114367, 1.03727818, 1.04008996, 1.01679027, 1.03543222,
          0.97455108, 1.04516053, 1.04853630, 1.03654695]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4328 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.01837333, -0.00441927, -0.00161479,  0.01980852, -0.00351210,
         -0.03695434,  1.04616058, -0.00805356, -0.00520631,  0.00233208]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 11] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97411263, 0.96638680, 0.96739662, 0.90854716, 0.96705580, 0.74913561,
         0.97647238, 0.97665954, 0.96042562]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5348 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00122046,  0.00206499,  0.01158343,  0.01604205, -0.00263549,
         -0.00990074,  0.99894291, -0.00211711,  0.01334578,  0.00989500]],
       device='cuda:0')
diversed PGD initialization time: 0.1296
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00221051,  0.00311966,  0.01361932,  0.01708455, -0.00212632,
          -0.01020666,  0.99289030, -0.00109048,  0.01591814,  0.01108792],
         [-0.00221051,  0.00311966,  0.01361932,  0.01708455, -0.00212632,
          -0.01020666,  0.99289030, -0.00109048,  0.01591814,  0.01108792]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99510080, 0.98977065, 0.97927099, 0.97580576, 0.99501663,
          1.00309694, 0.99398077, 0.97697216, 0.98180240]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4144 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00122046,  0.00206499,  0.01158343,  0.01604205, -0.00263549,
         -0.00990074,  0.99894291, -0.00211711,  0.01334578,  0.00989500]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 6] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98947048, 0.98432094, 0.97342241, 0.97021884, 0.98978877, 0.99372375,
         0.98794830, 0.97161013, 0.97645605]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5958 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.66276908e-03, -1.72417611e-02, -4.10257280e-03, -3.10301036e-03,
         -3.82482447e-02,  1.03632867e+00, -4.81740385e-03, -4.04152274e-02,
         -1.06046796e-02, -3.23414803e-04]], device='cuda:0')
diversed PGD initialization time: 0.1241
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.80544770e-03, -1.56070143e-02, -2.52039731e-03, -2.19850242e-03,
          -3.45997550e-02,  1.03052557e+00, -4.07433510e-03, -3.67178470e-02,
          -9.41538811e-03,  3.11590731e-04],
         [-5.80544770e-03, -1.56070143e-02, -2.52039731e-03, -2.19850242e-03,
          -3.45997550e-02,  1.03052557e+00, -4.07433510e-03, -3.67178470e-02,
          -9.41538811e-03,  3.11590731e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03633106, 1.04613256, 1.03304601, 1.03272402, 1.06512535,
          1.03459990, 1.06724346, 1.03994095, 1.03021395]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4151 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.66276908e-03, -1.72417611e-02, -4.10257280e-03, -3.10301036e-03,
         -3.82482447e-02,  1.03632867e+00, -4.81740385e-03, -4.04152274e-02,
         -1.06046796e-02, -3.23414803e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.03318667, 1.04312742, 1.03017545, 1.02925158, 1.05946720, 1.03128302,
         1.06266189, 1.03730106, 1.02757215]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5714 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00168540, -0.00180367,  0.00297964,  0.00278392,  0.97749257,
          0.00101048,  0.00429422,  0.00641596,  0.00211342, -0.00408199]],
       device='cuda:0')
diversed PGD initialization time: 0.1125
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 5.76060265e-04, -2.58877873e-04, -8.90508294e-04, -4.85399365e-03,
           6.60395920e-01,  2.62370706e-03,  3.32802907e-03,  4.94639799e-02,
           4.31920588e-03,  2.86248207e-01],
         [ 5.76060265e-04, -2.58877873e-04, -8.90508294e-04, -4.85399365e-03,
           6.60395920e-01,  2.62370706e-03,  3.32802907e-03,  4.94639799e-02,
           4.31920588e-03,  2.86248207e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.65981984, 0.66065478, 0.66128641, 0.66524994, 0.65777218,
          0.65706789, 0.61093193, 0.65607673, 0.37414771]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3976 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00168540, -0.00180367,  0.00297964,  0.00278392,  0.97749257,
          0.00101048,  0.00429422,  0.00641596,  0.00211342, -0.00408199]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 16, 1, 8] with unstable size 15 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.51551729, 0.51777381, 0.51510119, 0.51676255, 0.51257408, 0.51423311,
         0.26492730, 0.51296210, 0.14961840]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4998 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00336397e+00, -8.90146941e-03, -3.10505927e-03, -1.06989592e-02,
         -4.57833335e-03,  7.25276023e-03, -5.07099926e-03, -1.24179274e-02,
          6.13577664e-04, -7.85575062e-03]], device='cuda:0')
diversed PGD initialization time: 0.1277
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00213909e+00, -8.23410600e-03, -1.89228356e-03, -9.95603204e-03,
          -3.93035263e-03,  7.83158094e-03, -3.85009497e-03, -1.17519349e-02,
           2.62975693e-04, -7.26575404e-03],
         [ 1.00213909e+00, -8.23410600e-03, -1.89228356e-03, -9.95603204e-03,
          -3.93035263e-03,  7.83158094e-03, -3.85009497e-03, -1.17519349e-02,
           2.62975693e-04, -7.26575404e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01037323, 1.00403142, 1.01209509, 1.00606942, 0.99430752,
          1.00598919, 1.01389098, 1.00187612, 1.00940490]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3721 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00336397e+00, -8.90146941e-03, -3.10505927e-03, -1.06989592e-02,
         -4.57833335e-03,  7.25276023e-03, -5.07099926e-03, -1.24179274e-02,
          6.13577664e-04, -7.85575062e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 3] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00959110, 0.99986386, 1.00941014, 1.00470018, 0.99399561, 1.00527132,
         1.01292539, 1.00013506, 1.00866866]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.68882984e-04, -1.24153793e-02, -1.65983438e-02, -1.52713209e-02,
          1.88282132e-03, -4.46017087e-03, -3.49232554e-03,  1.03116524e+00,
         -1.69876963e-03, -2.24483758e-03]], device='cuda:0')
diversed PGD initialization time: 0.1124
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00739464, 0.00553292, 0.00305529, 0.00874121, 0.00813932,
          0.01127839, 0.00522496, 0.89806885, 0.01139428, 0.01335864],
         [0.00739464, 0.00553292, 0.00305529, 0.00874121, 0.00813932,
          0.01127839, 0.00522496, 0.89806885, 0.01139428, 0.01335864]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.89067423, 0.89253592, 0.89501357, 0.88932765, 0.88992953,
          0.88679045, 0.89284390, 0.88667458, 0.88471019]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3651 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.68882984e-04, -1.24153793e-02, -1.65983438e-02, -1.52713209e-02,
          1.88282132e-03, -4.46017087e-03, -3.49232554e-03,  1.03116524e+00,
         -1.69876963e-03, -2.24483758e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 11] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.77261198, 0.76807934, 0.76020205, 0.75853461, 0.77252454, 0.76282477,
         0.77371490, 0.76381660, 0.75957245]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00247194,  0.00244974,  0.01321332,  0.00953089,  0.93747312,
          0.00747470,  0.00636615, -0.02147834,  0.00655100,  0.02477792]],
       device='cuda:0')
diversed PGD initialization time: 0.1235
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00673092, 0.00956241, 0.03022718, 0.02862289, 0.76017743,
          0.02295758, 0.01175104, 0.00512207, 0.01666213, 0.10400209],
         [0.00673092, 0.00956241, 0.03022718, 0.02862289, 0.76017743,
          0.02295758, 0.01175104, 0.00512207, 0.01666213, 0.10400209]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.75344652, 0.75061500, 0.72995025, 0.73155457, 0.73721987,
          0.74842638, 0.75505537, 0.74351531, 0.65617537]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4052 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00247194,  0.00244974,  0.01321332,  0.00953089,  0.93747312,
          0.00747470,  0.00636615, -0.02147834,  0.00655100,  0.02477792]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 8] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.64405930, 0.63728809, 0.61249226, 0.61477679, 0.62134778, 0.63798487,
         0.61905497, 0.62144792, 0.50853181]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00489855e+00, -2.52564698e-02, -3.73601913e-04, -1.60092115e-02,
         -2.32718028e-02, -1.70952827e-03,  9.96385515e-03, -3.22577804e-02,
         -3.68267298e-03, -1.68308392e-02]], device='cuda:0')
diversed PGD initialization time: 0.1117
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00019264, -0.02598733,  0.00227943, -0.01681659, -0.02261320,
          -0.00107297,  0.01381628, -0.03081773, -0.00300594, -0.01648062],
         [ 1.00019264, -0.02598733,  0.00227943, -0.01681659, -0.02261320,
          -0.00107297,  0.01381628, -0.03081773, -0.00300594, -0.01648062]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02618003, 0.99791324, 1.01700926, 1.02280581, 1.00126565,
          0.98637635, 1.03101039, 1.00319862, 1.01667333]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3936 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00489855e+00, -2.52564698e-02, -3.73601913e-04, -1.60092115e-02,
         -2.32718028e-02, -1.70952827e-03,  9.96385515e-03, -3.22577804e-02,
         -3.68267298e-03, -1.68308392e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 4] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02188551, 0.99185449, 1.01145351, 1.01788676, 0.99894834, 0.98345518,
         1.02418971, 0.99960941, 1.01302147]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4920 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.93855539e-03,  9.40129757e-01,  7.07705319e-03,  2.86009163e-03,
         -1.76836550e-03,  3.49276513e-03,  1.55336782e-03,  9.61659849e-03,
          4.37133014e-04,  4.89103794e-03]], device='cuda:0')
diversed PGD initialization time: 0.1123
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[3.59828398e-03, 9.10112739e-01, 1.29667968e-02, 7.03263283e-03,
          1.53042376e-04, 6.72537088e-03, 3.00835818e-03, 1.44047067e-02,
          3.88341397e-03, 8.60748440e-03],
         [3.59828398e-03, 9.10112739e-01, 1.29667968e-02, 7.03263283e-03,
          1.53042376e-04, 6.72537088e-03, 3.00835818e-03, 1.44047067e-02,
          3.88341397e-03, 8.60748440e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.90651447, 0.89714593, 0.90308011, 0.90995967, 0.90338737,
          0.90710437, 0.89570802, 0.90622932, 0.90150523]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3977 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.93855539e-03,  9.40129757e-01,  7.07705319e-03,  2.86009163e-03,
         -1.76836550e-03,  3.49276513e-03,  1.55336782e-03,  9.61659849e-03,
          4.37133014e-04,  4.89103794e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 9] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.88572216, 0.87809008, 0.87770188, 0.88556260, 0.88165021, 0.87570775,
         0.86901492, 0.87747824, 0.87961566]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5214 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.74072422e-02, -1.11391693e-02,  1.69827938e-02,  9.64974523e-01,
         -4.60508354e-02,  3.55188623e-02, -2.76103243e-03, -2.90846974e-02,
         -5.16153872e-04,  1.58789754e-03]], device='cuda:0')
diversed PGD initialization time: 0.1451
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01837224, -0.01273098,  0.02092327,  0.95495307, -0.04948195,
           0.04009952, -0.00150484, -0.03192279,  0.00135951,  0.00260386],
         [-0.01837224, -0.01273098,  0.02092327,  0.95495307, -0.04948195,
           0.04009952, -0.00150484, -0.03192279,  0.00135951,  0.00260386]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97332531, 0.96768403, 0.93402982, 1.00443506, 0.91485357,
          0.95645791, 0.98687589, 0.95359355, 0.95234919]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4585 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.74072422e-02, -1.11391693e-02,  1.69827938e-02,  9.64974523e-01,
         -4.60508354e-02,  3.55188623e-02, -2.76103243e-03, -2.90846974e-02,
         -5.16153872e-04,  1.58789754e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 3] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96960527, 0.96386123, 0.92941540, 0.99737585, 0.91153973, 0.95247763,
         0.98166823, 0.95007575, 0.94848502]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.07979402e-03,  9.50457215e-01,  7.68114626e-03,  8.63678753e-04,
         -2.36802176e-03,  3.52772325e-03, -2.20469385e-03,  1.03408098e-02,
          6.23621047e-04,  5.58906794e-03]], device='cuda:0')
diversed PGD initialization time: 0.1343
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00298720,  0.91655427,  0.01397058,  0.00452929, -0.00114547,
           0.00689448, -0.00127200,  0.02030339,  0.00440881,  0.00858205],
         [ 0.00298720,  0.91655427,  0.01397058,  0.00452929, -0.00114547,
           0.00689448, -0.00127200,  0.02030339,  0.00440881,  0.00858205]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.91356707, 0.90258372, 0.91202497, 0.91769975, 0.90965980,
          0.91782629, 0.89625090, 0.91214550, 0.90797222]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4207 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.07979402e-03,  9.50457215e-01,  7.68114626e-03,  8.63678753e-04,
         -2.36802176e-03,  3.52772325e-03, -2.20469385e-03,  1.03408098e-02,
          6.23621047e-04,  5.58906794e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 11, 1, 17] with unstable size 10 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.72268128, 0.70320731, 0.68929273, 0.70205975, 0.65221101, 0.70620286,
         0.63481784, 0.70394212, 0.69181025]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5107 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.43134259e-02, -8.24163109e-03,  1.06672794e-02,  9.92582440e-01,
         -3.92336436e-02,  1.06083006e-02, -4.62581217e-03, -2.71188170e-02,
         -2.16504931e-03,  6.75156713e-04]], device='cuda:0')
diversed PGD initialization time: 0.1391
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01300839, -0.00762631,  0.00963198,  0.98052359, -0.03569997,
           0.01872701, -0.00455970, -0.02317755, -0.00103795,  0.00159736],
         [-0.01300839, -0.00762631,  0.00963198,  0.98052359, -0.03569997,
           0.01872701, -0.00455970, -0.02317755, -0.00103795,  0.00159736]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99353200, 0.98814988, 0.97089159, 1.01622355, 0.96179658,
          0.98508328, 1.00370109, 0.98156154, 0.97892624]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4305 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.43134259e-02, -8.24163109e-03,  1.06672794e-02,  9.92582440e-01,
         -3.92336436e-02,  1.06083006e-02, -4.62581217e-03, -2.71188170e-02,
         -2.16504931e-03,  6.75156713e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 5] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99157757, 0.98602694, 0.96746850, 1.01337945, 0.96143055, 0.98309940,
         1.00187552, 0.97961438, 0.97695947]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5282 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.25532153e-03,  1.47964805e-03,  9.85829532e-03,  3.58060002e-04,
          9.50227141e-01,  2.04088539e-03,  5.48183918e-04, -2.53767222e-02,
          8.44977796e-04,  2.96711922e-03]], device='cuda:0')
diversed PGD initialization time: 0.1375
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 6.03903383e-02, -1.11872703e-03,  6.15799427e-03, -4.16666269e-04,
           9.61170673e-01, -1.26998574e-02, -2.61843055e-02, -2.61858106e-02,
          -5.31075150e-03, -1.06512979e-02],
         [ 6.03903383e-02, -1.11872703e-03,  6.15799427e-03, -4.16666269e-04,
           9.61170673e-01, -1.26998574e-02, -2.61843055e-02, -2.61858106e-02,
          -5.31075150e-03, -1.06512979e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.90078032, 0.96228939, 0.95501268, 0.96158731, 0.97387052,
          0.98735499, 0.98735648, 0.96648145, 0.97182196]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4147 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.25532153e-03,  1.47964805e-03,  9.85829532e-03,  3.58060002e-04,
          9.50227141e-01,  2.04088539e-03,  5.48183918e-04, -2.53767222e-02,
          8.44977796e-04,  2.96711922e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 4] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.88596314, 0.91707742, 0.90844214, 0.91814083, 0.91730702, 0.91981953,
         0.94549602, 0.91928452, 0.90429795]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5193 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00188899, -0.01911078, -0.01405793, -0.01703933,  0.00138066,
         -0.00394331, -0.00313568,  1.01531577,  0.00115094, -0.00311268]],
       device='cuda:0')
diversed PGD initialization time: 0.1269
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.01784074e-04,  4.51187789e-03, -7.12557137e-03, -1.52385533e-02,
           6.69416040e-04, -4.34218347e-03, -4.36781719e-03,  1.00452447e+00,
          -1.10215694e-03, -9.71170515e-03],
         [-2.01784074e-04,  4.51187789e-03, -7.12557137e-03, -1.52385533e-02,
           6.69416040e-04, -4.34218347e-03, -4.36781719e-03,  1.00452447e+00,
          -1.10215694e-03, -9.71170515e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00472629, 1.00001264, 1.01165009, 1.01976299, 1.00385511,
          1.00886667, 1.00889230, 1.00562668, 1.01423621]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4128 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00188899, -0.01911078, -0.01405793, -0.01703933,  0.00138066,
         -0.00394331, -0.00313568,  1.01531577,  0.00115094, -0.00311268]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 4] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98740423, 0.97606033, 0.97885901, 0.99824691, 0.98776823, 0.98907495,
         0.99022776, 0.98598337, 0.99689800]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5293 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01166789, -0.02434580,  1.02652478, -0.01061523, -0.00573842,
          0.00377885, -0.01160468, -0.02711482, -0.00414543, -0.01437249]],
       device='cuda:0')
diversed PGD initialization time: 0.1281
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01094783, -0.02193879,  1.01671720, -0.00945991, -0.00375724,
           0.00447747, -0.01015294, -0.02287078, -0.00355324, -0.01263890],
         [-0.01094783, -0.02193879,  1.01671720, -0.00945991, -0.00375724,
           0.00447747, -0.01015294, -0.02287078, -0.00355324, -0.01263890]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02766502, 1.03865600, 1.02617717, 1.02047443, 1.01223969,
          1.02687013, 1.03958797, 1.02027047, 1.02935612]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4083 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01166789, -0.02434580,  1.02652478, -0.01061523, -0.00573842,
          0.00377885, -0.01160468, -0.02711482, -0.00414543, -0.01437249]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 4] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02660537, 1.03604412, 1.02471280, 1.01818216, 1.01165867, 1.02570629,
         1.03734553, 1.01965475, 1.02805948]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5078 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.77265161e-03,  8.47498327e-03,  4.59139049e-03, -9.41233337e-03,
         -2.31187791e-03,  2.60041654e-03, -4.57867980e-04,  9.80511904e-01,
          4.43454832e-03, -2.29768082e-02]], device='cuda:0')
diversed PGD initialization time: 0.1271
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00507470,  0.02640679,  0.03845480,  0.00494438, -0.00157326,
           0.01368134,  0.00515108,  0.87911564,  0.01108497, -0.01638836],
         [ 0.00507470,  0.02640679,  0.03845480,  0.00494438, -0.00157326,
           0.01368134,  0.00515108,  0.87911564,  0.01108497, -0.01638836]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.87404096, 0.85270888, 0.84066081, 0.87417126, 0.88068891,
          0.86543429, 0.87396455, 0.86803067, 0.89550400]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4185 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.77265161e-03,  8.47498327e-03,  4.59139049e-03, -9.41233337e-03,
         -2.31187791e-03,  2.60041654e-03, -4.57867980e-04,  9.80511904e-01,
          4.43454832e-03, -2.29768082e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 17, 1, 10] with unstable size 16 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78008914, 0.75833035, 0.68999428, 0.73687267, 0.79169583, 0.78036344,
         0.78475547, 0.77912402, 0.80901223]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5315 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.42351806e-04,  9.63757455e-01,  1.95549428e-03, -1.74216926e-04,
         -3.19283828e-03,  1.19971484e-03, -2.34309584e-04,  5.95705211e-03,
         -1.59665942e-03,  2.81683356e-03]], device='cuda:0')
diversed PGD initialization time: 0.1293
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.29246339e-03,  9.27182674e-01, -4.88534570e-04,  4.78085876e-03,
           2.47365609e-03,  5.90994954e-03,  8.00900906e-03,  2.91099846e-02,
           1.67635828e-03,  5.22271544e-03],
         [-1.29246339e-03,  9.27182674e-01, -4.88534570e-04,  4.78085876e-03,
           2.47365609e-03,  5.90994954e-03,  8.00900906e-03,  2.91099846e-02,
           1.67635828e-03,  5.22271544e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92847514, 0.92767119, 0.92240179, 0.92470902, 0.92127275,
          0.91917366, 0.89807272, 0.92550629, 0.92195994]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4170 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.42351806e-04,  9.63757455e-01,  1.95549428e-03, -1.74216926e-04,
         -3.19283828e-03,  1.19971484e-03, -2.34309584e-04,  5.95705211e-03,
         -1.59665942e-03,  2.81683356e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 11] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89155406, 0.88884813, 0.87661719, 0.88412237, 0.83712161, 0.87887979,
         0.84774655, 0.88516325, 0.88085920]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6014 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00102662, 0.07027391, 0.78802353, 0.02964428, 0.00893597, 0.02102674,
         0.00145220, 0.00685447, 0.02192175, 0.01376893]], device='cuda:0')
diversed PGD initialization time: 0.1361
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01239981,  0.07520213,  0.44079691,  0.39076817,  0.01363900,
          -0.08847222,  0.03212307,  0.01423974,  0.03962189,  0.02315374],
         [ 0.01239981,  0.07520213,  0.44079691,  0.39076817,  0.01363900,
          -0.08847222,  0.03212307,  0.01423974,  0.03962189,  0.02315374]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.42839712, 0.36559477, 0.05002874, 0.42715791, 0.52926916,
          0.40867385, 0.42655718, 0.40117502, 0.41764319]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4142 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[0.00102662, 0.07027391, 0.78802353, 0.02964428, 0.00893597, 0.02102674,
         0.00145220, 0.00685447, 0.02192175, 0.01376893]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 16, 1, 14] with unstable size 15 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.14840749,  0.05234737, -0.40220186,  0.15265529,  0.10177183,
          0.13433258,  0.13507351,  0.12479566,  0.13675363]], device='cuda:0') None
best_l after optimization: 1.685157299041748
alpha/beta optimization time: 1.6730921268463135
initial alpha-crown bounds: tensor([[ 0.26285592,  0.19168951, -0.24110100,  0.26061434,  0.24416806,
          0.24401377,  0.24268591,  0.23608729,  0.24414350]], device='cuda:0')
Worst class: (+ rhs) -0.2411009967327118
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.81060552597046
##### Instance 118 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2628559172153473.

Properties batch 1, size 1
Remaining timeout: 117.73358726501465
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19168950617313385.

Properties batch 2, size 1
Remaining timeout: 117.66096806526184
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24110100]], device='cuda:0') need to verify.
Model prediction is: tensor([0.00102662, 0.07027391, 0.78802353, 0.02964428, 0.00893597, 0.02102674,
        0.00145220, 0.00685447, 0.02192175, 0.01376893], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24110100]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 13
-----------------
# of unstable neurons: 27
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 241] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 78] 
split level 3: [/input.3, 200] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 236] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.010377883911132812
Time: prepare 0.0035    bound 0.3792    transfer 0.0002    finalize 0.0022    func 0.3852    
Accumulated time: func 0.3852    prepare 0.0040    bound 0.3792    transfer 0.0002    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.16262 (6), -0.04270 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0109    solve 0.3853    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0109    solve 0.3853    add 0.0008    
Current (lb-rhs): -0.1626197099685669
2 domains visited
Cumulative time: 0.42505502700805664

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 171] [/input, 171] 
split level 1: [/input.3, 155] [/input, 175] 
split level 2: [/input, 175] [/input.3, 155] 
split level 3: [/input, 199] [/input, 135] 
split level 4: [/input, 233] [/input, 169] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009863853454589844
Time: prepare 0.0075    bound 0.2106    transfer 0.0003    finalize 0.0035    func 0.2220    
Accumulated time: func 0.6073    prepare 0.0120    bound 0.5898    transfer 0.0005    finalize 0.0058    
Current worst splitting domains lb-rhs (depth):
-0.00260 (11), 
length of domains: 1
Time: pickout 0.0005    decision 0.0218    set_bounds 0.0116    solve 0.2221    add 0.0009    
Accumulated time: pickout 0.0010    decision 0.0449    set_bounds 0.0225    solve 0.6074    add 0.0016    
Current (lb-rhs): -0.0026027709245681763
3 domains visited
Cumulative time: 0.6825764179229736

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 138] 
split level 1: [/input, 133] 
split level 2: [/input, 233] 
split level 3: [/input, 199] 
split level 4: [/input.3, 45] 
split level 5: [/input.3, 176] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.939338684082031e-05
Time: prepare 0.0076    bound 0.0055    transfer 0.0001    finalize 0.0027    func 0.0161    
Accumulated time: func 0.6233    prepare 0.0202    bound 0.5953    transfer 0.0007    finalize 0.0085    
length of domains: 0
Time: pickout 0.0007    decision 0.0252    set_bounds 0.0127    solve 0.0161    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0701    set_bounds 0.0352    solve 0.6235    add 0.0017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.7377781867980957


Properties batch 3, size 1
Remaining timeout: 116.8326952457428
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2606143355369568.

Properties batch 4, size 1
Remaining timeout: 116.75970196723938
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24416805803775787.

Properties batch 5, size 1
Remaining timeout: 116.68976616859436
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24401377141475677.

Properties batch 6, size 1
Remaining timeout: 116.62353944778442
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24268591403961182.

Properties batch 7, size 1
Remaining timeout: 116.55851197242737
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.23608729243278503.

Properties batch 8, size 1
Remaining timeout: 116.49306297302246
##### Instance 118 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2441435009241104.
Result: safe in 3.5712 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.01146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.0028669536113739014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.35000795e-04,  9.80767727e-01, -4.73037362e-04, -3.45842540e-03,
         -4.82204184e-03, -2.62064487e-03,  3.99078429e-03,  1.35119259e-03,
         -7.62610137e-03, -4.69662249e-03]], device='cuda:0')
diversed PGD initialization time: 0.1270
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00666285e-03,  9.57894206e-01,  4.34246659e-03, -2.12296844e-04,
          -3.19204107e-03,  5.02407551e-04,  3.52036208e-03,  5.80696762e-03,
          -4.02309000e-03, -4.21941280e-04],
         [ 1.00666285e-03,  9.57894206e-01,  4.34246659e-03, -2.12296844e-04,
          -3.19204107e-03,  5.02407551e-04,  3.52036208e-03,  5.80696762e-03,
          -4.02309000e-03, -4.21941280e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.95688754, 0.95355177, 0.95810652, 0.96108627, 0.95739180,
          0.95437384, 0.95208722, 0.96191728, 0.95831615]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4265 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.35000795e-04,  9.80767727e-01, -4.73037362e-04, -3.45842540e-03,
         -4.82204184e-03, -2.62064487e-03,  3.99078429e-03,  1.35119259e-03,
         -7.62610137e-03, -4.69662249e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 13] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95121199, 0.94711387, 0.95178300, 0.95515257, 0.95108247, 0.94880998,
         0.94564158, 0.95554137, 0.95153475]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5456 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01586103,  0.00461356,  0.04282814,  0.01271202,  0.00762826,
          0.01744495,  0.00838879,  0.84586954,  0.01813383, -0.00588437]],
       device='cuda:0')
diversed PGD initialization time: 0.1262
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.02095057, 0.03591678, 0.45793229, 0.08045389, 0.01115344,
          0.03070219, 0.01994358, 0.25755033, 0.02758601, 0.01745876],
         [0.02095057, 0.03591678, 0.45793229, 0.08045389, 0.01115344,
          0.03070219, 0.01994358, 0.25755033, 0.02758601, 0.01745876]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23659976,  0.22163355, -0.20038196,  0.17709644,  0.24639688,
           0.22684814,  0.23760675,  0.22996432,  0.24009156]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1355 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2202 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.01877525e-02, -2.93937102e-02,  1.02730215e+00, -1.65882558e-02,
         -1.94122270e-03,  3.45165282e-03, -1.44317001e-02, -2.22505629e-02,
         -3.63484025e-04, -1.16781741e-02]], device='cuda:0')
diversed PGD initialization time: 0.1246
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00961348, -0.04101774,  0.98861510,  0.20610152, -0.00909491,
          -0.12352666, -0.00250630, -0.03691533, -0.00992899, -0.02174248],
         [-0.00961348, -0.04101774,  0.98861510,  0.20610152, -0.00909491,
          -0.12352666, -0.00250630, -0.03691533, -0.00992899, -0.02174248]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99822855, 1.02963281, 0.78251356, 0.99770999, 1.11214173,
          0.99112141, 1.02553046, 0.99854410, 1.01035762]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4264 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.01877525e-02, -2.93937102e-02,  1.02730215e+00, -1.65882558e-02,
         -1.94122270e-03,  3.45165282e-03, -1.44317001e-02, -2.22505629e-02,
         -3.63484025e-04, -1.16781741e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 8] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.90100890, 0.96159619, 0.68990183, 0.92703265, 0.95823890, 0.92309254,
         0.95826137, 0.92393714, 0.93569106]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5277 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.24296677e-04,  9.87919033e-01, -2.20927596e-03, -3.23028862e-03,
         -4.37773019e-03,  2.71499157e-04, -5.74247539e-03,  4.21248376e-03,
         -1.42124295e-03,  3.84626538e-03]], device='cuda:0')
diversed PGD initialization time: 0.1181
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.07714972e-03,  6.73007250e-01,  2.27919221e-03, -2.69530714e-02,
          -5.60938194e-03,  1.97695121e-02, -2.56645456e-02, -1.71065331e-05,
           3.46901625e-01, -4.04316187e-03],
         [-5.07714972e-03,  6.73007250e-01,  2.27919221e-03, -2.69530714e-02,
          -5.60938194e-03,  1.97695121e-02, -2.56645456e-02, -1.71065331e-05,
           3.46901625e-01, -4.04316187e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.67808437, 0.67072809, 0.69996035, 0.67861664, 0.65323776,
          0.69867182, 0.67302436, 0.32610562, 0.67705041]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4181 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.24296677e-04,  9.87919033e-01, -2.20927596e-03, -3.23028862e-03,
         -4.37773019e-03,  2.71499157e-04, -5.74247539e-03,  4.21248376e-03,
         -1.42124295e-03,  3.84626538e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 18, 1, 21] with unstable size 17 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.30835366,  0.22931229,  0.20501891,  0.23864391,  0.22724099,
          0.27139848,  0.25592816, -0.34600583,  0.22451109]], device='cuda:0') None
best_l after optimization: 2.8829712867736816
alpha/beta optimization time: 1.6442031860351562
initial alpha-crown bounds: tensor([[ 0.40836558,  0.33780178,  0.35116047,  0.36404562,  0.35228398,
          0.39598036,  0.36889610, -0.02994275,  0.33438018]], device='cuda:0')
Worst class: (+ rhs) -0.029942750930786133
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.83411884307861
##### Instance 122 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4083655774593353.

Properties batch 1, size 1
Remaining timeout: 117.75854969024658
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3378017842769623.

Properties batch 2, size 1
Remaining timeout: 117.68909358978271
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.35116046667099.

Properties batch 3, size 1
Remaining timeout: 117.62272548675537
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3640456199645996.

Properties batch 4, size 1
Remaining timeout: 117.55716276168823
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3522839844226837.

Properties batch 5, size 1
Remaining timeout: 117.49173212051392
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3959803581237793.

Properties batch 6, size 1
Remaining timeout: 117.42689990997314
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.36889609694480896.

Properties batch 7, size 1
Remaining timeout: 117.3618438243866
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02994275]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.24296677e-04,  9.87919033e-01, -2.20927596e-03, -3.23028862e-03,
        -4.37773019e-03,  2.71499157e-04, -5.74247539e-03,  4.21248376e-03,
        -1.42124295e-03,  3.84626538e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02994275]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 14
-----------------
# of unstable neurons: 35
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 150] 
split level 3: [/input.3, 30] 
split level 4: [/input, 195] 
split level 5: [/input.3, 43] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0066    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0137    
Accumulated time: func 0.0137    prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0113    solve 0.0138    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0113    solve 0.0138    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052954912185668945


Properties batch 8, size 1
Remaining timeout: 117.22074556350708
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.334380179643631.
Result: safe in 2.8496 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00227046e+00, -1.34767890e-02, -2.30878592e-03, -1.28311217e-02,
         -1.00138150e-02,  8.24368745e-03,  2.04970688e-03, -1.80643499e-02,
         -6.21326268e-04, -1.03121921e-02]], device='cuda:0')
diversed PGD initialization time: 0.1258
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00051618e+00, -1.37498975e-02,  2.57074833e-04, -1.17581934e-02,
          -1.00675486e-02,  9.13863629e-03,  3.83699685e-03, -1.90082341e-02,
          -4.76665795e-04, -1.03554279e-02],
         [ 1.00051618e+00, -1.37498975e-02,  2.57074833e-04, -1.17581934e-02,
          -1.00675486e-02,  9.13863629e-03,  3.83699685e-03, -1.90082341e-02,
          -4.76665795e-04, -1.03554279e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01426601, 1.00025916, 1.01227438, 1.01058376, 0.99137753,
          0.99667919, 1.01952446, 1.00099289, 1.01087165]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4142 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00227046e+00, -1.34767890e-02, -2.30878592e-03, -1.28311217e-02,
         -1.00138150e-02,  8.24368745e-03,  2.04970688e-03, -1.80643499e-02,
         -6.21326268e-04, -1.03121921e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 9] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99619979, 0.98414749, 1.00583851, 1.00355339, 0.99079800, 0.99239892,
         1.01293504, 0.99650276, 1.00227475]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5125 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.11011618e-04,  2.51235068e-03,  1.03911757e-02,  6.49899244e-03,
          9.51153159e-01,  4.14713472e-03,  6.07553869e-03,  2.90967524e-03,
          5.45332581e-03, -4.36430424e-03]], device='cuda:0')
diversed PGD initialization time: 0.1347
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00762341, 0.01469126, 0.03117080, 0.02208977, 0.49796361,
          0.01494011, 0.01316262, 0.02826746, 0.01486886, 0.35641903],
         [0.00762341, 0.01469126, 0.03117080, 0.02208977, 0.49796361,
          0.01494011, 0.01316262, 0.02826746, 0.01486886, 0.35641903]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.49034020, 0.48327234, 0.46679282, 0.47587383, 0.48302349,
          0.48480099, 0.46969616, 0.48309475, 0.14154458]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4042 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.11011618e-04,  2.51235068e-03,  1.03911757e-02,  6.49899244e-03,
          9.51153159e-01,  4.14713472e-03,  6.07553869e-03,  2.90967524e-03,
          5.45332581e-03, -4.36430424e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 19, 1, 9] with unstable size 18 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.18498279, -0.19002271, -0.22887266, -0.19680175, -0.19273297,
         -0.18840507, -0.43539396, -0.20901874, -1.27832675]], device='cuda:0') None

all verified at 14th iter
best_l after optimization: 2.7755484580993652
alpha/beta optimization time: 0.14674997329711914
initial alpha-crown bounds: tensor([[0.37216687, 0.36499026, 0.34140396, 0.35377711, 0.36308554, 0.36561090,
         0.24865551, 0.36400113, 0.00185718]], device='cuda:0')
Worst class: (+ rhs) 0.001857176423072815
verified with init bound!
Result: safe-incomplete in 0.6458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.15936995e-03,  9.92783546e-01, -4.38502431e-03, -3.68278474e-03,
         -4.58898768e-03, -7.00555742e-04, -4.19308618e-03,  2.20523775e-03,
         -2.99309939e-03,  2.17366219e-03]], device='cuda:0')
diversed PGD initialization time: 0.1271
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00737178, 0.83897698, 0.02108820, 0.01439215, 0.00215456,
          0.01476644, 0.00329228, 0.04012430, 0.01347706, 0.01709265],
         [0.00737178, 0.83897698, 0.02108820, 0.01439215, 0.00215456,
          0.01476644, 0.00329228, 0.04012430, 0.01347706, 0.01709265]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.83160520, 0.81788880, 0.82458484, 0.83682245, 0.82421052,
          0.83568472, 0.79885268, 0.82549989, 0.82188433]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4104 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.15936995e-03,  9.92783546e-01, -4.38502431e-03, -3.68278474e-03,
         -4.58898768e-03, -7.00555742e-04, -4.19308618e-03,  2.20523775e-03,
         -2.99309939e-03,  2.17366219e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 12, 1, 20] with unstable size 11 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.62538922, 0.59235382, 0.60521030, 0.36394879, 0.60485935, 0.62426507,
         0.55029148, 0.60771394, 0.52817559]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4887 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.11596692e-03, -5.44327497e-03,  1.47362053e-03,  6.13994896e-04,
          9.92452204e-01, -2.32852995e-04,  9.75888222e-04, -4.88074124e-03,
          4.80614603e-04, -7.23615289e-04]], device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00619027, -0.01710691, -0.01663564, -0.05446009,  0.71179068,
           0.03026612, -0.00572225, -0.01339169,  0.30861199,  0.05673816],
         [-0.00619027, -0.01710691, -0.01663564, -0.05446009,  0.71179068,
           0.03026612, -0.00572225, -0.01339169,  0.30861199,  0.05673816]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.71798092, 0.72889757, 0.72842634, 0.76625079, 0.68152457,
          0.71751297, 0.72518235, 0.40317869, 0.65505254]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4161 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-3.11596692e-03, -5.44327497e-03,  1.47362053e-03,  6.13994896e-04,
          9.92452204e-01, -2.32852995e-04,  9.75888222e-04, -4.88074124e-03,
          4.80614603e-04, -7.23615289e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 23, 1, 6] with unstable size 22 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [22]; unstable size 22; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.62934285, 0.64967936, 0.60271806, 0.60022873, 0.55549842, 0.60326684,
         0.59287781, 0.21148574, 0.55125606]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5042 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00444281,  0.01772173,  0.03959590,  0.00364201, -0.07325041,
          0.00974565,  0.00884802, -0.04004891,  0.01095612,  1.00334537]],
       device='cuda:0')
diversed PGD initialization time: 0.1270
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00877708,  0.02920137,  0.19140165,  0.02449879, -0.14054677,
           0.02807803,  0.01541029, -0.03154914,  0.02475554,  0.81860185],
         [ 0.00877708,  0.02920137,  0.19140165,  0.02449879, -0.14054677,
           0.02807803,  0.01541029, -0.03154914,  0.02475554,  0.81860185]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.80982476, 0.78940046, 0.62720019, 0.79410303, 0.95914865,
          0.79052383, 0.80319154, 0.85015100, 0.79384631]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4245 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00444281,  0.01772173,  0.03959590,  0.00364201, -0.07325041,
          0.00974565,  0.00884802, -0.04004891,  0.01095612,  1.00334537]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 18, 1, 10] with unstable size 17 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.47581854, 0.45918450, 0.20881763, 0.38982809, 0.54811883, 0.45223576,
         0.47321802, 0.41433454, 0.45905703]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04324169,  0.02054436,  0.04445873, -0.00479719,  0.01133846,
          0.61257237,  0.13657196,  0.02791820,  0.05530289,  0.03752271]],
       device='cuda:0')
diversed PGD initialization time: 0.1331
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.57135294e-02, -6.18859380e-03,  1.10298395e-04, -9.73270833e-03,
          -1.21326409e-02,  5.31176150e-01,  5.32331765e-01, -1.52963698e-02,
           7.09779561e-03, -5.97499311e-04],
         [-2.57135294e-02, -6.18859380e-03,  1.10298395e-04, -9.73270833e-03,
          -1.21326409e-02,  5.31176150e-01,  5.32331765e-01, -1.52963698e-02,
           7.09779561e-03, -5.97499311e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.55688965,  0.53736472,  0.53106582,  0.54090887,  0.54330879,
          -0.00115561,  0.54647255,  0.52407837,  0.53177363]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1435 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2999 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.62933022e-04,  2.18594819e-03,  1.14224851e-03,  4.46535647e-03,
          9.55180451e-03,  5.88096678e-03,  2.77435780e-03, -1.09236538e-02,
          4.81973588e-03,  9.89637136e-01]], device='cuda:0')
diversed PGD initialization time: 0.1238
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00247153,  0.00498245,  0.00459827,  0.00923555,  0.01221183,
           0.00413004,  0.00412750, -0.01649246,  0.00499462,  0.97719556],
         [ 0.00247153,  0.00498245,  0.00459827,  0.00923555,  0.01221183,
           0.00413004,  0.00412750, -0.01649246,  0.00499462,  0.97719556]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97472405, 0.97221309, 0.97259730, 0.96796000, 0.96498376,
          0.97306550, 0.97306806, 0.99368799, 0.97220093]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4135 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.62933022e-04,  2.18594819e-03,  1.14224851e-03,  4.46535647e-03,
          9.55180451e-03,  5.88096678e-03,  2.77435780e-03, -1.09236538e-02,
          4.81973588e-03,  9.89637136e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 1] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97201079, 0.96976119, 0.97020662, 0.96521312, 0.95935857, 0.97046810,
         0.97009116, 0.98596400, 0.96919197]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5104 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00419199, -0.01330522,  0.00114782, -0.00616127, -0.01223795,
         -0.01259724, -0.00837804, -0.01532553,  0.00105964, -0.00894280]],
       device='cuda:0')
diversed PGD initialization time: 0.1248
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99701947, -0.01304974,  0.00536828, -0.00382903, -0.01278104,
          -0.01529871, -0.00657237, -0.01440772,  0.00130782, -0.00803960],
         [ 0.99701947, -0.01304974,  0.00536828, -0.00382903, -0.01278104,
          -0.01529871, -0.00657237, -0.01440772,  0.00130782, -0.00803960]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01006925, 0.99165118, 1.00084853, 1.00980055, 1.01231813,
          1.00359178, 1.01142716, 0.99571162, 1.00505912]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4137 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00419199, -0.01330522,  0.00114782, -0.00616127, -0.01223795,
         -0.01259724, -0.00837804, -0.01532553,  0.00105964, -0.00894280]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00724995, 0.98906827, 0.99903637, 1.00565922, 1.00717986, 0.99802798,
         1.00893641, 0.99270749, 1.00272405]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4920 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.01611391e-03, -2.29910016e-04,  5.88291883e-03,  1.08994544e-02,
         -3.01992893e-03, -9.43549722e-03,  1.00999582e+00, -2.76467204e-03,
          4.00793552e-03,  5.81527501e-03]], device='cuda:0')
diversed PGD initialization time: 0.1359
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 5.67243695e-02, -2.86626816e-03, -8.45579803e-03,  5.93943149e-03,
          -5.09141013e-03, -1.25356689e-02,  9.87163544e-01, -4.35259938e-03,
           9.07927752e-04,  2.15439498e-03],
         [ 5.67243695e-02, -2.86626816e-03, -8.45579803e-03,  5.93943149e-03,
          -5.09141013e-03, -1.25356689e-02,  9.87163544e-01, -4.35259938e-03,
           9.07927752e-04,  2.15439498e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93043917, 0.99002981, 0.99561936, 0.98122412, 0.99225497,
          0.99969923, 0.99151611, 0.98625565, 0.98500913]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4112 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.01611391e-03, -2.29910016e-04,  5.88291883e-03,  1.08994544e-02,
         -3.01992893e-03, -9.43549722e-03,  1.00999582e+00, -2.76467204e-03,
          4.00793552e-03,  5.81527501e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 9, 1, 4] with unstable size 8 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.87871408, 0.94742846, 0.94041258, 0.93947744, 0.95108247, 0.93736398,
         0.94658834, 0.94331551, 0.94282824]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5245 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.53320414e-04,  4.30405885e-03,  2.08251178e-03,  3.74358892e-03,
         -1.28171220e-03,  6.36901706e-03,  1.16807222e-03,  1.06199086e-03,
          3.36070359e-03,  9.86143053e-01]], device='cuda:0')
diversed PGD initialization time: 0.1266
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.99546731e-03, -1.49582550e-02, -2.40474939e-04, -3.16741019e-02,
          -1.23151802e-02, -5.51538914e-03, -1.67236552e-02, -3.25462967e-02,
           1.59403116e-01,  9.62046385e-01],
         [-5.99546731e-03, -1.49582550e-02, -2.40474939e-04, -3.16741019e-02,
          -1.23151802e-02, -5.51538914e-03, -1.67236552e-02, -3.25462967e-02,
           1.59403116e-01,  9.62046385e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96804184, 0.97700465, 0.96228683, 0.99372047, 0.97436154,
          0.96756178, 0.97877002, 0.99459267, 0.80264330]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4230 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.53320414e-04,  4.30405885e-03,  2.08251178e-03,  3.74358892e-03,
         -1.28171220e-03,  6.36901706e-03,  1.16807222e-03,  1.06199086e-03,
          3.36070359e-03,  9.86143053e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 18, 1, 2] with unstable size 17 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94798535, 0.94971120, 0.92777669, 0.95334202, 0.95151430, 0.93520749,
         0.94611257, 0.95565420, 0.79093111]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5065 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00028789, -0.00997381,  0.01270731,  0.00476484, -0.00956841,
         -0.02118986, -0.00934307, -0.01223961, -0.00553995, -0.00833688]],
       device='cuda:0')
diversed PGD initialization time: 0.1126
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.98841155, -0.00777556,  0.01586466,  0.00885008, -0.00957536,
          -0.02633438, -0.00774726, -0.00791542, -0.00358626, -0.00479423],
         [ 0.98841155, -0.00777556,  0.01586466,  0.00885008, -0.00957536,
          -0.02633438, -0.00774726, -0.00791542, -0.00358626, -0.00479423]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99618709, 0.97254688, 0.97956145, 0.99798691, 1.01474595,
          0.99615884, 0.99632698, 0.99199778, 0.99320579]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3865 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00028789, -0.00997381,  0.01270731,  0.00476484, -0.00956841,
         -0.02118986, -0.00934307, -0.01223961, -0.00553995, -0.00833688]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 6, 1, 9] with unstable size 5 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97247416, 0.95896775, 0.96283519, 0.97462249, 0.94196302, 0.98004651,
         0.96817535, 0.97276163, 0.97337967]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5169 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.00429551862180233, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.51448625e-04,  9.64108348e-01,  3.12304497e-03, -1.20957196e-03,
         -3.88778374e-03, -8.59640539e-04,  4.40400094e-03,  4.30826843e-03,
         -5.39232790e-03, -2.50416994e-03]], device='cuda:0')
diversed PGD initialization time: 0.1261
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00211338,  0.93976986,  0.00786158,  0.00230627, -0.00217484,
           0.00223271,  0.00455321,  0.00862597, -0.00189040,  0.00158696],
         [ 0.00211338,  0.93976986,  0.00786158,  0.00230627, -0.00217484,
           0.00223271,  0.00455321,  0.00862597, -0.00189040,  0.00158696]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93765646, 0.93190825, 0.93746358, 0.94194472, 0.93753713,
          0.93521667, 0.93114388, 0.94166028, 0.93818289]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4077 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 8.51448625e-04,  9.64108348e-01,  3.12304497e-03, -1.20957196e-03,
         -3.88778374e-03, -8.59640539e-04,  4.40400094e-03,  4.30826843e-03,
         -5.39232790e-03, -2.50416994e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 19] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89524353, 0.88474572, 0.89145976, 0.89851934, 0.89295489, 0.89106685,
         0.88548708, 0.89598840, 0.89148438]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.28443468e-03, -1.46869496e-02,  6.10426068e-04, -8.55638087e-03,
         -3.70512269e-02,  1.02462852e+00, -6.58574700e-03, -3.67036909e-02,
         -9.17357951e-03,  1.56535208e-03]], device='cuda:0')
diversed PGD initialization time: 0.1262
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01002609, -0.01354487,  0.00453781, -0.00385065, -0.03826337,
           1.01020086, -0.00880666, -0.03574735, -0.00740715,  0.00357552],
         [-0.01002609, -0.01354487,  0.00453781, -0.00385065, -0.03826337,
           1.01020086, -0.00880666, -0.03574735, -0.00740715,  0.00357552]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02022696, 1.02374578, 1.00566304, 1.01405156, 1.04846418,
          1.01900756, 1.04594827, 1.01760805, 1.00662529]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4053 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.28443468e-03, -1.46869496e-02,  6.10426068e-04, -8.55638087e-03,
         -3.70512269e-02,  1.02462852e+00, -6.58574700e-03, -3.67036909e-02,
         -9.17357951e-03,  1.56535208e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 9] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00924516, 0.99879569, 0.99815774, 1.00381458, 1.03459954, 1.00684011,
         1.03364217, 1.00900912, 0.99857074]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4876 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.32440162e-05,  7.03934580e-03,  9.45496559e-03,  1.27846301e-02,
         -3.76984850e-03,  7.08194077e-03,  4.36256081e-03, -4.46818769e-03,
          6.61499798e-03,  9.62799191e-01]], device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00220075, 0.00812185, 0.01146379, 0.01862155, 0.06915581,
          0.00263835, 0.00845596, 0.00739875, 0.00306850, 0.87802553],
         [0.00220075, 0.00812185, 0.01146379, 0.01862155, 0.06915581,
          0.00263835, 0.00845596, 0.00739875, 0.00306850, 0.87802553]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.87582481, 0.86990368, 0.86656177, 0.85940397, 0.80886972,
          0.87538719, 0.86956960, 0.87062681, 0.87495703]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4209 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.32440162e-05,  7.03934580e-03,  9.45496559e-03,  1.27846301e-02,
         -3.76984850e-03,  7.08194077e-03,  4.36256081e-03, -4.46818769e-03,
          6.61499798e-03,  9.62799191e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 12, 1, 6] with unstable size 11 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.73069102, 0.72451538, 0.71110898, 0.71341157, 0.57384455, 0.72935855,
         0.72729993, 0.70420271, 0.72704929]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5091 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.75617635e-04, -1.11625344e-02, -9.02546942e-03, -1.03018135e-02,
          4.98004630e-03, -9.03144479e-04, -1.64275989e-03,  1.00361729e+00,
          1.63529068e-03, -2.69929320e-03]], device='cuda:0')
diversed PGD initialization time: 0.1257
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.01298849, 0.02058610, 0.04199064, 0.04075372, 0.02173018,
          0.03458805, 0.01624813, 0.71493363, 0.02946213, 0.04004397],
         [0.01298849, 0.02058610, 0.04199064, 0.04075372, 0.02173018,
          0.03458805, 0.01624813, 0.71493363, 0.02946213, 0.04004397]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.70194513, 0.69434750, 0.67294300, 0.67417991, 0.69320345,
          0.68034559, 0.69868553, 0.68547148, 0.67488968]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4069 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.75617635e-04, -1.11625344e-02, -9.02546942e-03, -1.03018135e-02,
          4.98004630e-03, -9.03144479e-04, -1.64275989e-03,  1.00361729e+00,
          1.63529068e-03, -2.69929320e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 9, 1, 10] with unstable size 8 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.56904936, 0.56143546, 0.49210846, 0.53275210, 0.56296110, 0.54444247,
         0.56795049, 0.55019629, 0.53771377]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5883 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01467540, -0.02831132, -0.00350241,  0.73406780, -0.03969295,
          0.03281146, -0.00938720, -0.08480115, -0.00312705,  0.39514905]],
       device='cuda:0')
diversed PGD initialization time: 0.1277
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01579491, -0.02821856,  0.00275637,  0.34809655,  0.00323724,
           0.01812346, -0.00099730, -0.04213294,  0.01353109,  0.67376524],
         [-0.01579491, -0.02821856,  0.00275637,  0.34809655,  0.00323724,
           0.01812346, -0.00099730, -0.04213294,  0.01353109,  0.67376524]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.36389145,  0.37631512,  0.34534019,  0.34485930,  0.32997310,
           0.34909385,  0.39022949,  0.33456546, -0.32566869]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1363 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1854 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.53203374e-03, -3.56432796e-03,  5.19588590e-04, -2.44816393e-03,
          9.83864486e-01, -2.34669447e-03,  6.37225807e-04, -3.58837843e-03,
         -1.45084411e-03,  2.43712962e-03]], device='cuda:0')
diversed PGD initialization time: 0.1279
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[8.16021115e-04, 3.49096954e-04, 1.20177418e-02, 1.19222775e-02,
          8.94235909e-01, 8.81341100e-03, 5.39320707e-03, 5.49699366e-03,
          6.78842515e-03, 4.56560142e-02],
         [8.16021115e-04, 3.49096954e-04, 1.20177418e-02, 1.19222775e-02,
          8.94235909e-01, 8.81341100e-03, 5.39320707e-03, 5.49699366e-03,
          6.78842515e-03, 4.56560142e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.89341986, 0.89388680, 0.88221818, 0.88231361, 0.88542247,
          0.88884270, 0.88873893, 0.88744748, 0.84857988]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4459 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.53203374e-03, -3.56432796e-03,  5.19588590e-04, -2.44816393e-03,
          9.83864486e-01, -2.34669447e-03,  6.37225807e-04, -3.58837843e-03,
         -1.45084411e-03,  2.43712962e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 10, 1, 9] with unstable size 9 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.61646098, 0.62175691, 0.59903246, 0.61073160, 0.57411778, 0.60477501,
         0.58216631, 0.60202980, 0.39137971]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5615 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.28954276e-03,  2.12527066e-03, -1.12316012e-03,  1.12105906e-03,
          1.02808736e-02,  4.80681658e-03,  1.67094171e-04, -4.00918722e-03,
          2.01704353e-03,  9.96535540e-01]], device='cuda:0')
diversed PGD initialization time: 0.1154
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.59082764e-04,  3.63212079e-03,  1.68308616e-04,  3.28983366e-03,
           1.65316127e-02,  3.22035700e-03,  6.77146018e-05, -9.69657302e-03,
           2.08023190e-03,  9.89938498e-01],
         [-2.59082764e-04,  3.63212079e-03,  1.68308616e-04,  3.28983366e-03,
           1.65316127e-02,  3.22035700e-03,  6.77146018e-05, -9.69657302e-03,
           2.08023190e-03,  9.89938498e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99019760, 0.98630637, 0.98977017, 0.98664868, 0.97340691,
          0.98671812, 0.98987079, 0.99963510, 0.98785830]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3932 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.28954276e-03,  2.12527066e-03, -1.12316012e-03,  1.12105906e-03,
          1.02808736e-02,  4.80681658e-03,  1.67094171e-04, -4.00918722e-03,
          2.01704353e-03,  9.96535540e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 15, 1, 5] with unstable size 14 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92471534, 0.92279106, 0.91731578, 0.91155010, 0.92070836, 0.90508544,
         0.91846704, 0.84094650, 0.91527188]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01775585, -0.00399096, -0.00113428,  0.01845054, -0.00316276,
         -0.03431829,  1.04117620, -0.00726575, -0.00462665,  0.00238771]],
       device='cuda:0')
diversed PGD initialization time: 0.1194
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02178236, -0.01333834, -0.01790477, -0.00316054, -0.01774194,
           0.20022972,  0.96744758, -0.03563242, -0.03138997, -0.00750478],
         [-0.02178236, -0.01333834, -0.01790477, -0.00316054, -0.01774194,
           0.20022972,  0.96744758, -0.03563242, -0.03138997, -0.00750478]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98922992, 0.98078591, 0.98535234, 0.97060812, 0.98518950,
          0.76721787, 1.00308001, 0.99883753, 0.97495234]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4005 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.01775585, -0.00399096, -0.00113428,  0.01845054, -0.00316276,
         -0.03431829,  1.04117620, -0.00726575, -0.00462665,  0.00238771]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 14] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.53408766,  0.53569865,  0.50136232,  0.44605938,  0.54676461,
         -0.01213354,  0.51342392,  0.52629179,  0.37937236]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 4.160959720611572
alpha/beta optimization time: 0.017606019973754883
initial alpha-crown bounds: tensor([[0.55336308, 0.55237037, 0.52221382, 0.47252494, 0.56068355, 0.01256523,
         0.53532922, 0.54497480, 0.40693462]], device='cuda:0')
Worst class: (+ rhs) 0.01256522536277771
verified with init bound!
Result: safe-incomplete in 0.5126 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.64513218e-04,  1.71455741e-03,  1.08363628e-02,  1.52893215e-02,
         -2.72886083e-03, -9.20600444e-03,  1.00004041e+00, -2.36739218e-03,
          1.24940351e-02,  9.43045318e-03]], device='cuda:0')
diversed PGD initialization time: 0.1134
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.35353038e-03,  3.29314172e-03,  1.38841122e-02,  1.68416873e-02,
          -1.96798518e-03, -9.63953882e-03,  9.90961671e-01, -8.28951597e-04,
           1.63414627e-02,  1.12150759e-02],
         [-2.35353038e-03,  3.29314172e-03,  1.38841122e-02,  1.68416873e-02,
          -1.96798518e-03, -9.63953882e-03,  9.90961671e-01, -8.28951597e-04,
           1.63414627e-02,  1.12150759e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99331522, 0.98766851, 0.97707754, 0.97411996, 0.99292964,
          1.00060117, 0.99179065, 0.97462022, 0.97974658]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3773 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.64513218e-04,  1.71455741e-03,  1.08363628e-02,  1.52893215e-02,
         -2.72886083e-03, -9.20600444e-03,  1.00004041e+00, -2.36739218e-03,
          1.24940351e-02,  9.43045318e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 8] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98256040, 0.97653097, 0.96528780, 0.96342969, 0.98226482, 0.98038560,
         0.97964209, 0.96393973, 0.96872866]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4869 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.26535884e-03, -1.65052265e-02, -3.91742587e-03, -2.88390368e-03,
         -3.60754766e-02,  1.03513432e+00, -4.13567945e-03, -3.87789458e-02,
         -1.03767514e-02, -6.22645020e-04]], device='cuda:0')
diversed PGD initialization time: 0.1121
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.45801595e-03, -1.39751285e-02, -1.47546828e-03, -1.56417489e-03,
          -3.06016766e-02,  1.02678275e+00, -3.18787619e-03, -3.32071334e-02,
          -8.70995969e-03,  7.79628754e-05],
         [-5.45801595e-03, -1.39751285e-02, -1.47546828e-03, -1.56417489e-03,
          -3.06016766e-02,  1.02678275e+00, -3.18787619e-03, -3.32071334e-02,
          -8.70995969e-03,  7.79628754e-05]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03224075, 1.04075789, 1.02825820, 1.02834690, 1.05738437,
          1.02997065, 1.05998993, 1.03549266, 1.02670479]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3473 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.26535884e-03, -1.65052265e-02, -3.91742587e-03, -2.88390368e-03,
         -3.60754766e-02,  1.03513432e+00, -4.13567945e-03, -3.87789458e-02,
         -1.03767514e-02, -6.22645020e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 9] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.02636659, 1.03488529, 1.02239180, 1.02199650, 1.04830027, 1.02343047,
         1.05162537, 1.02987826, 1.02082467]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.25852802e-03, -3.13717872e-03, -2.29458511e-03,  1.09905750e-03,
          9.65464771e-01, -6.13398850e-04,  2.71297246e-03,  3.28553542e-02,
          8.59223306e-04, -3.95238400e-04]], device='cuda:0')
diversed PGD initialization time: 0.1134
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00120135,  0.00347484,  0.00642127, -0.00221597,  0.23829848,
           0.01285792,  0.00416930,  0.05436188,  0.01144823,  0.67498887],
         [ 0.00120135,  0.00347484,  0.00642127, -0.00221597,  0.23829848,
           0.01285792,  0.00416930,  0.05436188,  0.01144823,  0.67498887]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23709713,  0.23482364,  0.23187721,  0.24051444,  0.22544056,
           0.23412918,  0.18393660,  0.22685024, -0.43669039]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1222 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00316119e+00, -8.46815109e-03, -2.63656676e-03, -1.04878247e-02,
         -3.95248458e-03,  7.28354603e-03, -4.42583114e-03, -1.21010691e-02,
          5.39965928e-04, -7.58678466e-03]], device='cuda:0')
diversed PGD initialization time: 0.1388
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00087953e+00, -6.67765737e-03,  1.28553808e-03, -8.82576406e-03,
          -1.40134618e-03,  8.44319165e-03, -3.40085849e-03, -1.11684650e-02,
           9.94838774e-04, -6.65242225e-03],
         [ 1.00087953e+00, -6.67765737e-03,  1.28553808e-03, -8.82576406e-03,
          -1.40134618e-03,  8.44319165e-03, -3.40085849e-03, -1.11684650e-02,
           9.94838774e-04, -6.65242225e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00755715, 0.99959397, 1.00970531, 1.00228083, 0.99243635,
          1.00428033, 1.01204801, 0.99988467, 1.00753200]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4328 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00316119e+00, -8.46815109e-03, -2.63656676e-03, -1.04878247e-02,
         -3.95248458e-03,  7.28354603e-03, -4.42583114e-03, -1.21010691e-02,
          5.39965928e-04, -7.58678466e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 3] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00577867, 0.99576223, 1.00699925, 1.00097382, 0.98774171, 1.00299311,
         1.00933290, 0.99693125, 1.00529885]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5659 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.41731715e-05, -1.00714266e-02, -1.53528601e-02, -1.32598728e-02,
          2.40146741e-03, -2.62907892e-03, -2.45926902e-03,  1.01897824e+00,
         -3.40394676e-04, -2.12876499e-03]], device='cuda:0')
diversed PGD initialization time: 0.1357
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.01718599, 0.02786069, 0.04626015, 0.03793656, 0.02320440,
          0.03291135, 0.01926017, 0.69101739, 0.03024909, 0.04476989],
         [0.01718599, 0.02786069, 0.04626015, 0.03793656, 0.02320440,
          0.03291135, 0.01926017, 0.69101739, 0.03024909, 0.04476989]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.67383140, 0.66315669, 0.64475727, 0.65308082, 0.66781300,
          0.65810603, 0.67175722, 0.66076827, 0.64624751]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4236 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 5.41731715e-05, -1.00714266e-02, -1.53528601e-02, -1.32598728e-02,
          2.40146741e-03, -2.62907892e-03, -2.45926902e-03,  1.01897824e+00,
         -3.40394676e-04, -2.12876499e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 14, 1, 14] with unstable size 13 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.23864430, 0.31274641, 0.25382546, 0.28967643, 0.30500782, 0.25776416,
         0.30893046, 0.30294254, 0.23540264]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5137 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00371509,  0.00407512,  0.01773173,  0.01476695,  0.89564240,
          0.01173436,  0.00779516, -0.01923904,  0.00932626,  0.04608897]],
       device='cuda:0')
diversed PGD initialization time: 0.1249
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00856426, 0.01364800, 0.03888720, 0.03789351, 0.65209347,
          0.03031707, 0.01442230, 0.03299415, 0.02159296, 0.14743115],
         [0.00856426, 0.01364800, 0.03888720, 0.03789351, 0.65209347,
          0.03031707, 0.01442230, 0.03299415, 0.02159296, 0.14743115]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.64352918, 0.63844550, 0.61320627, 0.61419994, 0.62177640,
          0.63767117, 0.61909932, 0.63050050, 0.50466233]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4124 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00371509,  0.00407512,  0.01773173,  0.01476695,  0.89564240,
          0.01173436,  0.00779516, -0.01923904,  0.00932626,  0.04608897]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 9, 1, 8] with unstable size 8 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.60537738, 0.60182983, 0.57194257, 0.57307601, 0.57308966, 0.59881306,
         0.55226761, 0.35919353, 0.46153876]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5135 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00478160e+00, -2.42973417e-02, -2.09584832e-04, -1.60198063e-02,
         -2.18772180e-02, -9.71414149e-04,  1.05132312e-02, -3.14219445e-02,
         -3.47530097e-03, -1.62716508e-02]], device='cuda:0')
diversed PGD initialization time: 0.1211
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.98799324e-01, -2.66583934e-02,  3.70846689e-03, -1.77709311e-02,
          -2.15358473e-02,  1.46083534e-04,  1.46924108e-02, -2.77061462e-02,
          -2.67357379e-03, -1.63460076e-02],
         [ 9.98799324e-01, -2.66583934e-02,  3.70846689e-03, -1.77709311e-02,
          -2.15358473e-02,  1.46083534e-04,  1.46924108e-02, -2.77061462e-02,
          -2.67357379e-03, -1.63460076e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02545774, 0.99509084, 1.01657021, 1.02033520, 0.99865323,
          0.98410690, 1.02650547, 1.00147295, 1.01514530]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4045 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00478160e+00, -2.42973417e-02, -2.09584832e-04, -1.60198063e-02,
         -2.18772180e-02, -9.71414149e-04,  1.05132312e-02, -3.14219445e-02,
         -3.47530097e-03, -1.62716508e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 6] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01511681, 0.97956443, 1.00488067, 1.00840950, 0.99234629, 0.97556502,
         0.96889925, 0.99301940, 1.00613630]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4878 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00199830,  0.93808746,  0.00787184,  0.00307698, -0.00160984,
          0.00394759,  0.00101814,  0.01036149,  0.00097886,  0.00558826]],
       device='cuda:0')
diversed PGD initialization time: 0.1225
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00248713,  0.89436293, -0.00284120,  0.01253827,  0.00562133,
           0.00953641,  0.01416180,  0.03440815,  0.01169218,  0.00671339],
         [-0.00248713,  0.89436293, -0.00284120,  0.01253827,  0.00562133,
           0.00953641,  0.01416180,  0.03440815,  0.01169218,  0.00671339]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.89685005, 0.89720416, 0.88182467, 0.88874161, 0.88482654,
          0.88020110, 0.85995477, 0.88267076, 0.88764954]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4076 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00199830,  0.93808746,  0.00787184,  0.00307698, -0.00160984,
          0.00394759,  0.00101814,  0.01036149,  0.00097886,  0.00558826]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 10, 1, 15] with unstable size 9 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78132939, 0.77136362, 0.73439413, 0.77253276, 0.70172119, 0.74793667,
         0.72634649, 0.76076454, 0.77005005]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4999 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.63785554e-02, -1.02795213e-02,  1.48114711e-02,  9.67895269e-01,
         -4.31558155e-02,  3.43346968e-02, -3.35611403e-03, -2.68390030e-02,
         -9.56878066e-04,  1.43026561e-03]], device='cuda:0')
diversed PGD initialization time: 0.1230
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01873460, -0.01266164,  0.02171580,  0.95426178, -0.04972612,
           0.04077660, -0.00183833, -0.03302456,  0.00132731,  0.00235246],
         [-0.01873460, -0.01266164,  0.02171580,  0.95426178, -0.04972612,
           0.04077660, -0.00183833, -0.03302456,  0.00132731,  0.00235246]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97299635, 0.96692342, 0.93254596, 1.00398791, 0.91348517,
          0.95610011, 0.98728633, 0.95293444, 0.95190930]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4129 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.63785554e-02, -1.02795213e-02,  1.48114711e-02,  9.67895269e-01,
         -4.31558155e-02,  3.43346968e-02, -3.35611403e-03, -2.68390030e-02,
         -9.56878066e-04,  1.43026561e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 6] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96382535, 0.95916975, 0.92472804, 0.98829234, 0.90585190, 0.94774067,
         0.97599936, 0.94486243, 0.94336098]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5126 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00157235,  0.94125402,  0.00979020,  0.00207864, -0.00179519,
          0.00462136, -0.00213103,  0.01208244,  0.00186250,  0.00693584]],
       device='cuda:0')
diversed PGD initialization time: 0.1240
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01656807,  0.75426996,  0.01930448, -0.02378738,  0.01619827,
           0.11563414,  0.02075389,  0.06984131,  0.02169014,  0.01161155],
         [-0.01656807,  0.75426996,  0.01930448, -0.02378738,  0.01619827,
           0.11563414,  0.02075389,  0.06984131,  0.02169014,  0.01161155]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.77083802, 0.73496544, 0.77805734, 0.73807168, 0.63863581,
          0.73351604, 0.68442863, 0.73257983, 0.74265838]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4067 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00157235,  0.94125402,  0.00979020,  0.00207864, -0.00179519,
          0.00462136, -0.00213103,  0.01208244,  0.00186250,  0.00693584]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 49, 1, 27] with unstable size 48 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [48]; unstable size 48; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.31556675,  0.24815488,  0.19998801,  0.20105021,  0.00487399,
          0.23266290,  0.07947713, -0.01985478,  0.02162680]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 1.528693437576294
alpha/beta optimization time: 0.02043461799621582
initial alpha-crown bounds: tensor([[0.33709490, 0.26762792, 0.22550485, 0.21967770, 0.03494552, 0.25484970,
         0.10305808, 0.03124240, 0.05469245]], device='cuda:0')
Worst class: (+ rhs) 0.031242400407791138
verified with init bound!
Result: safe-incomplete in 0.5314 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.30590461e-02, -8.01397115e-03,  9.48558748e-03,  9.90607977e-01,
         -3.63668390e-02,  1.23002678e-02, -4.51347232e-03, -2.53361166e-02,
         -1.74867362e-03,  9.34384763e-04]], device='cuda:0')
diversed PGD initialization time: 0.1255
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.18747875e-02, -7.49059767e-03,  8.17801058e-03,  9.76624489e-01,
          -3.25088091e-02,  2.33942866e-02, -4.71251458e-03, -2.15620846e-02,
          -5.61855733e-04,  1.78849697e-03],
         [-1.18747875e-02, -7.49059767e-03,  8.17801058e-03,  9.76624489e-01,
          -3.25088091e-02,  2.33942866e-02, -4.71251458e-03, -2.15620846e-02,
          -5.61855733e-04,  1.78849697e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98849928, 0.98411506, 0.96844649, 1.00913334, 0.95323020,
          0.98133701, 0.99818659, 0.97718632, 0.97483599]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4198 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.30590461e-02, -8.01397115e-03,  9.48558748e-03,  9.90607977e-01,
         -3.63668390e-02,  1.23002678e-02, -4.51347232e-03, -2.53361166e-02,
         -1.74867362e-03,  9.34384763e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 5] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98041272, 0.97640854, 0.95892119, 0.99917591, 0.94715625, 0.97346789,
         0.98943985, 0.96920598, 0.96695811]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5169 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00690247,  0.00207597,  0.01113713,  0.00180431,  0.94682592,
          0.00288533,  0.00139751, -0.02405471,  0.00189800,  0.00288002]],
       device='cuda:0')
diversed PGD initialization time: 0.1253
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.11207493, -0.00272679,  0.00354208, -0.00101586,  0.96541363,
          -0.02377800, -0.04654197, -0.02729379, -0.01006373, -0.01950876],
         [ 0.11207493, -0.00272679,  0.00354208, -0.00101586,  0.96541363,
          -0.02377800, -0.04654197, -0.02729379, -0.01006373, -0.01950876]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.85333872, 0.96814042, 0.96187156, 0.96642947, 0.98919165,
          1.01195562, 0.99270743, 0.97547734, 0.98492241]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4154 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00690247,  0.00207597,  0.01113713,  0.00180431,  0.94682592,
          0.00288533,  0.00139751, -0.02405471,  0.00189800,  0.00288002]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.79410946, 0.89727348, 0.88815373, 0.89674473, 0.89794099, 0.90097338,
         0.92508507, 0.89994717, 0.87925923]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5729 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.25116482e-03, -1.71753317e-02, -1.24153048e-02, -1.49675459e-02,
          2.01271847e-03, -3.77544016e-03, -3.21647525e-03,  1.01307154e+00,
          8.50327313e-04, -3.38232517e-03]], device='cuda:0')
diversed PGD initialization time: 0.1456
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01692606, -0.02756885,  0.27080148, -0.04188208, -0.01890192,
          -0.02451817, -0.01774100,  0.91552126, -0.02245901, -0.05174851],
         [-0.01692606, -0.02756885,  0.27080148, -0.04188208, -0.01890192,
          -0.02451817, -0.01774100,  0.91552126, -0.02245901, -0.05174851]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93244731, 0.94309014, 0.64471978, 0.95740336, 0.93442321,
          0.94003946, 0.93326229, 0.93798029, 0.96726978]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4388 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.25116482e-03, -1.71753317e-02, -1.24153048e-02, -1.49675459e-02,
          2.01271847e-03, -3.77544016e-03, -3.21647525e-03,  1.01307154e+00,
          8.50327313e-04, -3.38232517e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 17, 1, 6] with unstable size 16 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.80581802, 0.77851546, 0.36484459, 0.75977468, 0.81715906, 0.82416439,
         0.81486106, 0.82277602, 0.85707837]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5163 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01108164, -0.02437259,  1.02511871, -0.01044601, -0.00499074,
          0.00361142, -0.01138960, -0.02586819, -0.00355199, -0.01323065]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01001580, -0.02082270,  1.01056564, -0.00873965, -0.00206617,
           0.00465579, -0.00923978, -0.01958810, -0.00266670, -0.01065735],
         [-0.01001580, -0.02082270,  1.01056564, -0.00873965, -0.00206617,
           0.00465579, -0.00923978, -0.01958810, -0.00266670, -0.01065735]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02058148, 1.03138828, 1.01930523, 1.01263177, 1.00590980,
          1.01980543, 1.03015375, 1.01323235, 1.02122295]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4145 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01108164, -0.02437259,  1.02511871, -0.01044601, -0.00499074,
          0.00361142, -0.01138960, -0.02586819, -0.00355199, -0.01323065]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 5] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01367188, 1.01749146, 1.01455760, 1.00471783, 0.99644351, 1.01375508,
         1.02343512, 1.00888419, 1.01481652]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5036 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.79896876e-03,  1.24405101e-02,  8.46445560e-03, -1.03015900e-02,
         -2.03843042e-03,  2.67187506e-03, -4.89085913e-04,  9.75557327e-01,
          3.77930701e-03, -2.33745426e-02]], device='cuda:0')
diversed PGD initialization time: 0.1377
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00741657, -0.00094851,  0.22081694,  0.00123108, -0.00666353,
           0.01618756,  0.00479795,  0.74436402,  0.00185896, -0.01152866],
         [-0.00741657, -0.00094851,  0.22081694,  0.00123108, -0.00666353,
           0.01618756,  0.00479795,  0.74436402,  0.00185896, -0.01152866]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.75178057, 0.74531251, 0.52354705, 0.74313295, 0.75102752,
          0.72817647, 0.73956609, 0.74250507, 0.75589269]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4168 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.79896876e-03,  1.24405101e-02,  8.46445560e-03, -1.03015900e-02,
         -2.03843042e-03,  2.67187506e-03, -4.89085913e-04,  9.75557327e-01,
          3.77930701e-03, -2.33745426e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 27, 1, 13] with unstable size 26 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.44225985, 0.30750945, 0.07607713, 0.28397486, 0.44593018, 0.41253525,
         0.43910694, 0.44337863, 0.46350336]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5335 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.32587820e-04,  9.62466359e-01,  2.66017020e-03, -3.82661819e-05,
         -3.04120407e-03,  1.73192471e-03, -1.18381530e-03,  6.76776469e-03,
         -8.98756087e-04,  3.77586484e-03]], device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01097627,  0.89085770, -0.00462490, -0.02393784,  0.00711529,
           0.07244329,  0.00735926,  0.04767915,  0.00161565,  0.00288796],
         [-0.01097627,  0.89085770, -0.00462490, -0.02393784,  0.00711529,
           0.07244329,  0.00735926,  0.04767915,  0.00161565,  0.00288796]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.90183395, 0.89548260, 0.91479552, 0.88374239, 0.81841439,
          0.88349843, 0.84317857, 0.88924205, 0.88796973]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4097 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.32587820e-04,  9.62466359e-01,  2.66017020e-03, -3.82661819e-05,
         -3.04120407e-03,  1.73192471e-03, -1.18381530e-03,  6.76776469e-03,
         -8.98756087e-04,  3.77586484e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 24, 1, 16] with unstable size 23 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [23]; unstable size 23; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.73752642, 0.70739847, 0.69893605, 0.67809415, 0.56921858, 0.70883214,
         0.63603622, 0.57085252, 0.68398231]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5285 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00321653, 0.07196923, 0.75360537, 0.02865252, 0.01119071, 0.02803119,
         0.00467085, 0.01541418, 0.02559163, 0.01949724]], device='cuda:0')
diversed PGD initialization time: 0.1269
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01079042,  0.06415685,  0.26147065,  0.58392739,  0.01226228,
          -0.09747928,  0.03612848,  0.01629769,  0.03935222,  0.02468146],
         [ 0.01079042,  0.06415685,  0.26147065,  0.58392739,  0.01226228,
          -0.09747928,  0.03612848,  0.01629769,  0.03935222,  0.02468146]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25068024,  0.19731380, -0.32245675,  0.24920836,  0.35894993,
           0.22534215,  0.24517295,  0.22211842,  0.23678918]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1911 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.01718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.004295520484447479, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.82352960e-05,  9.77115750e-01,  5.99518418e-04, -2.95563042e-03,
         -4.54717502e-03, -1.86757743e-03,  3.12799215e-03,  2.51920521e-03,
         -6.55496866e-03, -3.40262800e-03]], device='cuda:0')
diversed PGD initialization time: 0.1295
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00168535,  0.94366896,  0.00770052,  0.00181326, -0.00215875,
           0.00280903,  0.00207560,  0.00921762, -0.00101495,  0.00316216],
         [ 0.00168535,  0.94366896,  0.00770052,  0.00181326, -0.00215875,
           0.00280903,  0.00207560,  0.00921762, -0.00101495,  0.00316216]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94198358, 0.93596846, 0.94185573, 0.94582772, 0.94085991,
          0.94159335, 0.93445134, 0.94468391, 0.94050682]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4054 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.82352960e-05,  9.77115750e-01,  5.99518418e-04, -2.95563042e-03,
         -4.54717502e-03, -1.86757743e-03,  3.12799215e-03,  2.51920521e-03,
         -6.55496866e-03, -3.40262800e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 17] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92901689, 0.91988432, 0.91150707, 0.93102211, 0.92707235, 0.92805463,
         0.91354555, 0.92946225, 0.92415750]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5237 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.02421139, 0.01261120, 0.12069033, 0.02868198, 0.01580369, 0.02789807,
         0.01528861, 0.68166363, 0.02706673, 0.01159181]], device='cuda:0')
diversed PGD initialization time: 0.1602
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.02241272, 0.06043496, 0.51895297, 0.06101147, 0.00735511,
          0.02913477, 0.01630624, 0.21980563, 0.01986784, 0.00466049],
         [0.02241272, 0.06043496, 0.51895297, 0.06101147, 0.00735511,
          0.02913477, 0.01630624, 0.21980563, 0.01986784, 0.00466049]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19739291,  0.15937066, -0.29914734,  0.15879416,  0.21245052,
           0.19067085,  0.20349938,  0.19993779,  0.21514514]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1697 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2752 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.69629735e-03, -2.81179547e-02,  1.02581739e+00, -1.58971548e-02,
         -7.21283257e-04,  2.90630758e-03, -1.37180313e-02, -2.07153857e-02,
         -3.16418707e-04, -1.05962604e-02]], device='cuda:0')
diversed PGD initialization time: 0.1508
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00614111, -0.04787906,  0.88858175,  0.36156338, -0.00938429,
          -0.18425608,  0.02011273, -0.06782997, -0.00193171, -0.01734880],
         [ 0.00614111, -0.04787906,  0.88858175,  0.36156338, -0.00938429,
          -0.18425608,  0.02011273, -0.06782997, -0.00193171, -0.01734880]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.88244063, 0.93646079, 0.52701837, 0.89796603, 1.07283783,
          0.86846900, 0.95641172, 0.89051348, 0.90593058]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4533 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.69629735e-03, -2.81179547e-02,  1.02581739e+00, -1.58971548e-02,
         -7.21283257e-04,  2.90630758e-03, -1.37180313e-02, -2.07153857e-02,
         -3.16418707e-04, -1.05962604e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 17, 1, 10] with unstable size 16 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.41129702, 0.57922530, 0.06133097, 0.54891002, 0.57318223, 0.51931781,
         0.56432438, 0.51760352, 0.52175456]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5742 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.31877139e-03,  9.80389595e-01, -1.69906020e-03, -8.27036798e-04,
         -4.94356453e-03,  3.90338153e-03, -6.29477948e-03,  3.06667387e-03,
          8.89524817e-04,  6.97220862e-03]], device='cuda:0')
diversed PGD initialization time: 0.1276
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03924175,  0.46230847, -0.05412172, -0.08192149, -0.01883929,
          -0.04948815, -0.07727869, -0.03255236,  0.91141880, -0.04255834],
         [-0.03924175,  0.46230847, -0.05412172, -0.08192149, -0.01883929,
          -0.04948815, -0.07727869, -0.03255236,  0.91141880, -0.04255834]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.50155020,  0.51643020,  0.54422998,  0.48114777,  0.51179659,
           0.53958714,  0.49486083, -0.44911033,  0.50486684]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1369 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1853 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00170898e+00, -1.30515993e-02, -6.24462962e-04, -1.19509399e-02,
         -9.11216065e-03,  7.85803795e-03,  2.36424431e-03, -1.81585997e-02,
         -3.02627683e-04, -1.02715790e-02]], device='cuda:0')
diversed PGD initialization time: 0.1264
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.00024581e+00, -5.11004776e-03,  1.32036805e-02, -1.20698214e-02,
          -8.48989561e-03,  4.86215204e-03,  5.45144081e-04, -1.70021951e-02,
           1.38094276e-03, -8.79014283e-03],
         [ 1.00024581e+00, -5.11004776e-03,  1.32036805e-02, -1.20698214e-02,
          -8.48989561e-03,  4.86215204e-03,  5.45144081e-04, -1.70021951e-02,
           1.38094276e-03, -8.79014283e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00535583, 0.98704213, 1.01231563, 1.00873566, 0.99538368,
          0.99970067, 1.01724803, 0.99886489, 1.00903594]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4241 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00170898e+00, -1.30515993e-02, -6.24462962e-04, -1.19509399e-02,
         -9.11216065e-03,  7.85803795e-03,  2.36424431e-03, -1.81585997e-02,
         -3.02627683e-04, -1.02715790e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 17, 1, 9] with unstable size 16 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95507747, 0.84750301, 0.97760397, 0.96904522, 0.93255484, 0.96485472,
         0.96624166, 0.95977056, 0.94841170]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5532 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00198282, 0.00454515, 0.01410426, 0.00943066, 0.87027186, 0.00635948,
         0.00735731, 0.04264420, 0.00742687, 0.02581307]], device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00467865,  0.01170918,  0.02606936,  0.01305325,  0.19277969,
           0.00901178,  0.00711452, -0.00195959,  0.01319174,  0.72743380],
         [ 0.00467865,  0.01170918,  0.02606936,  0.01305325,  0.19277969,
           0.00901178,  0.00711452, -0.00195959,  0.01319174,  0.72743380]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.18810104,  0.18107051,  0.16671033,  0.17972644,  0.18376791,
           0.18566516,  0.19473928,  0.17958795, -0.53465414]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1351 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2129 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.65254551e-04,  9.87249136e-01, -3.23157012e-03, -2.88581848e-03,
         -4.21550870e-03,  4.37498093e-05, -4.36291844e-03,  3.30558419e-03,
         -2.04464048e-03,  3.24810296e-03]], device='cuda:0')
diversed PGD initialization time: 0.1252
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00450031,  0.68433398,  0.00462745, -0.00396793,  0.19912954,
           0.01014101,  0.00078142,  0.03050694,  0.01297484,  0.02703294],
         [ 0.00450031,  0.68433398,  0.00462745, -0.00396793,  0.19912954,
           0.01014101,  0.00078142,  0.03050694,  0.01297484,  0.02703294]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.67983365, 0.67970651, 0.68830192, 0.48520446, 0.67419297,
          0.68355256, 0.65382707, 0.67135912, 0.65730107]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4137 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.65254551e-04,  9.87249136e-01, -3.23157012e-03, -2.88581848e-03,
         -4.21550870e-03,  4.37498093e-05, -4.36291844e-03,  3.30558419e-03,
         -2.04464048e-03,  3.24810296e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 27, 1, 21] with unstable size 26 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17655882,  0.11804850,  0.11834329, -0.43755135,  0.12294576,
          0.15980130, -0.26310506, -0.21644974, -0.07697296]], device='cuda:0') None
best_l after optimization: 0.9638291001319885
alpha/beta optimization time: 1.730287790298462
initial alpha-crown bounds: tensor([[ 0.24212138,  0.20407361,  0.21553266, -0.31267798,  0.22472122,
          0.24074781, -0.15110001,  0.22890599,  0.07150444]], device='cuda:0')
Worst class: (+ rhs) -0.3126779794692993
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.73303651809692
##### Instance 165 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2421213835477829.

Properties batch 1, size 1
Remaining timeout: 117.66054797172546
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20407360792160034.

Properties batch 2, size 1
Remaining timeout: 117.59372806549072
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21553266048431396.

Properties batch 3, size 1
Remaining timeout: 117.52667951583862
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31267798]], device='cuda:0') need to verify.
Model prediction is: tensor([-8.65254551e-04,  9.87249136e-01, -3.23157012e-03, -2.88581848e-03,
        -4.21550870e-03,  4.37498093e-05, -4.36291844e-03,  3.30558419e-03,
        -2.04464048e-03,  3.24810296e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31267798]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 14
-----------------
# of unstable neurons: 35
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 123] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 18] 
split level 4: [/input, 95] 
split level 5: [/input, 178] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0067    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0143    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05433082580566406


Properties batch 4, size 1
Remaining timeout: 117.38022422790527
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22472122311592102.

Properties batch 5, size 1
Remaining timeout: 117.30421853065491
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24074780941009521.

Properties batch 6, size 1
Remaining timeout: 117.2301516532898
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15110001]], device='cuda:0') need to verify.
Model prediction is: tensor([-8.65254551e-04,  9.87249136e-01, -3.23157012e-03, -2.88581848e-03,
        -4.21550870e-03,  4.37498093e-05, -4.36291844e-03,  3.30558419e-03,
        -2.04464048e-03,  3.24810296e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15110001]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 14
-----------------
# of unstable neurons: 35
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 124] 
split level 2: [/input, 95] 
split level 3: [/input.3, 13] 
split level 4: [/input.3, 165] 
split level 5: [/input.3, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0065    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0136    
Accumulated time: func 0.0136    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0112    solve 0.0137    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0112    solve 0.0137    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05317425727844238


Properties batch 7, size 1
Remaining timeout: 117.08032631874084
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22890599071979523.

Properties batch 8, size 1
Remaining timeout: 117.00943851470947
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.07150444388389587.
Result: safe in 3.0576 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.00593302e-03, -5.91044128e-03,  1.66667998e-03,  1.50669366e-03,
          9.91368473e-01,  3.47369164e-03,  9.53249633e-04, -7.19191134e-03,
          1.29692256e-03,  1.11831725e-03]], device='cuda:0')
diversed PGD initialization time: 0.1341
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00833087, -0.02303512, -0.00884086, -0.06091209,  0.43897468,
           0.04612177, -0.01308301, -0.01124178,  0.48295411,  0.15032989],
         [ 0.00833087, -0.02303512, -0.00884086, -0.06091209,  0.43897468,
           0.04612177, -0.01308301, -0.01124178,  0.48295411,  0.15032989]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.43064380,  0.46200979,  0.44781554,  0.49988675,  0.39285290,
           0.45205769,  0.45021647, -0.04397944,  0.28864479]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1456 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2312 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
          0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877]],
       device='cuda:0')
diversed PGD initialization time: 0.1282
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01237868, -0.00416862,  0.07512477, -0.03822972, -0.04593683,
          -0.02142466, -0.02899124, -0.07240441,  0.47684693,  0.66784537],
         [-0.01237868, -0.00416862,  0.07512477, -0.03822972, -0.04593683,
          -0.02142466, -0.02899124, -0.07240441,  0.47684693,  0.66784537]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.68022406, 0.67201400, 0.59272063, 0.70607507, 0.71378219,
          0.68927002, 0.69683659, 0.74024975, 0.19099844]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4306 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
          0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 44, 1, 12] with unstable size 43 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [43]; unstable size 43; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.04166505, -0.03773655, -0.39767623, -0.31405258, -0.12319899,
         -0.19731650, -0.06500942, -0.15192643, -0.52754402]], device='cuda:0') None
best_l after optimization: -1.3979113101959229
alpha/beta optimization time: 1.676253318786621
initial alpha-crown bounds: tensor([[-0.00610879,  0.00419891, -0.34975988, -0.27230939, -0.06552699,
         -0.13475035, -0.01946153, -0.10044208, -0.45375130]], device='cuda:0')
Worst class: (+ rhs) -0.4537512958049774
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.77428388595581
##### Instance 167 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00610879]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00610879]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 238] 
split level 2: [/input.3, 57] 
split level 3: [/input, 138] 
split level 4: [/input.3, 149] 
split level 5: [/input.3, 187] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0242    set_bounds 0.0114    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0242    set_bounds 0.0114    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05463838577270508


Properties batch 1, size 1
Remaining timeout: 117.61550116539001
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.004198908805847168.

Properties batch 2, size 1
Remaining timeout: 117.54175138473511
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34975988]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34975988]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 238] 
split level 1: [/input.3, 38] 
split level 2: [/input.3, 102] 
split level 3: [/input.3, 57] 
split level 4: [/input, 138] 
split level 5: [/input.3, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0065    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0136    
Accumulated time: func 0.0136    prepare 0.0070    bound 0.0046    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0115    solve 0.0136    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0115    solve 0.0136    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05334758758544922


Properties batch 3, size 1
Remaining timeout: 117.39493799209595
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27230939]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27230939]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 238] 
split level 1: [/input.3, 57] 
split level 2: [/input.3, 38] 
split level 3: [/input, 138] 
split level 4: [/input.3, 149] 
split level 5: [/input.3, 153] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00011658668518066406
Time: prepare 0.0068    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0112    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0112    solve 0.0143    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053762197494506836


Properties batch 4, size 1
Remaining timeout: 117.24541020393372
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06552699]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06552699]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 123] 
split level 3: [/input.3, 57] 
split level 4: [/input.3, 18] 
split level 5: [/input, 138] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0066    bound 0.0047    transfer 0.0001    finalize 0.0023    func 0.0137    
Accumulated time: func 0.0137    prepare 0.0071    bound 0.0047    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.0138    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.0138    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053113460540771484


Properties batch 5, size 1
Remaining timeout: 117.09648180007935
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.13475035]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.13475035]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 238] 
split level 2: [/input.3, 57] 
split level 3: [/input, 138] 
split level 4: [/input.3, 149] 
split level 5: [/input.3, 187] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010037422180175781
Time: prepare 0.0065    bound 0.0047    transfer 0.0002    finalize 0.0024    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0071    bound 0.0047    transfer 0.0002    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0115    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0115    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05307197570800781


Properties batch 6, size 1
Remaining timeout: 116.94363951683044
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01946153]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01946153]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 238] 
split level 2: [/input.3, 57] 
split level 3: [/input, 138] 
split level 4: [/input.3, 149] 
split level 5: [/input.3, 187] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0066    bound 0.0048    transfer 0.0001    finalize 0.0023    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0071    bound 0.0048    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.054181575775146484


Properties batch 7, size 1
Remaining timeout: 116.79355931282043
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10044208]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10044208]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 57] 
split level 2: [/input, 138] 
split level 3: [/input.3, 238] 
split level 4: [/input.3, 133] 
split level 5: [/input.3, 187] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.059906005859375e-05
Time: prepare 0.0068    bound 0.0050    transfer 0.0001    finalize 0.0024    func 0.0144    
Accumulated time: func 0.0144    prepare 0.0073    bound 0.0050    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0116    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0116    solve 0.0144    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0545649528503418


Properties batch 8, size 1
Remaining timeout: 116.63541054725647
##### Instance 167 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45375130]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00400575,  0.01599514,  0.03876077,  0.00462739, -0.06514080,
         0.01042304,  0.00857331, -0.03931437,  0.01051267,  0.99873877],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45375130]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 238] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 150] 
split level 4: [/input.3, 57] 
split level 5: [/input, 138] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009411096572875977
Time: prepare 0.0066    bound 0.2075    transfer 0.0004    finalize 0.0037    func 0.2184    
Accumulated time: func 0.2184    prepare 0.0071    bound 0.2075    transfer 0.0004    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.07443 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0238    set_bounds 0.0114    solve 0.2185    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0238    set_bounds 0.0114    solve 0.2185    add 0.0008    
Current (lb-rhs): -0.0744255781173706
1 domains visited
Cumulative time: 0.25922417640686035

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 188] 
split level 1: [/input.3, 30] 
split level 2: [/input.3, 149] 
split level 3: [/input.3, 187] 
split level 4: [/input.3, 18] 
split level 5: [/input.3, 87] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0074    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0149    
Accumulated time: func 0.2334    prepare 0.0150    bound 0.2123    transfer 0.0005    finalize 0.0063    
length of domains: 0
Time: pickout 0.0005    decision 0.0243    set_bounds 0.0130    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0481    set_bounds 0.0244    solve 0.2335    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.3122696876525879

Result: safe in 3.7756 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03934544,  0.01796347,  0.04000421, -0.00741754,  0.00966082,
          0.63869888,  0.13742734,  0.02339168,  0.05280437,  0.03456786]],
       device='cuda:0')
diversed PGD initialization time: 0.1310
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.04838194,  0.02035689,  0.04355958, -0.01161185,  0.01366589,
           0.22425145,  0.53191012,  0.02936751,  0.06150467,  0.04025769],
         [ 0.04838194,  0.02035689,  0.04355958, -0.01161185,  0.01366589,
           0.22425145,  0.53191012,  0.02936751,  0.06150467,  0.04025769]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.17586951,  0.20389456,  0.18069187,  0.23586330,  0.21058556,
          -0.30765867,  0.19488394,  0.16274677,  0.18399376]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1392 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2091 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.71620059e-04,  1.58499181e-03,  3.82125378e-04,  3.35209072e-03,
          9.03081521e-03,  6.29607588e-03,  2.42587924e-03, -9.59530473e-03,
          4.76207584e-03,  9.92309511e-01]], device='cuda:0')
diversed PGD initialization time: 0.1249
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.65065953e-03, -3.23669612e-03, -5.91798127e-03, -3.83469462e-03,
           4.93604653e-02,  4.01321054e-03,  6.16714358e-04, -6.80981576e-03,
           3.36825848e-03,  9.74018097e-01],
         [-2.65065953e-03, -3.23669612e-03, -5.91798127e-03, -3.83469462e-03,
           4.93604653e-02,  4.01321054e-03,  6.16714358e-04, -6.80981576e-03,
           3.36825848e-03,  9.74018097e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97666878, 0.97725481, 0.97993606, 0.97785282, 0.92465764,
          0.97000492, 0.97340137, 0.98082793, 0.97064984]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4221 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-3.71620059e-04,  1.58499181e-03,  3.82125378e-04,  3.35209072e-03,
          9.03081521e-03,  6.29607588e-03,  2.42587924e-03, -9.59530473e-03,
          4.76207584e-03,  9.92309511e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 16, 1, 3] with unstable size 15 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93562329, 0.94286579, 0.93837279, 0.94178730, 0.82347268, 0.90272290,
         0.92173928, 0.95416379, 0.91048509]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00402296, -0.01246624,  0.00131305, -0.00615649, -0.01100349,
         -0.01161359, -0.00795045, -0.01462892,  0.00110755, -0.00850862]],
       device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99613649, -0.01208459,  0.00637670, -0.00302903, -0.01171179,
          -0.01491775, -0.00653993, -0.01339252,  0.00113966, -0.00740330],
         [ 0.99613649, -0.01208459,  0.00637670, -0.00302903, -0.01171179,
          -0.01491775, -0.00653993, -0.01339252,  0.00113966, -0.00740330]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00822103, 0.98975980, 0.99916553, 1.00784826, 1.01105428,
          1.00267637, 1.00952899, 0.99499685, 1.00353980]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3968 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00402296, -0.01246624,  0.00131305, -0.00615649, -0.01100349,
         -0.01161359, -0.00795045, -0.01462892,  0.00110755, -0.00850862]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 3] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00287235, 0.98407817, 0.99514312, 1.00071204, 1.00270748, 0.99215317,
         1.00459290, 0.98900193, 0.99869895]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5028 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.41108036e-03, -3.02888453e-04,  5.77554107e-03,  9.87495482e-03,
         -3.01109999e-03, -6.73017651e-03,  1.00765812e+00, -2.69295275e-03,
          3.66180390e-03,  5.63403219e-03]], device='cuda:0')
diversed PGD initialization time: 0.1262
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.02826655e-01,  6.27268106e-03,  7.62790442e-05,  1.57362893e-02,
           5.42886555e-05, -1.08885914e-02,  8.69164050e-01,  9.85272229e-03,
           8.85792077e-03,  1.02417171e-02],
         [ 1.02826655e-01,  6.27268106e-03,  7.62790442e-05,  1.57362893e-02,
           5.42886555e-05, -1.08885914e-02,  8.69164050e-01,  9.85272229e-03,
           8.85792077e-03,  1.02417171e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.76633739, 0.86289138, 0.86908776, 0.85342777, 0.86910975,
          0.88005263, 0.85931134, 0.86030614, 0.85892236]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4056 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.41108036e-03, -3.02888453e-04,  5.77554107e-03,  9.87495482e-03,
         -3.01109999e-03, -6.73017651e-03,  1.00765812e+00, -2.69295275e-03,
          3.66180390e-03,  5.63403219e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 14, 1, 5] with unstable size 13 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.58510637, 0.73747575, 0.71541554, 0.72047973, 0.74148178, 0.71876323,
         0.68568748, 0.72878951, 0.72263825]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5134 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00144126,  0.00354103,  0.00137036,  0.00273184, -0.00161621,
          0.00697725,  0.00101724,  0.00161065,  0.00363623,  0.98867846]],
       device='cuda:0')
diversed PGD initialization time: 0.1245
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01679926, -0.02191329, -0.04402302, -0.06938097, -0.04336334,
          -0.01657865, -0.02399732, -0.06432779,  0.59042376,  0.69106281],
         [-0.01679926, -0.02191329, -0.04402302, -0.06938097, -0.04336334,
          -0.01657865, -0.02399732, -0.06432779,  0.59042376,  0.69106281]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.70786208, 0.71297610, 0.73508584, 0.76044381, 0.73442614,
          0.70764148, 0.71506011, 0.75539058, 0.10063905]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4026 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00144126,  0.00354103,  0.00137036,  0.00273184, -0.00161621,
          0.00697725,  0.00101724,  0.00161065,  0.00363623,  0.98867846]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 48, 1, 4] with unstable size 47 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [47]; unstable size 47; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32629523,  0.27139908,  0.26098353,  0.36050090,  0.40871963,
          0.25981864,  0.32235399,  0.32768250, -0.24902084]], device='cuda:0') None
best_l after optimization: 4.526888847351074
alpha/beta optimization time: 1.7244510650634766
initial alpha-crown bounds: tensor([[ 0.57608235,  0.56469238,  0.55127376,  0.60341555,  0.56811619,
          0.53316915,  0.56160277,  0.58729559, -0.01875873]], device='cuda:0')
Worst class: (+ rhs) -0.018758729100227356
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.78329396247864
##### Instance 172 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5760823488235474.

Properties batch 1, size 1
Remaining timeout: 117.71094036102295
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5646923780441284.

Properties batch 2, size 1
Remaining timeout: 117.64311647415161
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.551273763179779.

Properties batch 3, size 1
Remaining timeout: 117.57354617118835
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6034155488014221.

Properties batch 4, size 1
Remaining timeout: 117.49996042251587
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5681161880493164.

Properties batch 5, size 1
Remaining timeout: 117.42959856987
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.533169150352478.

Properties batch 6, size 1
Remaining timeout: 117.36102414131165
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.561602771282196.

Properties batch 7, size 1
Remaining timeout: 117.29465317726135
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5872955918312073.

Properties batch 8, size 1
Remaining timeout: 117.22951650619507
##### Instance 172 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01875873]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00144126,  0.00354103,  0.00137036,  0.00273184, -0.00161621,
         0.00697725,  0.00101724,  0.00161065,  0.00363623,  0.98867846],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01875873]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 4
Node /17 input 0: size torch.Size([256]) unstable 43
-----------------
# of unstable neurons: 47
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 162] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 238] 
split level 4: [/input.3, 38] 
split level 5: [/input.3, 230] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0035    bound 0.0048    transfer 0.0001    finalize 0.0017    func 0.0103    
Accumulated time: func 0.0103    prepare 0.0040    bound 0.0048    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0107    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0107    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04911303520202637

Result: safe in 2.9092 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99987930, -0.00886728,  0.01304163,  0.00502460, -0.00800317,
         -0.02032651, -0.00846239, -0.01129943, -0.00560518, -0.00773562]],
       device='cuda:0')
diversed PGD initialization time: 0.1206
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.79030967e-01, -3.37119401e-03, -7.95848668e-03, -2.51069665e-02,
           1.70294195e-04,  6.89002872e-02, -1.39536336e-02,  1.48530304e-03,
          -1.21354312e-03, -3.00180912e-03],
         [ 9.79030967e-01, -3.37119401e-03, -7.95848668e-03, -2.51069665e-02,
           1.70294195e-04,  6.89002872e-02, -1.39536336e-02,  1.48530304e-03,
          -1.21354312e-03, -3.00180912e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98240215, 0.98698944, 1.00413799, 0.97886068, 0.91013068,
          0.99298459, 0.97754568, 0.98024452, 0.98203278]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3967 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99987930, -0.00886728,  0.01304163,  0.00502460, -0.00800317,
         -0.02032651, -0.00846239, -0.01129943, -0.00560518, -0.00773562]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 21, 1, 11] with unstable size 20 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [20]; unstable size 20; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.67699611, 0.64144224, 0.57904899, 0.64559805, 0.32014564, 0.66125864,
         0.56231695, 0.64234823, 0.68453836]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724089220166206, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.43141228e-04,  9.63284373e-01,  3.45218182e-03, -1.05278194e-03,
         -3.76060978e-03, -4.28386033e-04,  3.57062370e-03,  4.88245487e-03,
         -4.73100692e-03, -1.61200017e-03]], device='cuda:0')
diversed PGD initialization time: 0.1459
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.50565633e-03,  9.31015909e-01,  9.93704796e-03,  3.53033841e-03,
          -1.51039660e-03,  3.64645571e-03,  3.81635875e-03,  1.06582493e-02,
          -2.04287469e-04,  3.67099792e-03],
         [ 2.50565633e-03,  9.31015909e-01,  9.93704796e-03,  3.53033841e-03,
          -1.51039660e-03,  3.64645571e-03,  3.81635875e-03,  1.06582493e-02,
          -2.04287469e-04,  3.67099792e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92851025, 0.92107886, 0.92748559, 0.93252629, 0.92736948,
          0.92719954, 0.92035764, 0.93122017, 0.92734492]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4452 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 8.43141228e-04,  9.63284373e-01,  3.45218182e-03, -1.05278194e-03,
         -3.76060978e-03, -4.28386033e-04,  3.57062370e-03,  4.88245487e-03,
         -4.73100692e-03, -1.61200017e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 17, 1, 21] with unstable size 16 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.84880781, 0.83424425, 0.75826228, 0.80142093, 0.84190160, 0.83698165,
         0.82097286, 0.83710259, 0.69922543]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5370 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.43902102e-03, -1.42843425e-02,  1.85519457e-05, -8.95579159e-03,
         -3.48416381e-02,  1.02541876e+00, -5.26817143e-03, -3.53382677e-02,
         -9.11989063e-03,  1.08962506e-03]], device='cuda:0')
diversed PGD initialization time: 0.1244
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00977837, -0.01279613,  0.00529374, -0.00312167, -0.03677920,
           1.00689530, -0.00842905, -0.03427438, -0.00690655,  0.00364581],
         [-0.00977837, -0.01279613,  0.00529374, -0.00312167, -0.03677920,
           1.00689530, -0.00842905, -0.03427438, -0.00690655,  0.00364581]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01667368, 1.01969147, 1.00160158, 1.01001692, 1.04367447,
          1.01532435, 1.04116964, 1.01380181, 1.00324953]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4122 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-7.43902102e-03, -1.42843425e-02,  1.85519457e-05, -8.95579159e-03,
         -3.48416381e-02,  1.02541876e+00, -5.26817143e-03, -3.53382677e-02,
         -9.11989063e-03,  1.08962506e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 4, 1, 11] with unstable size 3 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98235482, 0.94896233, 0.98161000, 0.98195326, 1.01130414, 0.99509823,
         1.01716745, 0.94357032, 0.98036343]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5179 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.50310719e-04,  6.51647896e-03,  8.41109455e-03,  1.04494169e-02,
         -4.97840717e-03,  7.95420259e-03,  3.30974907e-03, -2.56821513e-03,
          7.15408474e-03,  9.65417147e-01]], device='cuda:0')
diversed PGD initialization time: 0.1233
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00343025, 0.00920941, 0.01513353, 0.01974823, 0.18204333,
          0.00433411, 0.00953516, 0.00856438, 0.00466221, 0.75135839],
         [0.00343025, 0.00920941, 0.01513353, 0.01974823, 0.18204333,
          0.00433411, 0.00953516, 0.00856438, 0.00466221, 0.75135839]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.74792814, 0.74214900, 0.73622489, 0.73161018, 0.56931508,
          0.74702430, 0.74182326, 0.74279404, 0.74669617]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4137 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-7.50310719e-04,  6.51647896e-03,  8.41109455e-03,  1.04494169e-02,
         -4.97840717e-03,  7.95420259e-03,  3.30974907e-03, -2.56821513e-03,
          7.15408474e-03,  9.65417147e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 21, 1, 7] with unstable size 20 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [20]; unstable size 20; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.48102719, 0.47773665, 0.44531628, 0.43272549, 0.15150706, 0.47692975,
         0.47944313, 0.42432153, 0.44090042]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5174 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.01927668e-04, -9.48735327e-03, -8.20653141e-03, -8.93448293e-03,
          5.34280390e-03,  5.36665320e-05, -1.15356967e-03,  9.97419178e-01,
          2.24608928e-03, -1.99536979e-03]], device='cuda:0')
diversed PGD initialization time: 0.1243
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00365167,  0.01212433,  0.02041833,  0.02347241,  0.01674447,
           0.03112210,  0.00876425,  0.44546449,  0.02057845,  0.41006035],
         [-0.00365167,  0.01212433,  0.02041833,  0.02347241,  0.01674447,
           0.03112210,  0.00876425,  0.44546449,  0.02057845,  0.41006035]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.44911617, 0.43334016, 0.42504615, 0.42199209, 0.42872003,
          0.41434240, 0.43670022, 0.42488605, 0.03540415]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4145 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.01927668e-04, -9.48735327e-03, -8.20653141e-03, -8.93448293e-03,
          5.34280390e-03,  5.36665320e-05, -1.15356967e-03,  9.97419178e-01,
          2.24608928e-03, -1.99536979e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 41, 1, 17] with unstable size 40 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [40]; unstable size 40; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.15986410, -0.06244966, -0.38274211, -0.14725044, -0.11107729,
         -0.23225045, -0.10649055, -0.46573102, -0.61297399]], device='cuda:0') None
best_l after optimization: -0.43987980484962463
alpha/beta optimization time: 1.6897478103637695
initial alpha-crown bounds: tensor([[ 0.02624698,  0.10808612, -0.18241188,  0.05720931,  0.05014586,
          0.01220044,  0.05690533, -0.19907343, -0.36918858]], device='cuda:0')
Worst class: (+ rhs) -0.3691885769367218
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.80129504203796
##### Instance 177 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.02624697983264923.

Properties batch 1, size 1
Remaining timeout: 117.7241895198822
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10808612406253815.

Properties batch 2, size 1
Remaining timeout: 117.65311026573181
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18241188]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.01927668e-04, -9.48735327e-03, -8.20653141e-03, -8.93448293e-03,
         5.34280390e-03,  5.36665320e-05, -1.15356967e-03,  9.97419178e-01,
         2.24608928e-03, -1.99536979e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18241188]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 17
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 51
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 102] 
split level 2: [/input.3, 87] 
split level 3: [/input.3, 232] 
split level 4: [/input.3, 159] 
split level 5: [/input, 228] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0066    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0110    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0224    set_bounds 0.0110    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.051728248596191406


Properties batch 3, size 1
Remaining timeout: 117.50625658035278
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.057209305465221405.

Properties batch 4, size 1
Remaining timeout: 117.43630170822144
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.050145864486694336.

Properties batch 5, size 1
Remaining timeout: 117.37043642997742
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.01220044493675232.

Properties batch 6, size 1
Remaining timeout: 117.30516457557678
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05690532922744751.

Properties batch 7, size 1
Remaining timeout: 117.24075293540955
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19907343]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.01927668e-04, -9.48735327e-03, -8.20653141e-03, -8.93448293e-03,
         5.34280390e-03,  5.36665320e-05, -1.15356967e-03,  9.97419178e-01,
         2.24608928e-03, -1.99536979e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19907343]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 17
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 51
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 91] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 162] 
split level 5: [/input.3, 159] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009212255477905273
Time: prepare 0.0036    bound 0.2008    transfer 0.0003    finalize 0.0022    func 0.2070    
Accumulated time: func 0.2070    prepare 0.0041    bound 0.2008    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.03801 (6), -0.02456 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0110    solve 0.2071    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0110    solve 0.2071    add 0.0007    
Current (lb-rhs): -0.03801417350769043
2 domains visited
Cumulative time: 0.24648427963256836

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 245] [/input, 245] 
split level 1: [/input.3, 87] [/input.3, 87] 
split level 2: [/input.3, 26] [/input.3, 26] 
split level 3: [/input.3, 206] [/input.3, 206] 
split level 4: [/input.3, 55] [/input.3, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0025    func 0.0144    
Accumulated time: func 0.2214    prepare 0.0117    bound 0.2053    transfer 0.0004    finalize 0.0047    
length of domains: 0
Time: pickout 0.0005    decision 0.0215    set_bounds 0.0112    solve 0.0145    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0446    set_bounds 0.0222    solve 0.2216    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2945442199707031


Properties batch 8, size 1
Remaining timeout: 116.85531067848206
##### Instance 177 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36918858]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.01927668e-04, -9.48735327e-03, -8.20653141e-03, -8.93448293e-03,
         5.34280390e-03,  5.36665320e-05, -1.15356967e-03,  9.97419178e-01,
         2.24608928e-03, -1.99536979e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36918858]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 17
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 51
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 159] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 91] 
split level 5: [/input.3, 3] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009099721908569336
Time: prepare 0.0035    bound 0.1979    transfer 0.0003    finalize 0.0022    func 0.2042    
Accumulated time: func 0.2042    prepare 0.0040    bound 0.1979    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.20756 (6), -0.06207 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0110    solve 0.2043    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0110    solve 0.2043    add 0.0007    
Current (lb-rhs): -0.20755648612976074
2 domains visited
Cumulative time: 0.24403643608093262

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 149] 
split level 1: [/input, 135] [/input, 135] 
split level 2: [/input, 45] [/input, 45] 
split level 3: [/input.3, 30] [/input.3, 30] 
split level 4: [/input.3, 87] [/input.3, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.00928354263305664
Time: prepare 0.0073    bound 0.2077    transfer 0.0003    finalize 0.0030    func 0.2184    
Accumulated time: func 0.4226    prepare 0.0118    bound 0.4056    transfer 0.0007    finalize 0.0052    
Current worst splitting domains lb-rhs (depth):
-0.02895 (11), -0.01861 (11), 
length of domains: 2
Time: pickout 0.0006    decision 0.0219    set_bounds 0.0109    solve 0.2184    add 0.0008    
Accumulated time: pickout 0.0010    decision 0.0452    set_bounds 0.0220    solve 0.4227    add 0.0016    
Current (lb-rhs): -0.028954505920410156
4 domains visited
Cumulative time: 0.49732184410095215

BaB round 3
batch: 2
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 169] [/input.3, 169] 
split level 1: [/input.3, 232] [/input.3, 232] 
split level 2: [/input.3, 206] [/input.3, 206] 
split level 3: [/input.3, 55] [/input.3, 55] 
split level 4: [/input.3, 184] [/input.3, 184] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0071    bound 0.0044    transfer 0.0001    finalize 0.0024    func 0.0141    
Accumulated time: func 0.4366    prepare 0.0193    bound 0.4100    transfer 0.0008    finalize 0.0076    
length of domains: 0
Time: pickout 0.0006    decision 0.0221    set_bounds 0.0102    solve 0.0141    add 0.0002    
Accumulated time: pickout 0.0017    decision 0.0673    set_bounds 0.0322    solve 0.4368    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.544818639755249

Result: safe in 3.7903 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01364262, -0.02745178,  0.00661384,  0.66607869, -0.03329806,
          0.03713927, -0.00630357, -0.08012731,  0.00213096,  0.43067533]],
       device='cuda:0')
diversed PGD initialization time: 0.1242
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02634426, -0.04657170, -0.01871377,  0.31476933, -0.02352041,
           0.03708874, -0.02939040, -0.09380068,  0.54079622,  0.32722682],
         [-0.02634426, -0.04657170, -0.01871377,  0.31476933, -0.02352041,
           0.03708874, -0.02939040, -0.09380068,  0.54079622,  0.32722682]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.34111360,  0.36134103,  0.33348310,  0.33828974,  0.27768058,
           0.34415972,  0.40856999, -0.22602689, -0.01245749]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1327 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2270 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.38708439e-03, -3.70253623e-03,  9.26747918e-04, -1.81700289e-03,
          9.86820102e-01, -2.11147219e-03,  1.06237829e-03, -3.24243307e-03,
         -8.38540494e-04,  1.60169601e-03]], device='cuda:0')
diversed PGD initialization time: 0.1662
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00531879, 0.00424351, 0.01902457, 0.01491059, 0.55054605,
          0.03011835, 0.01197137, 0.03728437, 0.01207486, 0.31037223],
         [0.00531879, 0.00424351, 0.01902457, 0.01491059, 0.55054605,
          0.03011835, 0.01197137, 0.03728437, 0.01207486, 0.31037223]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.54522723, 0.54630256, 0.53152150, 0.53563547, 0.52042770,
          0.53857470, 0.51326168, 0.53847122, 0.24017382]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4733 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.38708439e-03, -3.70253623e-03,  9.26747918e-04, -1.81700289e-03,
          9.86820102e-01, -2.11147219e-03,  1.06237829e-03, -3.24243307e-03,
         -8.38540494e-04,  1.60169601e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 35, 1, 13] with unstable size 34 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [34]; unstable size 34; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.16418552,  0.17507520,  0.11363679,  0.09473319,  0.09460200,
          0.11590309,  0.17932242, -0.30724549, -0.42262945]], device='cuda:0') None
best_l after optimization: 0.7666338086128235
alpha/beta optimization time: 1.3436124324798584
initial alpha-crown bounds: tensor([[ 0.20851544,  0.21882163,  0.16352537,  0.16551629,  0.14210176,
          0.17583758,  0.22981481, -0.24644488, -0.29105422]], device='cuda:0')
Worst class: (+ rhs) -0.29105421900749207
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.07377552986145
##### Instance 179 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20851543545722961.

Properties batch 1, size 1
Remaining timeout: 118.00205278396606
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21882162988185883.

Properties batch 2, size 1
Remaining timeout: 117.93583822250366
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16352537274360657.

Properties batch 3, size 1
Remaining timeout: 117.8712317943573
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16551628708839417.

Properties batch 4, size 1
Remaining timeout: 117.80738520622253
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.14210176467895508.

Properties batch 5, size 1
Remaining timeout: 117.74022698402405
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.17583757638931274.

Properties batch 6, size 1
Remaining timeout: 117.6734094619751
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.229814812541008.

Properties batch 7, size 1
Remaining timeout: 117.60280084609985
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24644488]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.38708439e-03, -3.70253623e-03,  9.26747918e-04, -1.81700289e-03,
         9.86820102e-01, -2.11147219e-03,  1.06237829e-03, -3.24243307e-03,
        -8.38540494e-04,  1.60169601e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24644488]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 43
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 189] 
split level 5: [/input.3, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00899648666381836
Time: prepare 0.0034    bound 0.1978    transfer 0.0003    finalize 0.0024    func 0.2040    
Accumulated time: func 0.2040    prepare 0.0040    bound 0.1978    transfer 0.0003    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.01327 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.2041    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.2041    add 0.0008    
Current (lb-rhs): -0.013274788856506348
1 domains visited
Cumulative time: 0.2442159652709961

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 198] 
split level 1: [/input.3, 159] 
split level 2: [/input.3, 89] 
split level 3: [/input, 131] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 206] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.985664367675781e-05
Time: prepare 0.0073    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0147    
Accumulated time: func 0.2187    prepare 0.0118    bound 0.2025    transfer 0.0004    finalize 0.0049    
length of domains: 0
Time: pickout 0.0006    decision 0.0232    set_bounds 0.0118    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0467    set_bounds 0.0230    solve 0.2188    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2950146198272705


Properties batch 8, size 1
Remaining timeout: 117.21212673187256
##### Instance 179 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.29105422]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.38708439e-03, -3.70253623e-03,  9.26747918e-04, -1.81700289e-03,
         9.86820102e-01, -2.11147219e-03,  1.06237829e-03, -3.24243307e-03,
        -8.38540494e-04,  1.60169601e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.29105422]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 43
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 89] 
split level 3: [/input.3, 159] 
split level 4: [/input.3, 189] 
split level 5: [/input, 141] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0066    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0114    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0114    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05273938179016113

Result: safe in 2.9354 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.45010650e-03,  1.83304399e-03, -1.29294395e-03,  6.61648810e-04,
          8.82924721e-03,  5.20264357e-03,  2.53044069e-04, -2.72259116e-03,
          2.00764835e-03,  9.97716486e-01]], device='cuda:0')
diversed PGD initialization time: 0.1259
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.75902006e-03, -2.79267132e-03,  6.86243176e-04, -8.01442564e-03,
          -7.48727471e-04,  1.56963244e-02,  4.17619944e-03, -3.05002481e-02,
           4.65468243e-02,  9.87433076e-01],
         [-9.75902006e-03, -2.79267132e-03,  6.86243176e-04, -8.01442564e-03,
          -7.48727471e-04,  1.56963244e-02,  4.17619944e-03, -3.05002481e-02,
           4.65468243e-02,  9.87433076e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99719208, 0.99022573, 0.98674685, 0.99544752, 0.98818183,
          0.97173673, 0.98325688, 1.01793337, 0.94088626]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4212 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.45010650e-03,  1.83304399e-03, -1.29294395e-03,  6.61648810e-04,
          8.82924721e-03,  5.20264357e-03,  2.53044069e-04, -2.72259116e-03,
          2.00764835e-03,  9.97716486e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 32, 1, 7] with unstable size 31 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [31]; unstable size 31; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.54338920, 0.55052209, 0.53328902, 0.46594691, 0.53512383, 0.37967688,
         0.51449066, 0.33614415, 0.36281121]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5523 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.69846267e-02, -3.60749662e-03, -6.69375062e-04,  1.69804841e-02,
         -3.31487134e-03, -3.05805802e-02,  1.03640735e+00, -7.48725235e-03,
         -3.95645201e-03,  3.41184437e-03]], device='cuda:0')
diversed PGD initialization time: 0.1267
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03306272, -0.01003326,  0.00170593, -0.00934179, -0.01560127,
           0.37508559,  0.75451231, -0.04345813, -0.00620794, -0.00173200],
         [-0.03306272, -0.01003326,  0.00170593, -0.00934179, -0.01560127,
           0.37508559,  0.75451231, -0.04345813, -0.00620794, -0.00173200]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.78757501, 0.76454556, 0.75280637, 0.76385409, 0.77011359,
          0.37942672, 0.79797041, 0.76072025, 0.75624430]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4143 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.69846267e-02, -3.60749662e-03, -6.69375062e-04,  1.69804841e-02,
         -3.31487134e-03, -3.05805802e-02,  1.03640735e+00, -7.48725235e-03,
         -3.95645201e-03,  3.41184437e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 63, 1, 15] with unstable size 62 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [62]; unstable size 62; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 62] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.37524611, -0.29073149, -0.37415218, -0.42638510, -0.22053716,
         -1.02685118, -0.44877702, -0.71328497, -0.74047130]], device='cuda:0') None
best_l after optimization: 0.7335794568061829
alpha/beta optimization time: 1.6807405948638916
initial alpha-crown bounds: tensor([[ 0.21088932,  0.22178546,  0.16683690,  0.16122711,  0.20386632,
         -0.53039348,  0.13563675,  0.17287999, -0.00914890]], device='cuda:0')
Worst class: (+ rhs) -0.5303934812545776
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.79652166366577
##### Instance 181 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2108893245458603.

Properties batch 1, size 1
Remaining timeout: 117.72423529624939
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22178545594215393.

Properties batch 2, size 1
Remaining timeout: 117.65750479698181
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1668369024991989.

Properties batch 3, size 1
Remaining timeout: 117.5924642086029
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16122710704803467.

Properties batch 4, size 1
Remaining timeout: 117.52691221237183
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20386631786823273.

Properties batch 5, size 1
Remaining timeout: 117.46196246147156
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53039348]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.69846267e-02, -3.60749662e-03, -6.69375062e-04,  1.69804841e-02,
        -3.31487134e-03, -3.05805802e-02,  1.03640735e+00, -7.48725235e-03,
        -3.95645201e-03,  3.41184437e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53039348]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 197] 
split level 4: [/input, 69] 
split level 5: [/input, 169] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0023    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0005    decision 0.0230    set_bounds 0.0112    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0230    set_bounds 0.0112    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05275583267211914


Properties batch 6, size 1
Remaining timeout: 117.32139730453491
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13563674688339233.

Properties batch 7, size 1
Remaining timeout: 117.24664974212646
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.17287999391555786.

Properties batch 8, size 1
Remaining timeout: 117.17215204238892
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00914890]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.69846267e-02, -3.60749662e-03, -6.69375062e-04,  1.69804841e-02,
        -3.31487134e-03, -3.05805802e-02,  1.03640735e+00, -7.48725235e-03,
        -3.95645201e-03,  3.41184437e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00914890]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 159] 
split level 4: [/input, 69] 
split level 5: [/input, 169] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0070    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.0143    prepare 0.0075    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0115    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0115    solve 0.0143    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053853511810302734

Result: safe in 2.9750 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.29428774e-04,  1.39570236e-03,  1.01937503e-02,  1.44484565e-02,
         -2.85910815e-03, -8.05566460e-03,  1.00061345e+00, -2.52516568e-03,
          1.15974098e-02,  8.96670669e-03]], device='cuda:0')
diversed PGD initialization time: 0.1264
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.42878497e-03,  3.24167311e-03,  1.35547072e-02,  1.54486299e-02,
          -1.77844986e-03, -7.86436349e-03,  9.88940120e-01, -8.01324844e-04,
           1.71725675e-02,  1.11739114e-02],
         [-2.42878497e-03,  3.24167311e-03,  1.35547072e-02,  1.54486299e-02,
          -1.77844986e-03, -7.86436349e-03,  9.88940120e-01, -8.01324844e-04,
           1.71725675e-02,  1.11739114e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99136889, 0.98569846, 0.97538543, 0.97349149, 0.99071854,
          0.99680448, 0.98974144, 0.97176754, 0.97776622]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4111 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-6.29428774e-04,  1.39570236e-03,  1.01937503e-02,  1.44484565e-02,
         -2.85910815e-03, -8.05566460e-03,  1.00061345e+00, -2.52516568e-03,
          1.15974098e-02,  8.96670669e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 11] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.97469628, 0.96793211, 0.95638752, 0.95609426, 0.97282237, 0.96628171,
         0.96385527, 0.95513684, 0.95900500]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4930 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.92211059e-03, -1.57818794e-02, -3.67255509e-03, -2.77686119e-03,
         -3.39901261e-02,  1.03393054e+00, -3.47857922e-03, -3.71285081e-02,
         -1.01033896e-02, -8.43822956e-04]], device='cuda:0')
diversed PGD initialization time: 0.1265
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.36218455e-03, -1.11157298e-02, -2.23621726e-04, -8.66591930e-04,
          -2.30208971e-02,  1.02239525e+00, -1.29447505e-03, -2.70821750e-02,
          -7.82203674e-03, -1.10021234e-03],
         [-4.36218455e-03, -1.11157298e-02, -2.23621726e-04, -8.66591930e-04,
          -2.30208971e-02,  1.02239525e+00, -1.29447505e-03, -2.70821750e-02,
          -7.82203674e-03, -1.10021234e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02675748, 1.03351092, 1.02261889, 1.02326179, 1.04541612,
          1.02368975, 1.04947746, 1.03021729, 1.02349544]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4245 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.92211059e-03, -1.57818794e-02, -3.67255509e-03, -2.77686119e-03,
         -3.39901261e-02,  1.03393054e+00, -3.47857922e-03, -3.71285081e-02,
         -1.01033896e-02, -8.43822956e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 1, 1, 12] with unstable size 0 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.01775932, 1.02489173, 1.01266539, 1.01204038, 1.03523624, 1.01402044,
         1.03888559, 1.02066457, 1.01230204]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5037 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.89420849e-04, -9.83737409e-04, -6.74575567e-05,  1.72711909e-03,
          8.87920141e-01,  3.09832394e-03,  3.65411118e-03,  5.62452823e-02,
          4.79028374e-03,  4.17448133e-02]], device='cuda:0')
diversed PGD initialization time: 0.1274
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.36786699e-03,  6.44259155e-04, -3.08012962e-03, -9.42502916e-03,
           4.64097224e-02,  5.87029755e-03,  1.01924315e-03,  3.53639945e-02,
           4.65051085e-03,  9.27438736e-01],
         [-1.36786699e-03,  6.44259155e-04, -3.08012962e-03, -9.42502916e-03,
           4.64097224e-02,  5.87029755e-03,  1.01924315e-03,  3.53639945e-02,
           4.65051085e-03,  9.27438736e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.04777759,  0.04576546,  0.04948985,  0.05583475,  0.04053942,
           0.04539048,  0.01104573,  0.04175921, -0.88102901]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1359 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1953 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00295746e+00, -8.03496689e-03, -2.16789544e-03, -1.02759153e-02,
         -3.32762673e-03,  7.31429458e-03, -3.78143787e-03, -1.17837191e-02,
          4.66190279e-04, -7.31771439e-03]], device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99356484, -0.00585251,  0.00505993, -0.01093672, -0.00123115,
           0.01750606, -0.00655526, -0.01101512,  0.00294963, -0.00609273],
         [ 0.99356484, -0.00585251,  0.00505993, -0.01093672, -0.00123115,
           0.01750606, -0.00655526, -0.01101512,  0.00294963, -0.00609273]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99941736, 0.98850489, 1.00450158, 0.99479598, 0.97605878,
          1.00012016, 1.00458002, 0.99061519, 0.99965757]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4003 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00295746e+00, -8.03496689e-03, -2.16789544e-03, -1.02759153e-02,
         -3.32762673e-03,  7.31429458e-03, -3.78143787e-03, -1.17837191e-02,
          4.66190279e-04, -7.31771439e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 11, 1, 3] with unstable size 10 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98213506, 0.95976043, 0.98288608, 0.97982424, 0.95000732, 0.98757094,
         0.97840506, 0.97231239, 0.97934598]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4862 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
          2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
          2.04274058e-03, -1.44358724e-03]], device='cuda:0')
diversed PGD initialization time: 0.1272
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.29754269, 0.01367968, 0.00588900, 0.00407572, 0.01309361,
          0.07263999, 0.01680126, 0.48995763, 0.02659408, 0.03320903],
         [0.29754269, 0.01367968, 0.00588900, 0.00407572, 0.01309361,
          0.07263999, 0.01680126, 0.48995763, 0.02659408, 0.03320903]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.19241494, 0.47627795, 0.48406863, 0.48588192, 0.47686404,
          0.41731763, 0.47315636, 0.46336356, 0.45674860]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4211 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
          2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
          2.04274058e-03, -1.44358724e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 43, 1, 15] with unstable size 42 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [42]; unstable size 42; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.17148030, -0.52200562, -0.64478666, -0.64351040, -0.82436657,
         -0.69165611, -0.60821265, -0.66008759, -1.50914228]], device='cuda:0') None
best_l after optimization: -0.6218284964561462
alpha/beta optimization time: 1.727846384048462
initial alpha-crown bounds: tensor([[-0.24436811,  0.03304396, -0.06961624, -0.00434171,  0.00464980,
         -0.07836667, -0.00516381,  0.01217558, -0.26984125]], device='cuda:0')
Worst class: (+ rhs) -0.2698412537574768
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.73592758178711
##### Instance 186 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24436811]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24436811]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 151] 
split level 2: [/input.3, 91] 
split level 3: [/input.3, 87] 
split level 4: [/input.3, 85] 
split level 5: [/input.3, 55] 

all verified at 4th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0016224384307861328
Time: prepare 0.0036    bound 0.0423    transfer 0.0002    finalize 0.0021    func 0.0483    
Accumulated time: func 0.0483    prepare 0.0041    bound 0.0423    transfer 0.0002    finalize 0.0021    
length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0113    solve 0.0483    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0113    solve 0.0483    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08814024925231934


Properties batch 1, size 1
Remaining timeout: 117.54355239868164
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.033043961971998215.

Properties batch 2, size 1
Remaining timeout: 117.46675944328308
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06961624]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06961624]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 87] 
split level 2: [/input.3, 91] 
split level 3: [/input.3, 232] 
split level 4: [/input.3, 3] 
split level 5: [/input.3, 159] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0035    bound 0.0047    transfer 0.0001    finalize 0.0018    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0041    bound 0.0047    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0244    set_bounds 0.0109    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0244    set_bounds 0.0109    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05042123794555664


Properties batch 3, size 1
Remaining timeout: 117.31785035133362
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00434171]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00434171]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 91] 
split level 2: [/input.3, 87] 
split level 3: [/input.3, 3] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 26] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.654594421386719e-05
Time: prepare 0.0036    bound 0.0046    transfer 0.0001    finalize 0.0019    func 0.0104    
Accumulated time: func 0.0104    prepare 0.0042    bound 0.0046    transfer 0.0001    finalize 0.0019    
length of domains: 0
Time: pickout 0.0004    decision 0.0241    set_bounds 0.0110    solve 0.0104    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0241    set_bounds 0.0110    solve 0.0104    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.050208330154418945


Properties batch 4, size 1
Remaining timeout: 117.16468381881714
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.004649803042411804.

Properties batch 5, size 1
Remaining timeout: 117.08837413787842
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07836667]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07836667]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 91] 
split level 2: [/input.3, 55] 
split level 3: [/input.3, 87] 
split level 4: [/input.3, 3] 
split level 5: [/input.3, 159] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.273124694824219e-05
Time: prepare 0.0038    bound 0.0050    transfer 0.0001    finalize 0.0018    func 0.0107    
Accumulated time: func 0.0107    prepare 0.0044    bound 0.0050    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0243    set_bounds 0.0117    solve 0.0108    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0243    set_bounds 0.0117    solve 0.0108    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.051599979400634766


Properties batch 6, size 1
Remaining timeout: 116.93955707550049
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00516381]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00516381]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 91] 
split level 2: [/input.3, 87] 
split level 3: [/input.3, 55] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 26] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0036    bound 0.0049    transfer 0.0001    finalize 0.0018    func 0.0105    
Accumulated time: func 0.0105    prepare 0.0042    bound 0.0049    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0110    solve 0.0105    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0110    solve 0.0105    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.050382375717163086


Properties batch 7, size 1
Remaining timeout: 116.78743505477905
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.012175582349300385.

Properties batch 8, size 1
Remaining timeout: 116.70860695838928
##### Instance 186 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26984125]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.01304257e-03, -6.50195777e-03, -1.46988034e-02, -8.96297395e-03,
         2.78689340e-03,  6.36629760e-04, -9.21268016e-04,  9.97938573e-01,
         2.04274058e-03, -1.44358724e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26984125]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 91] 
split level 2: [/input.3, 159] 
split level 3: [/input.3, 80] 
split level 4: [/input.3, 26] 
split level 5: [/input.3, 3] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008955001831054688
Time: prepare 0.0035    bound 0.1998    transfer 0.0004    finalize 0.0027    func 0.2067    
Accumulated time: func 0.2067    prepare 0.0041    bound 0.1998    transfer 0.0004    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.00801 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0240    set_bounds 0.0110    solve 0.2068    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0240    set_bounds 0.0110    solve 0.2068    add 0.0007    
Current (lb-rhs): -0.008008420467376709
1 domains visited
Cumulative time: 0.24724769592285156

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 150] 
split level 1: [/input, 220] 
split level 2: [/input, 135] 
split level 3: [/input, 31] 
split level 4: [/input.3, 87] 
split level 5: [/input.3, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.0108642578125e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0143    
Accumulated time: func 0.2210    prepare 0.0118    bound 0.2043    transfer 0.0005    finalize 0.0052    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0117    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0479    set_bounds 0.0227    solve 0.2211    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2980384826660156

Result: safe in 3.6887 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00458584,  0.00526166,  0.02113749,  0.01886354,  0.86189371,
          0.01505709,  0.00884760, -0.01609929,  0.01145757,  0.06268393]],
       device='cuda:0')
diversed PGD initialization time: 0.1361
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00880438,  0.00120376, -0.00191516, -0.02340391,  0.61827832,
           0.01002035, -0.01697024,  0.01960207,  0.29861605,  0.09810703],
         [-0.00880438,  0.00120376, -0.00191516, -0.02340391,  0.61827832,
           0.01002035, -0.01697024,  0.01960207,  0.29861605,  0.09810703]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.62708271, 0.61707455, 0.62019348, 0.64168227, 0.60825795,
          0.63524854, 0.59867626, 0.31966227, 0.52017128]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4301 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00458584,  0.00526166,  0.02113749,  0.01886354,  0.86189371,
          0.01505709,  0.00884760, -0.01609929,  0.01145757,  0.06268393]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 20, 1, 10] with unstable size 19 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.34565735,  0.31851113,  0.24201500,  0.25780463,  0.30630469,
          0.32570934,  0.30597371, -0.34727609,  0.01344345]], device='cuda:0') None

all verified at 6th iter
best_l after optimization: 3.2707231044769287
alpha/beta optimization time: 0.11401915550231934
initial alpha-crown bounds: tensor([[0.45604703, 0.45255548, 0.40635577, 0.40406281, 0.41968182, 0.44598630,
         0.41560864, 0.03626917, 0.23415606]], device='cuda:0')
Worst class: (+ rhs) 0.0362691655755043
verified with init bound!
Result: safe-incomplete in 0.6437 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00432551e+00, -2.39144415e-02,  7.81819224e-04, -1.60600841e-02,
         -2.02804990e-02, -4.35024500e-04,  1.08801350e-02, -2.91992873e-02,
         -3.41868401e-03, -1.58824027e-02]], device='cuda:0')
diversed PGD initialization time: 0.1267
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99534154, -0.03343002,  0.00502212, -0.02564356, -0.01780954,
          -0.00332100,  0.01147656,  0.02779683, -0.00677325, -0.02495195],
         [ 0.99534154, -0.03343002,  0.00502212, -0.02564356, -0.01780954,
          -0.00332100,  0.01147656,  0.02779683, -0.00677325, -0.02495195]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02877152, 0.99031943, 1.02098513, 1.01315105, 0.99866253,
          0.98386496, 0.96754467, 1.00211477, 1.02029347]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4070 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00432551e+00, -2.39144415e-02,  7.81819224e-04, -1.60600841e-02,
         -2.02804990e-02, -4.35024500e-04,  1.08801350e-02, -2.91992873e-02,
         -3.41868401e-03, -1.58824027e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 10, 1, 7] with unstable size 9 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00050247, 0.86949980, 0.99043947, 0.99326414, 0.98056132, 0.96209961,
         0.86668891, 0.98464173, 0.98766643]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5100 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00195183,  0.93645322,  0.00841661,  0.00316595, -0.00139972,
          0.00392099,  0.00095198,  0.01125814,  0.00188478,  0.00622199]],
       device='cuda:0')
diversed PGD initialization time: 0.1375
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00573821,  0.70559675,  0.03398003,  0.02269107,  0.01487544,
           0.01496832,  0.01213831,  0.04931140,  0.10680921,  0.02064639],
         [-0.00573821,  0.70559675,  0.03398003,  0.02269107,  0.01487544,
           0.01496832,  0.01213831,  0.04931140,  0.10680921,  0.02064639]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.71133494, 0.67161673, 0.68290567, 0.69072133, 0.69062841,
          0.69345844, 0.65628535, 0.59878755, 0.68495035]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4157 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00195183,  0.93645322,  0.00841661,  0.00316595, -0.00139972,
          0.00392099,  0.00095198,  0.01125814,  0.00188478,  0.00622199]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 18] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.37425497,  0.30522269,  0.16033122,  0.33375660,  0.21233679,
          0.33515465,  0.29875952, -0.05404440,  0.34892270]], device='cuda:0') None

all verified at 2th iter
best_l after optimization: 2.5564074516296387
alpha/beta optimization time: 0.041047096252441406
initial alpha-crown bounds: tensor([[0.39150733, 0.32468706, 0.18393070, 0.35720834, 0.25689426, 0.35211661,
         0.32143241, 0.00269318, 0.36593759]], device='cuda:0')
Worst class: (+ rhs) 0.00269317626953125
verified with init bound!
Result: safe-incomplete in 0.5614 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01534920, -0.00941926,  0.01263891,  0.97081697, -0.04025878,
          0.03315017, -0.00395159, -0.02459194, -0.00139773,  0.00127275]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01846797, -0.01259208,  0.02187559,  0.95266843, -0.04900204,
           0.04169524, -0.00192766, -0.03282772,  0.00162790,  0.00249895],
         [-0.01846797, -0.01259208,  0.02187559,  0.95266843, -0.04900204,
           0.04169524, -0.00192766, -0.03282772,  0.00162790,  0.00249895]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97113639, 0.96526051, 0.93079281, 1.00167048, 0.91097319,
          0.95459610, 0.98549616, 0.95104051, 0.95016944]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4264 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01534920, -0.00941926,  0.01263891,  0.97081697, -0.04025878,
          0.03315017, -0.00395159, -0.02459194, -0.00139773,  0.00127275]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 10] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.95647562, 0.95278406, 0.91854304, 0.97752726, 0.89864111, 0.94157922,
         0.96899426, 0.93800890, 0.93651205]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5828 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
          3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
          6.13031536e-03,  7.83895701e-03]], device='cuda:0')
diversed PGD initialization time: 0.1285
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01932778,  0.49858665,  0.01755247, -0.08434844,  0.01449841,
           0.16023156,  0.00276559,  0.05875940,  0.32929355, -0.00664637],
         [-0.01932778,  0.49858665,  0.01755247, -0.08434844,  0.01449841,
           0.16023156,  0.00276559,  0.05875940,  0.32929355, -0.00664637]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.51791441, 0.48103419, 0.58293509, 0.48408824, 0.33835509,
          0.49582106, 0.43982726, 0.16929311, 0.50523305]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4185 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
          3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
          6.13031536e-03,  7.83895701e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 114, 1, 35] with unstable size 113 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [113]; unstable size 113; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 113] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.66826195, -0.72643220, -1.25942683, -0.94200820, -1.30053496,
         -0.73642027, -0.99556082, -1.80088615, -1.62730289]], device='cuda:0') None
best_l after optimization: -3.645596981048584
alpha/beta optimization time: 1.723262071609497
initial alpha-crown bounds: tensor([[-0.08049990, -0.13128388, -0.60867691, -0.31428522, -0.55447316,
         -0.14614387, -0.40610939, -0.64858770, -0.75553697]], device='cuda:0')
Worst class: (+ rhs) -0.7555369734764099
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.75652432441711
##### Instance 191 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08049990]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08049990]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 129] 
split level 2: [/input.3, 43] 
split level 3: [/input.3, 116] 
split level 4: [/input.3, 55] 
split level 5: [/input.3, 126] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.866455078125e-05
Time: prepare 0.0036    bound 0.0046    transfer 0.0001    finalize 0.0018    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0041    bound 0.0046    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0109    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0236    set_bounds 0.0109    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05038619041442871


Properties batch 1, size 1
Remaining timeout: 117.6065001487732
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.13128388]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.13128388]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 28] 
split level 2: [/input.3, 43] 
split level 3: [/input.3, 21] 
split level 4: [/input, 209] 
split level 5: [/input.3, 126] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0067    bound 0.0049    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0072    bound 0.0049    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05368638038635254


Properties batch 2, size 1
Remaining timeout: 117.45719575881958
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60867691]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60867691]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 200] 
split level 5: [/input.3, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 48 / 64 = 0.75
pruning-in-iteration extra time: 0.009248733520507812
Time: prepare 0.0035    bound 0.2005    transfer 0.0004    finalize 0.0022    func 0.2068    
Accumulated time: func 0.2068    prepare 0.0040    bound 0.2005    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.32340 (6), -0.21844 (6), -0.16067 (6), -0.13805 (6), -0.12437 (6), -0.11729 (6), -0.10793 (6), -0.09632 (6), -0.09006 (6), -0.06881 (6), -0.03768 (6), -0.03656 (6), -0.03436 (6), -0.01324 (6), -0.01114 (6), -0.00417 (6), 
length of domains: 16
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0107    solve 0.2068    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0107    solve 0.2068    add 0.0013    
Current (lb-rhs): -0.3234044313430786
16 domains visited
Cumulative time: 0.24652671813964844

BaB round 2
batch: 16
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 95] [/input, 95] [/input.3, 220] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 103] [/input, 103] 
split level 1: [/input.3, 217] [/input.3, 217] [/input, 209] [/input.3, 217] [/input.3, 217] [/input, 209] [/input.3, 217] [/input, 209] [/input, 95] [/input, 100] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 64 = 0.796875
pruning-in-iteration extra time: 0.009752273559570312
Time: prepare 0.0072    bound 0.2096    transfer 0.0002    finalize 0.0030    func 0.2202    
Accumulated time: func 0.4269    prepare 0.0117    bound 0.4101    transfer 0.0006    finalize 0.0052    
Current worst splitting domains lb-rhs (depth):
-0.14820 (8), -0.11762 (8), -0.10613 (8), -0.07759 (8), -0.06267 (8), -0.06021 (8), -0.05396 (8), -0.05262 (8), -0.04957 (8), -0.03147 (8), -0.02044 (8), -0.00519 (8), -0.00208 (8), 
length of domains: 13
Time: pickout 0.0007    decision 0.0313    set_bounds 0.0082    solve 0.2203    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0544    set_bounds 0.0189    solve 0.4271    add 0.0023    
Current (lb-rhs): -0.1482006311416626
29 domains visited
Cumulative time: 0.508359432220459

BaB round 3
batch: 13
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 3] [/input, 3] [/input, 100] [/input, 3] [/input.3, 217] [/input, 138] [/input, 209] [/input, 171] [/input.3, 217] [/input, 100] 
split level 1: [/input, 209] [/input, 100] [/input, 93] [/input, 209] [/input, 100] [/input, 209] [/input, 138] [/input, 100] [/input, 100] [/input.3, 217] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 52 / 52 = 1.0
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0065    bound 0.0052    transfer 0.0001    finalize 0.0022    func 0.0140    
Accumulated time: func 0.4409    prepare 0.0187    bound 0.4153    transfer 0.0007    finalize 0.0074    
length of domains: 0
Time: pickout 0.0007    decision 0.0294    set_bounds 0.0072    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0838    set_bounds 0.0262    solve 0.4412    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
29 domains visited
Cumulative time: 0.5601294040679932


Properties batch 3, size 1
Remaining timeout: 116.80189919471741
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31428522]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31428522]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 18] 
split level 3: [/input.3, 43] 
split level 4: [/input.3, 217] 
split level 5: [/input.3, 126] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.271766662597656e-05
Time: prepare 0.0034    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0039    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0109    solve 0.0099    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0109    solve 0.0099    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.049494266510009766


Properties batch 4, size 1
Remaining timeout: 116.65387678146362
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55447316]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55447316]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 217] 
split level 4: [/input.3, 55] 
split level 5: [/input.3, 195] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009552478790283203
Time: prepare 0.0035    bound 0.2056    transfer 0.0006    finalize 0.0039    func 0.2139    
Accumulated time: func 0.2139    prepare 0.0040    bound 0.2056    transfer 0.0006    finalize 0.0039    
Current worst splitting domains lb-rhs (depth):
-0.11623 (6), -0.07446 (6), -0.07095 (6), -0.06190 (6), -0.05380 (6), -0.01046 (6), -0.00299 (6), 
length of domains: 7
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.2140    add 0.0015    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.2140    add 0.0015    
Current (lb-rhs): -0.11622750759124756
7 domains visited
Cumulative time: 0.2543199062347412

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 3] [/input, 95] [/input, 95] [/input, 95] [/input, 184] [/input, 3] 
split level 1: [/input, 3] [/input, 209] [/input, 3] [/input, 3] [/input, 3] [/input, 95] [/input, 95] 
split level 2: [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 3] [/input, 100] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0063    bound 0.0045    transfer 0.0001    finalize 0.0021    func 0.0130    
Accumulated time: func 0.2269    prepare 0.0108    bound 0.2100    transfer 0.0007    finalize 0.0060    
length of domains: 0
Time: pickout 0.0008    decision 0.0271    set_bounds 0.0073    solve 0.0130    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0503    set_bounds 0.0180    solve 0.2271    add 0.0015    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.3027527332305908


Properties batch 5, size 1
Remaining timeout: 116.25545406341553
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14614387]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14614387]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 43] 
split level 2: [/input.3, 129] 
split level 3: [/input.3, 55] 
split level 4: [/input.3, 126] 
split level 5: [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.866455078125e-05
Time: prepare 0.0065    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0045    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0110    solve 0.0135    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0110    solve 0.0135    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052098989486694336


Properties batch 6, size 1
Remaining timeout: 116.10841917991638
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40610939]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40610939]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 13] 
split level 3: [/input.3, 126] 
split level 4: [/input.3, 43] 
split level 5: [/input.3, 165] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.008198022842407227
Time: prepare 0.0036    bound 0.1673    transfer 0.0002    finalize 0.0023    func 0.1736    
Accumulated time: func 0.1736    prepare 0.0041    bound 0.1673    transfer 0.0002    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.07113 (6), -0.06258 (6), -0.05801 (6), -0.01589 (6), -0.00431 (6), 
length of domains: 5
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.1736    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0112    solve 0.1736    add 0.0009    
Current (lb-rhs): -0.07113373279571533
5 domains visited
Cumulative time: 0.21384716033935547

BaB round 2
batch: 5
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] 
split level 1: [/input, 3] [/input, 3] [/input, 3] [/input, 3] [/input, 130] 
split level 2: [/input, 209] [/input, 91] [/input, 209] [/input, 91] [/input, 3] 
split level 3: [/input, 100] [/input, 100] [/input, 91] [/input, 93] [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0089    bound 0.0049    transfer 0.0001    finalize 0.0030    func 0.0169    
Accumulated time: func 0.1905    prepare 0.0134    bound 0.1721    transfer 0.0004    finalize 0.0053    
length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0111    solve 0.0170    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0470    set_bounds 0.0224    solve 0.1906    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 0.2664041519165039


Properties batch 7, size 1
Remaining timeout: 115.74916481971741
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64858770]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64858770]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 43] 
split level 5: [/input.3, 129] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.0070343017578125
Time: prepare 0.0035    bound 0.1352    transfer 0.0002    finalize 0.0017    func 0.1407    
Accumulated time: func 0.1407    prepare 0.0040    bound 0.1352    transfer 0.0002    finalize 0.0017    
Current worst splitting domains lb-rhs (depth):
-0.32987 (6), -0.08077 (6), -0.04658 (6), -0.02275 (6), -0.00607 (6), 
length of domains: 5
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0106    solve 0.1408    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0106    solve 0.1408    add 0.0007    
Current (lb-rhs): -0.32986581325531006
5 domains visited
Cumulative time: 0.17955899238586426

BaB round 2
batch: 5
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 198] [/input, 198] [/input, 198] [/input, 198] 
split level 1: [/input, 3] [/input, 211] [/input, 211] [/input, 211] [/input, 211] 
split level 2: [/input, 209] [/input, 3] [/input, 3] [/input, 3] [/input, 3] 
split level 3: [/input, 100] [/input, 150] [/input, 150] [/input, 188] [/input, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 80 = 0.9875
pruning-in-iteration extra time: 0.006796360015869141
Time: prepare 0.0088    bound 0.1264    transfer 0.0002    finalize 0.0030    func 0.1385    
Accumulated time: func 0.2792    prepare 0.0132    bound 0.2616    transfer 0.0004    finalize 0.0048    
Current worst splitting domains lb-rhs (depth):
-0.06446 (10), 
length of domains: 1
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.1385    add 0.0006    
Accumulated time: pickout 0.0009    decision 0.0464    set_bounds 0.0214    solve 0.2793    add 0.0013    
Current (lb-rhs): -0.06445646286010742
6 domains visited
Cumulative time: 0.3537919521331787

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 150] 
split level 1: [/input, 245] 
split level 2: [/input.3, 217] 
split level 3: [/input.3, 206] 
split level 4: [/input.3, 181] 
split level 5: [/input.3, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0074    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.2938    prepare 0.0211    bound 0.2661    transfer 0.0005    finalize 0.0073    
length of domains: 0
Time: pickout 0.0005    decision 0.0227    set_bounds 0.0123    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0690    set_bounds 0.0338    solve 0.2940    add 0.0014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.40424442291259766


Properties batch 8, size 1
Remaining timeout: 115.24909973144531
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.75553697]], device='cuda:0') need to verify.
Model prediction is: tensor([ 6.32081181e-04,  9.09717023e-01,  7.76058435e-03,  6.68771565e-03,
         3.32096219e-03, -4.99114394e-05,  1.15498565e-02,  3.14576998e-02,
         6.13031536e-03,  7.83895701e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.75553697]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 70
-----------------
# of unstable neurons: 105
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 159] 
split level 4: [/input.3, 234] 
split level 5: [/input.3, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 64 = 0.6875
pruning-in-iteration extra time: 0.007441282272338867
Time: prepare 0.0034    bound 0.1292    transfer 0.0002    finalize 0.0019    func 0.1349    
Accumulated time: func 0.1349    prepare 0.0039    bound 0.1292    transfer 0.0002    finalize 0.0019    
Current worst splitting domains lb-rhs (depth):
-0.42843 (6), -0.34871 (6), -0.18207 (6), -0.16422 (6), -0.14596 (6), -0.13422 (6), -0.10795 (6), -0.10180 (6), -0.09693 (6), -0.08312 (6), -0.07217 (6), -0.07182 (6), -0.04757 (6), -0.02021 (6), -0.01623 (6), -0.01532 (6), -0.01423 (6), -0.00335 (6), -0.00169 (6), -0.00047 (6), 
length of domains: 20
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0108    solve 0.1349    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0108    solve 0.1349    add 0.0011    
Current (lb-rhs): -0.4284311532974243
20 domains visited
Cumulative time: 0.17391467094421387

BaB round 2
batch: 20
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] 
split level 1: [/input, 3] [/input, 91] [/input, 100] [/input, 91] [/input, 3] [/input, 91] [/input, 100] [/input, 91] [/input, 91] [/input, 91] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 80 = 0.8875
pruning-in-iteration extra time: 0.007191896438598633
Time: prepare 0.0091    bound 0.1332    transfer 0.0003    finalize 0.0031    func 0.1458    
Accumulated time: func 0.2806    prepare 0.0135    bound 0.2624    transfer 0.0005    finalize 0.0050    
Current worst splitting domains lb-rhs (depth):
-0.24495 (8), -0.20142 (8), -0.11283 (8), -0.11063 (8), -0.06925 (8), -0.02491 (8), -0.01861 (8), -0.00741 (8), -0.00470 (8), 
length of domains: 9
Time: pickout 0.0006    decision 0.0335    set_bounds 0.0094    solve 0.1458    add 0.0008    
Accumulated time: pickout 0.0010    decision 0.0562    set_bounds 0.0202    solve 0.2808    add 0.0018    
Current (lb-rhs): -0.24495196342468262
29 domains visited
Cumulative time: 0.36458253860473633

BaB round 3
batch: 9
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input.3, 113] 
split level 1: [/input, 50] [/input, 131] [/input, 131] [/input, 3] [/input, 50] [/input, 131] [/input, 131] [/input, 131] [/input.3, 129] 
split level 2: [/input, 3] [/input, 135] [/input, 135] [/input, 93] [/input, 3] [/input, 3] [/input, 135] [/input, 135] [/input, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 70 / 72 = 0.9722222222222222
pruning-in-iteration extra time: 0.007027149200439453
Time: prepare 0.0084    bound 0.1297    transfer 0.0002    finalize 0.0030    func 0.1413    
Accumulated time: func 0.4220    prepare 0.0223    bound 0.3921    transfer 0.0007    finalize 0.0080    
Current worst splitting domains lb-rhs (depth):
-0.06857 (11), -0.05108 (11), 
length of domains: 2
Time: pickout 0.0006    decision 0.0267    set_bounds 0.0103    solve 0.1414    add 0.0007    
Accumulated time: pickout 0.0016    decision 0.0829    set_bounds 0.0305    solve 0.4221    add 0.0025    
Current (lb-rhs): -0.0685654878616333
31 domains visited
Cumulative time: 0.5445365905761719

BaB round 4
batch: 2
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 220] [/input.3, 113] 
split level 1: [/input, 3] [/input.3, 129] 
split level 2: [/input, 93] [/input, 220] 
split level 3: [/input, 150] [/input, 93] 
split level 4: [/input.3, 217] [/input.3, 217] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.344650268554688e-05
Time: prepare 0.0073    bound 0.0045    transfer 0.0001    finalize 0.0026    func 0.0146    
Accumulated time: func 0.4365    prepare 0.0301    bound 0.3966    transfer 0.0008    finalize 0.0106    
length of domains: 0
Time: pickout 0.0005    decision 0.0207    set_bounds 0.0114    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0021    decision 0.1036    set_bounds 0.0419    solve 0.4368    add 0.0026    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
31 domains visited
Cumulative time: 0.5921080112457275

Result: safe in 5.4372 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01180342, -0.00778601,  0.00830221,  0.98862767, -0.03349635,
          0.01399736, -0.00440112, -0.02355094, -0.00133139,  0.00119431]],
       device='cuda:0')
diversed PGD initialization time: 0.1261
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.09132640e-02, -7.29954243e-03,  7.27219880e-03,  9.73275065e-01,
          -2.96778567e-02,  2.69839391e-02, -4.90909815e-03, -2.05760747e-02,
          -6.88806176e-05,  2.07221508e-03],
         [-1.09132640e-02, -7.29954243e-03,  7.27219880e-03,  9.73275065e-01,
          -2.96778567e-02,  2.69839391e-02, -4.90909815e-03, -2.05760747e-02,
          -6.88806176e-05,  2.07221508e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98418832, 0.98057461, 0.96600288, 1.00295293, 0.94629115,
          0.97818416, 0.99385113, 0.97334397, 0.97120285]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3966 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01180342, -0.00778601,  0.00830221,  0.98862767, -0.03349635,
          0.01399736, -0.00440112, -0.02355094, -0.00133139,  0.00119431]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 8] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96521240, 0.96197003, 0.94129872, 0.97948778, 0.92243683, 0.95924985,
         0.97197407, 0.95416516, 0.95190591]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4830 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00587530,  0.00257060,  0.01217370,  0.00294830,  0.94347143,
          0.00356717,  0.00205865, -0.02300566,  0.00271865,  0.00321896]],
       device='cuda:0')
diversed PGD initialization time: 0.1465
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.17880878, -0.00528187, -0.01018906, -0.00305360,  0.96648461,
          -0.03362098, -0.06628422, -0.02749936, -0.01380318, -0.02623969],
         [ 0.17880878, -0.00528187, -0.01018906, -0.00305360,  0.96648461,
          -0.03362098, -0.06628422, -0.02749936, -0.01380318, -0.02623969]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.78767586, 0.97176647, 0.97667366, 0.96953821, 1.00010562,
          1.03276885, 0.99398398, 0.98028779, 0.99272430]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4125 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00587530,  0.00257060,  0.01217370,  0.00294830,  0.94347143,
          0.00356717,  0.00205865, -0.02300566,  0.00271865,  0.00321896]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 9, 1, 6] with unstable size 8 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.69705695, 0.84824538, 0.82916135, 0.83923501, 0.84632814, 0.85476714,
         0.86111712, 0.84876162, 0.84168172]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5523 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.01167709e-04, -6.85603172e-03, -1.10033900e-02, -1.45795643e-02,
          1.92597508e-03, -4.53343987e-03, -4.09390405e-03,  1.01033068e+00,
         -6.30043447e-04, -5.07626683e-03]], device='cuda:0')
diversed PGD initialization time: 0.1276
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03474075, -0.05861163,  0.58617109,  0.04386643, -0.02618974,
          -0.05439091, -0.01847161,  0.61642748, -0.03266705, -0.06338219],
         [-0.03474075, -0.05861163,  0.58617109,  0.04386643, -0.02618974,
          -0.05439091, -0.01847161,  0.61642748, -0.03266705, -0.06338219]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.65116823, 0.67503911, 0.03025639, 0.57256103, 0.64261723,
          0.67081839, 0.63489908, 0.64909452, 0.67980969]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3949 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.01167709e-04, -6.85603172e-03, -1.10033900e-02, -1.45795643e-02,
          1.92597508e-03, -4.53343987e-03, -4.09390405e-03,  1.01033068e+00,
         -6.30043447e-04, -5.07626683e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 7] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20367295,  0.01250099, -0.74254924, -0.07669070,  0.22297658,
          0.21024084,  0.19526115,  0.23405759,  0.24082938]], device='cuda:0') None
best_l after optimization: 3.641674757003784
alpha/beta optimization time: 1.0670866966247559
initial alpha-crown bounds: tensor([[ 0.49892068,  0.48748145, -0.14293824,  0.30451888,  0.49525905,
          0.49785560,  0.47946379,  0.49790049,  0.52321285]], device='cuda:0')
Worst class: (+ rhs) -0.14293824136257172
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.43581438064575
##### Instance 194 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4989206790924072.

Properties batch 1, size 1
Remaining timeout: 118.36332201957703
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4874814450740814.

Properties batch 2, size 1
Remaining timeout: 118.2966730594635
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14293824]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.01167709e-04, -6.85603172e-03, -1.10033900e-02, -1.45795643e-02,
         1.92597508e-03, -4.53343987e-03, -4.09390405e-03,  1.01033068e+00,
        -6.30043447e-04, -5.07626683e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14293824]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 7
Node /17 input 0: size torch.Size([256]) unstable 22
-----------------
# of unstable neurons: 29
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 102] 
split level 1: [/input.3, 231] 
split level 2: [/input.3, 232] 
split level 3: [/input.3, 87] 
split level 4: [/input.3, 130] 
split level 5: [/input.3, 172] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.006949901580810547
Time: prepare 0.0035    bound 0.1242    transfer 0.0002    finalize 0.0018    func 0.1297    
Accumulated time: func 0.1297    prepare 0.0040    bound 0.1242    transfer 0.0002    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.01938 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0228    set_bounds 0.0111    solve 0.1298    add 0.0006    
Accumulated time: pickout 0.0005    decision 0.0228    set_bounds 0.0111    solve 0.1298    add 0.0006    
Current (lb-rhs): -0.01938025653362274
1 domains visited
Cumulative time: 0.16885972023010254

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 245] 
split level 1: [/input.3, 21] 
split level 2: [/input.3, 91] 
split level 3: [/input.3, 226] 
split level 4: [/input.3, 94] 
split level 5: [/input.3, 200] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.200241088867188e-05
Time: prepare 0.0075    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0149    
Accumulated time: func 0.1446    prepare 0.0120    bound 0.1288    transfer 0.0003    finalize 0.0044    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0118    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0461    set_bounds 0.0229    solve 0.1447    add 0.0006    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.21975207328796387


Properties batch 3, size 1
Remaining timeout: 117.98731422424316
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3045188784599304.

Properties batch 4, size 1
Remaining timeout: 117.91642642021179
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.49525904655456543.

Properties batch 5, size 1
Remaining timeout: 117.85024118423462
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.49785560369491577.

Properties batch 6, size 1
Remaining timeout: 117.78419470787048
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4794637858867645.

Properties batch 7, size 1
Remaining timeout: 117.71635603904724
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.49790048599243164.

Properties batch 8, size 1
Remaining timeout: 117.64239287376404
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5232128500938416.
Result: safe in 2.4289 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01049536, -0.02440287,  1.02372956, -0.01027864, -0.00424447,
          0.00344172, -0.01117672, -0.02462664, -0.00295866, -0.01208950]],
       device='cuda:0')
diversed PGD initialization time: 0.1276
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00764345, -0.01236188,  1.00272262, -0.00827836,  0.00202363,
           0.00342638, -0.00783839, -0.01474194, -0.00297027, -0.00792778],
         [-0.00764345, -0.01236188,  1.00272262, -0.00827836,  0.00202363,
           0.00342638, -0.00783839, -0.01474194, -0.00297027, -0.00792778]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01036608, 1.01508451, 1.01100099, 1.00069904, 0.99929625,
          1.01056099, 1.01746452, 1.00569284, 1.01065040]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4194 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01049536, -0.02440287,  1.02372956, -0.01027864, -0.00424447,
          0.00344172, -0.01117672, -0.02462664, -0.00295866, -0.01208950]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 7] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99789637, 0.99395895, 1.00374651, 0.98940313, 0.95136869, 0.99997759,
         1.00844705, 0.99625409, 0.99922359]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5226 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.53431159e-04,  1.19251981e-02,  2.06158906e-02, -1.21411383e-02,
         -5.79180196e-03,  2.43002176e-03, -1.51421875e-04,  9.72705364e-01,
          1.08598173e-03, -2.27919221e-02]], device='cuda:0')
diversed PGD initialization time: 0.1295
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02532059,  0.03823356,  0.42061961,  0.00060092, -0.00929936,
           0.01807216,  0.00585562,  0.52804792, -0.00803301, -0.01017966],
         [-0.02532059,  0.03823356,  0.42061961,  0.00060092, -0.00929936,
           0.01807216,  0.00585562,  0.52804792, -0.00803301, -0.01017966]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.55336851, 0.48981437, 0.10742831, 0.52744699, 0.53734726,
          0.50997579, 0.52219230, 0.53608096, 0.53822756]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4493 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.53431159e-04,  1.19251981e-02,  2.06158906e-02, -1.21411383e-02,
         -5.79180196e-03,  2.43002176e-03, -1.51421875e-04,  9.72705364e-01,
          1.08598173e-03, -2.27919221e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 38, 1, 14] with unstable size 37 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [37]; unstable size 37; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.59877241e-02, -2.84076422e-01, -6.71423197e-01, -4.50357795e-01,
          4.64051962e-04, -1.53107077e-01, -9.86118615e-03, -2.39106268e-02,
         -1.64987147e-02]], device='cuda:0') None
best_l after optimization: 0.3221326470375061
alpha/beta optimization time: 1.6771700382232666
initial alpha-crown bounds: tensor([[ 0.16174808,  0.08303316, -0.41321456, -0.21391490,  0.15517737,
          0.08651461,  0.14250262,  0.15823889,  0.16204736]], device='cuda:0')
Worst class: (+ rhs) -0.4132145643234253
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.74855589866638
##### Instance 196 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16174808144569397.

Properties batch 1, size 1
Remaining timeout: 117.6752381324768
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08303315937519073.

Properties batch 2, size 1
Remaining timeout: 117.60562133789062
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41321456]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.53431159e-04,  1.19251981e-02,  2.06158906e-02, -1.21411383e-02,
        -5.79180196e-03,  2.43002176e-03, -1.51421875e-04,  9.72705364e-01,
         1.08598173e-03, -2.27919221e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41321456]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 32
-----------------
# of unstable neurons: 46
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 102] 
split level 2: [/input.3, 232] 
split level 3: [/input.3, 130] 
split level 4: [/input, 158] 
split level 5: [/input.3, 221] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009738445281982422
Time: prepare 0.0066    bound 0.2105    transfer 0.0003    finalize 0.0031    func 0.2206    
Accumulated time: func 0.2206    prepare 0.0071    bound 0.2105    transfer 0.0003    finalize 0.0031    
Current worst splitting domains lb-rhs (depth):
-0.03950 (6), -0.00571 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.2207    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.2207    add 0.0008    
Current (lb-rhs): -0.039496734738349915
2 domains visited
Cumulative time: 0.26071810722351074

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 87] [/input.3, 87] 
split level 1: [/input, 245] [/input.3, 91] 
split level 2: [/input.3, 172] [/input.3, 172] 
split level 3: [/input.3, 91] [/input.3, 21] 
split level 4: [/input.3, 21] [/input, 198] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0026    func 0.0146    
Accumulated time: func 0.2352    prepare 0.0149    bound 0.2151    transfer 0.0004    finalize 0.0057    
length of domains: 0
Time: pickout 0.0006    decision 0.0223    set_bounds 0.0116    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0454    set_bounds 0.0229    solve 0.2353    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.31018543243408203


Properties batch 3, size 1
Remaining timeout: 117.20020365715027
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21391490]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.53431159e-04,  1.19251981e-02,  2.06158906e-02, -1.21411383e-02,
        -5.79180196e-03,  2.43002176e-03, -1.51421875e-04,  9.72705364e-01,
         1.08598173e-03, -2.27919221e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21391490]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 32
-----------------
# of unstable neurons: 46
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 231] 
split level 1: [/input.3, 91] 
split level 2: [/input.3, 143] 
split level 3: [/input.3, 200] 
split level 4: [/input, 138] 
split level 5: [/input.3, 153] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0113    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0113    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05361151695251465


Properties batch 4, size 1
Remaining timeout: 117.05017852783203
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15517736971378326.

Properties batch 5, size 1
Remaining timeout: 116.97883939743042
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08651461452245712.

Properties batch 6, size 1
Remaining timeout: 116.91202735900879
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.14250262081623077.

Properties batch 7, size 1
Remaining timeout: 116.84420680999756
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15823888778686523.

Properties batch 8, size 1
Remaining timeout: 116.76976895332336
##### Instance 196 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1620473563671112.
Result: safe in 3.3009 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.17819756e-04,  9.47798967e-01,  2.12660432e-03,  2.17200071e-03,
         -8.45611095e-04,  9.31128860e-04,  3.67254019e-03,  1.48033053e-02,
          1.70803815e-03,  4.66755033e-03]], device='cuda:0')
diversed PGD initialization time: 0.1297
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01763227,  0.69796181,  0.02973500, -0.01179554,  0.01263754,
           0.02666447, -0.00536220,  0.05250617,  0.18044855,  0.01163273],
         [-0.01763227,  0.69796181,  0.02973500, -0.01179554,  0.01263754,
           0.02666447, -0.00536220,  0.05250617,  0.18044855,  0.01163273]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.71559405, 0.66822684, 0.70975733, 0.68532425, 0.67129731,
          0.70332402, 0.64545566, 0.51751328, 0.68632907]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4155 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.17819756e-04,  9.47798967e-01,  2.12660432e-03,  2.17200071e-03,
         -8.45611095e-04,  9.31128860e-04,  3.67254019e-03,  1.48033053e-02,
          1.70803815e-03,  4.66755033e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 40, 1, 18] with unstable size 39 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [39]; unstable size 39; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.33413038,  0.27418506,  0.07627183,  0.26302242,  0.01902726,
          0.30181175,  0.18874186, -0.17322609,  0.19391026]], device='cuda:0') None

all verified at 5th iter
best_l after optimization: 2.6476521492004395
alpha/beta optimization time: 0.08227062225341797
initial alpha-crown bounds: tensor([[0.42335790, 0.37355575, 0.19055064, 0.36553806, 0.19510022, 0.39160186,
         0.31312141, 0.02345145, 0.37137470]], device='cuda:0')
Worst class: (+ rhs) 0.02345144748687744
verified with init bound!
Result: safe-incomplete in 0.6006 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00498173, 0.07343947, 0.72495466, 0.03283306, 0.01302791, 0.03134494,
         0.00739091, 0.02137730, 0.02818415, 0.02350207]], device='cuda:0')
diversed PGD initialization time: 0.1268
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 5.63519448e-03,  4.20815498e-02,  1.38335481e-01,  8.01103830e-01,
           9.15437937e-04, -9.32876691e-02,  2.49819905e-02,  3.39612365e-04,
           2.39686072e-02,  1.27213970e-02],
         [ 5.63519448e-03,  4.20815498e-02,  1.38335481e-01,  8.01103830e-01,
           9.15437937e-04, -9.32876691e-02,  2.49819905e-02,  3.39612365e-04,
           2.39686072e-02,  1.27213970e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13270029,  0.09625393, -0.66276836,  0.13742004,  0.23162314,
           0.11335349,  0.13799587,  0.11436687,  0.12561408]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1378 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.02289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.005724091082811356, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.72331929e-04,  9.73333120e-01,  1.60336494e-03, -2.39783525e-03,
         -4.23842296e-03, -1.06745213e-03,  2.24270672e-03,  3.68602574e-03,
         -5.42720407e-03, -2.00875849e-03]], device='cuda:0')
diversed PGD initialization time: 0.1408
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00228224,  0.93072659,  0.01076460,  0.00360516, -0.00120442,
           0.00481820,  0.00115442,  0.01214769,  0.00137060,  0.00606953],
         [ 0.00228224,  0.93072659,  0.01076460,  0.00360516, -0.00120442,
           0.00481820,  0.00115442,  0.01214769,  0.00137060,  0.00606953]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92844433, 0.91996199, 0.92712140, 0.93193102, 0.92590839,
          0.92957217, 0.91857892, 0.92935598, 0.92465705]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4213 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.72331929e-04,  9.73333120e-01,  1.60336494e-03, -2.39783525e-03,
         -4.23842296e-03, -1.06745213e-03,  2.24270672e-03,  3.68602574e-03,
         -5.42720407e-03, -2.00875849e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 29, 1, 21] with unstable size 28 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [28]; unstable size 28; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.80005717, 0.74932265, 0.55748701, 0.83287960, 0.76772535, 0.81615621,
         0.76441097, 0.39081520, 0.73523545]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5253 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 200, vnnlib ID: 200 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.02715084, 0.01585135, 0.22456753, 0.04485715, 0.02046129, 0.03758302,
         0.01867784, 0.51497257, 0.03505491, 0.02427904]], device='cuda:0')
diversed PGD initialization time: 0.1245
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02846766,  0.00246286,  0.11212450, -0.01295675, -0.01160987,
           0.02360900, -0.01009566, -0.01487169,  0.93132484, -0.02489274],
         [-0.02846766,  0.00246286,  0.11212450, -0.01295675, -0.01160987,
           0.02360900, -0.01009566, -0.01487169,  0.93132484, -0.02489274]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01359597, -0.01733454, -0.12699619, -0.00191493, -0.00326182,
          -0.03848069, -0.00477603, -0.94619656,  0.01002105]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1336 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1923 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 201, vnnlib ID: 201 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.20948014e-03, -2.69154236e-02,  1.02456152e+00, -1.50079131e-02,
          4.97773290e-04,  2.22384930e-03, -1.30107179e-02, -1.91279799e-02,
         -2.82518566e-04, -9.53086466e-03]], device='cuda:0')
diversed PGD initialization time: 0.1258
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01713693, -0.05596252,  0.75491279,  0.53703856, -0.01129106,
          -0.19418517,  0.03150582, -0.10724562,  0.00190705, -0.01549319],
         [ 0.01713693, -0.05596252,  0.75491279,  0.53703856, -0.01129106,
          -0.19418517,  0.03150582, -0.10724562,  0.00190705, -0.01549319]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.73777586, 0.81087530, 0.21787423, 0.76620388, 0.94909799,
          0.72340697, 0.86215842, 0.75300574, 0.77040601]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4164 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.20948014e-03, -2.69154236e-02,  1.02456152e+00, -1.50079131e-02,
          4.97773290e-04,  2.22384930e-03, -1.30107179e-02, -1.91279799e-02,
         -2.82518566e-04, -9.53086466e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 11] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44052511, -0.09188074, -0.90698910, -0.10611555, -0.34803137,
         -0.20126066, -0.14125945, -0.87488639, -0.18260467]], device='cuda:0') None
best_l after optimization: 2.996023178100586
alpha/beta optimization time: 1.7408630847930908
initial alpha-crown bounds: tensor([[ 0.36641684,  0.45998552, -0.21631245,  0.43937880,  0.42636523,
          0.40970883,  0.47863311,  0.20811650,  0.42373091]], device='cuda:0')
Worst class: (+ rhs) -0.2163124531507492
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.75358557701111
##### Instance 201 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3664168417453766.

Properties batch 1, size 1
Remaining timeout: 117.67660021781921
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.45998552441596985.

Properties batch 2, size 1
Remaining timeout: 117.60483241081238
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21631245]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.20948014e-03, -2.69154236e-02,  1.02456152e+00, -1.50079131e-02,
         4.97773290e-04,  2.22384930e-03, -1.30107179e-02, -1.91279799e-02,
        -2.82518566e-04, -9.53086466e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21631245]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 11
Node /17 input 0: size torch.Size([256]) unstable 20
-----------------
# of unstable neurons: 31
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 153] 
split level 1: [/input.3, 143] 
split level 2: [/input.3, 241] 
split level 3: [/input.3, 78] 
split level 4: [/input.3, 194] 
split level 5: [/input.3, 236] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0034    bound 0.0046    transfer 0.0001    finalize 0.0018    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0245    set_bounds 0.0110    solve 0.0101    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0245    set_bounds 0.0110    solve 0.0101    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05064105987548828


Properties batch 3, size 1
Remaining timeout: 117.45794558525085
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4393787980079651.

Properties batch 4, size 1
Remaining timeout: 117.38234949111938
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4263652265071869.

Properties batch 5, size 1
Remaining timeout: 117.31126070022583
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.40970882773399353.

Properties batch 6, size 1
Remaining timeout: 117.2398624420166
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4786331057548523.

Properties batch 7, size 1
Remaining timeout: 117.16973280906677
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20811650156974792.

Properties batch 8, size 1
Remaining timeout: 117.10109567642212
##### Instance 201 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.42373090982437134.
Result: safe in 2.9678 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 202, vnnlib ID: 202 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00100133,  0.92358905,  0.00776914,  0.00716940, -0.00300620,
          0.01257975, -0.00261583,  0.00747511,  0.00847176,  0.01672251]],
       device='cuda:0')
diversed PGD initialization time: 0.1368
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02341873,  0.22197817, -0.01685630, -0.05297039, -0.00995688,
          -0.04967044, -0.07137987, -0.00515413,  0.99147862, -0.01522879],
         [-0.02341873,  0.22197817, -0.01685630, -0.05297039, -0.00995688,
          -0.04967044, -0.07137987, -0.00515413,  0.99147862, -0.01522879]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.24539690,  0.23883447,  0.27494857,  0.23193505,  0.27164862,
           0.29335803,  0.22713231, -0.76950043,  0.23720697]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1461 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2240 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 203, vnnlib ID: 203 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00142753e+00, -1.25582293e-02,  5.80519438e-04, -1.11472756e-02,
         -8.21299478e-03,  7.74678588e-03,  2.40674242e-03, -1.80401355e-02,
          2.39163637e-06, -1.01334304e-02]], device='cuda:0')
diversed PGD initialization time: 0.1257
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.98679364, -0.00520100,  0.03045772, -0.01224364, -0.01170087,
           0.01292678, -0.01429506, -0.01467125,  0.00601836, -0.00347798],
         [ 0.98679364, -0.00520100,  0.03045772, -0.01224364, -0.01170087,
           0.01292678, -0.01429506, -0.01467125,  0.00601836, -0.00347798]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99199462, 0.95633590, 0.99903727, 0.99849451, 0.97386688,
          1.00108874, 1.00146484, 0.98077530, 0.99027163]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4226 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00142753e+00, -1.25582293e-02,  5.80519438e-04, -1.11472756e-02,
         -8.21299478e-03,  7.74678588e-03,  2.40674242e-03, -1.80401355e-02,
          2.39163637e-06, -1.01334304e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 9] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.70022714, 0.48595876, 0.68735665, 0.71084464, 0.59760731, 0.69995373,
         0.70068461, 0.70868933, 0.69370884]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5216 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 204, vnnlib ID: 204 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00418671, 0.00850652, 0.02153885, 0.01551624, 0.78950197, 0.01076293,
         0.00951426, 0.05503207, 0.01084973, 0.06695952]], device='cuda:0')
diversed PGD initialization time: 0.1318
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.88128278e-03,  6.76848739e-03,  2.22999901e-02,  8.61839950e-03,
          -1.57990567e-02,  9.66832787e-03,  3.16783786e-04, -2.05031782e-02,
           1.59883276e-02,  9.73984420e-01],
         [ 1.88128278e-03,  6.76848739e-03,  2.22999901e-02,  8.61839950e-03,
          -1.57990567e-02,  9.66832787e-03,  3.16783786e-04, -2.05031782e-02,
           1.59883276e-02,  9.73984420e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01768034, -0.02256754, -0.03809905, -0.02441746, -0.02546738,
          -0.01611584,  0.00470412, -0.03178738, -0.98978347]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1422 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2157 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 205, vnnlib ID: 205 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
         -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
          8.52495432e-05,  7.20436126e-03]], device='cuda:0')
diversed PGD initialization time: 0.1420
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00247147,  0.50895423, -0.01933281, -0.01940888,  0.44336468,
          -0.00178331, -0.00526468,  0.04953003,  0.00315295,  0.01552957],
         [-0.00247147,  0.50895423, -0.01933281, -0.01940888,  0.44336468,
          -0.00178331, -0.00526468,  0.04953003,  0.00315295,  0.01552957]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.51142567, 0.52828705, 0.52836311, 0.06558955, 0.51073754,
          0.51421893, 0.45942420, 0.50580126, 0.49342465]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4299 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
         -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
          8.52495432e-05,  7.20436126e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 47, 1, 27] with unstable size 46 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [46]; unstable size 46; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.32093868, -0.42896903, -0.43955415, -1.28946877, -0.41667414,
         -0.36814114, -1.27445364, -1.11797857, -0.78049487]], device='cuda:0') None
best_l after optimization: -2.9617724418640137
alpha/beta optimization time: 1.6862475872039795
initial alpha-crown bounds: tensor([[-0.06344307, -0.11139025, -0.08638771, -0.99158549, -0.07690287,
         -0.06523106, -0.82329988, -0.36875182, -0.37478042]], device='cuda:0')
Worst class: (+ rhs) -0.9915854930877686
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.7781150341034
##### Instance 205 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06344307]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06344307]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 217] 
split level 2: [/input.3, 30] 
split level 3: [/input, 95] 
split level 4: [/input.3, 124] 
split level 5: [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.914138793945312e-05
Time: prepare 0.0067    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0115    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0115    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053586483001708984


Properties batch 1, size 1
Remaining timeout: 117.62694692611694
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11139025]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11139025]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 21] 
split level 3: [/input, 171] 
split level 4: [/input, 154] 
split level 5: [/input, 94] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0003826618194580078
Time: prepare 0.0066    bound 0.0133    transfer 0.0002    finalize 0.0023    func 0.0225    
Accumulated time: func 0.0225    prepare 0.0071    bound 0.0133    transfer 0.0002    finalize 0.0023    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0114    solve 0.0226    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0236    set_bounds 0.0114    solve 0.0226    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06220102310180664


Properties batch 2, size 1
Remaining timeout: 117.46874499320984
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08638771]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08638771]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 217] 
split level 2: [/input.3, 30] 
split level 3: [/input, 171] 
split level 4: [/input.3, 166] 
split level 5: [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010061264038085938
Time: prepare 0.0066    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05396890640258789


Properties batch 3, size 1
Remaining timeout: 117.31685662269592
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.99158549]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.99158549]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 123] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 18] 
split level 4: [/input, 95] 
split level 5: [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009119987487792969
Time: prepare 0.0067    bound 0.2064    transfer 0.0004    finalize 0.0030    func 0.2167    
Accumulated time: func 0.2167    prepare 0.0072    bound 0.2064    transfer 0.0004    finalize 0.0030    
Current worst splitting domains lb-rhs (depth):
-0.28101 (6), -0.25837 (6), -0.15087 (6), -0.04959 (6), 
length of domains: 4
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0117    solve 0.2167    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0117    solve 0.2167    add 0.0009    
Current (lb-rhs): -0.28100574016571045
4 domains visited
Cumulative time: 0.25788021087646484

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 62] [/input, 75] [/input, 62] [/input, 75] 
split level 1: [/input, 75] [/input, 62] [/input, 75] [/input, 62] 
split level 2: [/input, 208] [/input, 208] [/input, 208] [/input, 208] 
split level 3: [/input, 100] [/input, 100] [/input, 100] [/input, 100] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.271766662597656e-05
Time: prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0146    
Accumulated time: func 0.2313    prepare 0.0150    bound 0.2112    transfer 0.0005    finalize 0.0054    
length of domains: 0
Time: pickout 0.0008    decision 0.0246    set_bounds 0.0101    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0482    set_bounds 0.0218    solve 0.2314    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.3084378242492676


Properties batch 4, size 1
Remaining timeout: 116.91131782531738
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07690287]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07690287]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 183] 
split level 3: [/input.3, 217] 
split level 4: [/input, 154] 
split level 5: [/input, 171] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0066    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0136    
Accumulated time: func 0.0136    prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0113    solve 0.0137    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0232    set_bounds 0.0113    solve 0.0137    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0530095100402832


Properties batch 5, size 1
Remaining timeout: 116.76018857955933
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06523106]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06523106]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 216] 
split level 2: [/input, 95] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 124] 
split level 5: [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.369850158691406e-05
Time: prepare 0.0068    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0115    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0115    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053714752197265625


Properties batch 6, size 1
Remaining timeout: 116.6100721359253
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.82329988]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.82329988]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 13] 
split level 3: [/input.3, 133] 
split level 4: [/input.3, 165] 
split level 5: [/input, 140] 
pruning_in_iteration open status: True
ratio of positive domain = 48 / 64 = 0.75
pruning-in-iteration extra time: 0.010075569152832031
Time: prepare 0.0067    bound 0.2150    transfer 0.0004    finalize 0.0030    func 0.2253    
Accumulated time: func 0.2253    prepare 0.0072    bound 0.2150    transfer 0.0004    finalize 0.0030    
Current worst splitting domains lb-rhs (depth):
-0.46911 (6), -0.35075 (6), -0.29947 (6), -0.24267 (6), -0.23757 (6), -0.22663 (6), -0.20883 (6), -0.20491 (6), -0.12173 (6), -0.11911 (6), -0.11294 (6), -0.10140 (6), -0.07602 (6), -0.05076 (6), -0.03084 (6), -0.00591 (6), 
length of domains: 16
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.2254    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.2254    add 0.0011    
Current (lb-rhs): -0.4691126346588135
16 domains visited
Cumulative time: 0.26561474800109863

BaB round 2
batch: 16
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] [/input, 95] 
split level 1: [/input, 75] [/input, 33] [/input, 75] [/input, 75] [/input, 75] [/input, 33] [/input, 75] [/input, 33] [/input, 75] [/input, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 46 / 64 = 0.71875
pruning-in-iteration extra time: 0.00927424430847168
Time: prepare 0.0073    bound 0.2083    transfer 0.0003    finalize 0.0031    func 0.2191    
Accumulated time: func 0.4444    prepare 0.0149    bound 0.4233    transfer 0.0008    finalize 0.0061    
Current worst splitting domains lb-rhs (depth):
-0.27847 (8), -0.22365 (8), -0.19601 (8), -0.17497 (8), -0.12695 (8), -0.10278 (8), -0.08464 (8), -0.07740 (8), -0.06740 (8), -0.04871 (8), -0.04311 (8), -0.03314 (8), -0.02985 (8), -0.01277 (8), -0.01093 (8), -0.01013 (8), -0.00843 (8), -0.00283 (8), 
length of domains: 18
Time: pickout 0.0007    decision 0.0316    set_bounds 0.0083    solve 0.2192    add 0.0012    
Accumulated time: pickout 0.0012    decision 0.0550    set_bounds 0.0194    solve 0.4446    add 0.0024    
Current (lb-rhs): -0.2784656286239624
34 domains visited
Cumulative time: 0.5271799564361572

BaB round 3
batch: 18
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 33] [/input, 75] [/input, 154] [/input, 178] [/input, 33] [/input, 93] [/input, 33] [/input, 178] [/input, 33] 
split level 1: [/input, 154] [/input, 93] [/input, 93] [/input.3, 166] [/input, 93] [/input, 93] [/input, 154] [/input, 93] [/input, 93] [/input, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 72 = 0.875
pruning-in-iteration extra time: 0.009845972061157227
Time: prepare 0.0089    bound 0.2138    transfer 0.0003    finalize 0.0035    func 0.2266    
Accumulated time: func 0.6710    prepare 0.0243    bound 0.6372    transfer 0.0011    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-0.16051 (10), -0.10526 (10), -0.07691 (10), -0.07201 (10), -0.05526 (10), -0.05000 (10), -0.04745 (10), -0.03132 (10), -0.01212 (10), 
length of domains: 9
Time: pickout 0.0007    decision 0.0333    set_bounds 0.0096    solve 0.2267    add 0.0009    
Accumulated time: pickout 0.0019    decision 0.0883    set_bounds 0.0290    solve 0.6712    add 0.0033    
Current (lb-rhs): -0.16050946712493896
43 domains visited
Cumulative time: 0.7989687919616699

BaB round 4
batch: 9
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 154] [/input, 44] [/input, 209] [/input, 154] [/input, 93] [/input, 44] [/input, 44] [/input, 154] [/input, 44] 
split level 1: [/input, 178] [/input, 154] [/input, 154] [/input, 178] [/input, 178] [/input, 154] [/input, 154] [/input, 178] [/input, 154] 
split level 2: [/input.3, 166] [/input, 178] [/input, 178] [/input.3, 166] [/input.3, 123] [/input, 178] [/input.3, 166] [/input.3, 166] [/input.3, 166] 
pruning_in_iteration open status: True
ratio of positive domain = 70 / 72 = 0.9722222222222222
pruning-in-iteration extra time: 0.009796857833862305
Time: prepare 0.0082    bound 0.2150    transfer 0.0004    finalize 0.0043    func 0.2281    
Accumulated time: func 0.8991    prepare 0.0330    bound 0.8522    transfer 0.0015    finalize 0.0139    
Current worst splitting domains lb-rhs (depth):
-0.03713 (13), -0.02971 (13), 
length of domains: 2
Time: pickout 0.0008    decision 0.0279    set_bounds 0.0111    solve 0.2281    add 0.0008    
Accumulated time: pickout 0.0027    decision 0.1162    set_bounds 0.0401    solve 0.8994    add 0.0041    
Current (lb-rhs): -0.03713268041610718
45 domains visited
Cumulative time: 1.0682344436645508

BaB round 5
batch: 2
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input, 209] 
split level 1: [/input.3, 166] [/input.3, 166] 
split level 2: [/input.3, 123] [/input.3, 123] 
split level 3: [/input.3, 183] [/input.3, 183] 
split level 4: [/input, 202] [/input, 202] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.606910705566406e-05
Time: prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0147    
Accumulated time: func 0.9137    prepare 0.0407    bound 0.8570    transfer 0.0016    finalize 0.0165    
length of domains: 0
Time: pickout 0.0006    decision 0.0227    set_bounds 0.0116    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0033    decision 0.1389    set_bounds 0.0517    solve 0.9141    add 0.0042    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
45 domains visited
Cumulative time: 1.11830472946167


Properties batch 7, size 1
Remaining timeout: 115.39630699157715
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36875182]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36875182]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 150] 
split level 4: [/input, 95] 
split level 5: [/input.3, 183] 

all verified at 13th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0066509246826171875
Time: prepare 0.0067    bound 0.1514    transfer 0.0004    finalize 0.0039    func 0.1628    
Accumulated time: func 0.1628    prepare 0.0072    bound 0.1514    transfer 0.0004    finalize 0.0039    
length of domains: 0
Time: pickout 0.0005    decision 0.0226    set_bounds 0.0110    solve 0.1629    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0226    set_bounds 0.0110    solve 0.1629    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.20141983032226562


Properties batch 8, size 1
Remaining timeout: 115.09930276870728
##### Instance 205 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37478042]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.58226961e-04,  9.82195795e-01, -2.23784149e-03, -3.92000377e-03,
        -4.89003584e-03,  1.40754133e-03, -4.58646566e-03,  2.32303143e-03,
         8.52495432e-05,  7.20436126e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37478042]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 26] 
split level 2: [/input, 95] 
split level 3: [/input.3, 13] 
split level 4: [/input.3, 183] 
split level 5: [/input.3, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00960540771484375
Time: prepare 0.0066    bound 0.2076    transfer 0.0004    finalize 0.0033    func 0.2180    
Accumulated time: func 0.2180    prepare 0.0072    bound 0.2076    transfer 0.0004    finalize 0.0033    
Current worst splitting domains lb-rhs (depth):
-0.04299 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.2181    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.2181    add 0.0008    
Current (lb-rhs): -0.042989909648895264
1 domains visited
Cumulative time: 0.25873255729675293

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 159] 
split level 1: [/input, 75] 
split level 2: [/input, 178] 
split level 3: [/input, 141] 
split level 4: [/input, 93] 
split level 5: [/input.3, 169] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.2326    prepare 0.0150    bound 0.2123    transfer 0.0005    finalize 0.0057    
length of domains: 0
Time: pickout 0.0007    decision 0.0238    set_bounds 0.0124    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0474    set_bounds 0.0239    solve 0.2327    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.31058788299560547

Result: safe in 5.3126 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 206, vnnlib ID: 206 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.18081200e-04, -6.90467656e-03,  1.34834647e-03, -1.98781490e-03,
          9.67034757e-01,  1.86525658e-02,  4.60840762e-03, -1.25403255e-02,
          4.42592055e-03,  1.48472339e-02]], device='cuda:0')
diversed PGD initialization time: 0.1352
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01437305, -0.04978070, -0.01414892, -0.08182874,  0.22721899,
           0.03291133, -0.00433341, -0.04879975,  0.65249634,  0.30463454],
         [-0.01437305, -0.04978070, -0.01414892, -0.08182874,  0.22721899,
           0.03291133, -0.00433341, -0.04879975,  0.65249634,  0.30463454]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.24159203,  0.27699968,  0.24136791,  0.30904773,  0.19430766,
           0.23155239,  0.27601874, -0.42527735, -0.07741556]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1442 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2045 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 207, vnnlib ID: 207 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00356657,  0.01426437,  0.03790635,  0.00560954, -0.05698508,
          0.01109915,  0.00829534, -0.03856613,  0.01006516,  0.99411464]],
       device='cuda:0')
diversed PGD initialization time: 0.1327
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03934310, -0.05495086, -0.02518962, -0.04833765, -0.02021476,
          -0.00693096, -0.01746859, -0.07666697,  0.84582365,  0.45706832],
         [-0.03934310, -0.05495086, -0.02518962, -0.04833765, -0.02021476,
          -0.00693096, -0.01746859, -0.07666697,  0.84582365,  0.45706832]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.49641141,  0.51201916,  0.48225796,  0.50540596,  0.47728309,
           0.46399927,  0.47453690,  0.53373528, -0.38875532]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1467 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 208, vnnlib ID: 208 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03542507,  0.01537140,  0.03552896, -0.01004802,  0.00797365,
          0.66501516,  0.13823834,  0.01884539,  0.05027781,  0.03159137]],
       device='cuda:0')
diversed PGD initialization time: 0.1416
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.07332286, -0.02629068, -0.03535156, -0.01440659, -0.02944678,
           0.63151258,  0.67851502, -0.04895781, -0.04017472, -0.03438397],
         [-0.07332286, -0.02629068, -0.03535156, -0.01440659, -0.02944678,
           0.63151258,  0.67851502, -0.04895781, -0.04017472, -0.03438397]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.70483541,  0.65780330,  0.66686416,  0.64591920,  0.66095936,
          -0.04700243,  0.68047041,  0.67168730,  0.66589653]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1508 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2220 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 209, vnnlib ID: 209 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.93518329e-04,  9.63196158e-04, -5.21570444e-04,  2.09492445e-03,
          8.35881755e-03,  6.64138794e-03,  2.05405429e-03, -7.58898258e-03,
          4.65048105e-03,  9.94737148e-01]], device='cuda:0')
diversed PGD initialization time: 0.1357
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02252782, -0.02324009, -0.01358117, -0.06349689,  0.01122599,
           0.03576904,  0.00623054, -0.03669702,  0.25704488,  0.84491587],
         [-0.02252782, -0.02324009, -0.01358117, -0.06349689,  0.01122599,
           0.03576904,  0.00623054, -0.03669702,  0.25704488,  0.84491587]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.86744368, 0.86815596, 0.85849702, 0.90841275, 0.83368987,
          0.80914682, 0.83868533, 0.88161290, 0.58787096]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4235 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-8.93518329e-04,  9.63196158e-04, -5.21570444e-04,  2.09492445e-03,
          8.35881755e-03,  6.64138794e-03,  2.05405429e-03, -7.58898258e-03,
          4.65048105e-03,  9.94737148e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 44, 1, 5] with unstable size 43 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [43]; unstable size 43; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.30172518,  0.28105202,  0.19802737,  0.20408052,  0.07085560,
          0.01296283,  0.15939593,  0.16851465, -0.35578123]], device='cuda:0') None

all verified at 4th iter
best_l after optimization: 3.471696615219116
alpha/beta optimization time: 0.06595659255981445
initial alpha-crown bounds: tensor([[0.50561941, 0.49485552, 0.45421216, 0.48061568, 0.31061697, 0.34396511,
         0.42762655, 0.43540043, 0.01878478]], device='cuda:0')
Worst class: (+ rhs) 0.0187847837805748
verified with init bound!
Result: safe-incomplete in 0.5978 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 210, vnnlib ID: 210 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00385356, -0.01162678,  0.00147864, -0.00615141, -0.00976840,
         -0.01063015, -0.00752200, -0.01393186,  0.00115541, -0.00807425]],
       device='cuda:0')
diversed PGD initialization time: 0.1225
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.95301425e-01, -1.11729577e-02,  7.33380020e-03, -2.24644691e-03,
          -1.07212923e-02, -1.46100447e-02, -6.55979663e-03, -1.24154985e-02,
           9.85123217e-04, -6.79869950e-03],
         [ 9.95301425e-01, -1.11729577e-02,  7.33380020e-03, -2.24644691e-03,
          -1.07212923e-02, -1.46100447e-02, -6.55979663e-03, -1.24154985e-02,
           9.85123217e-04, -6.79869950e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00647438, 0.98796761, 0.99754786, 1.00602269, 1.00991142,
          1.00186121, 1.00771689, 0.99431628, 1.00210011]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4094 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00385356, -0.01162678,  0.00147864, -0.00615141, -0.00976840,
         -0.01063015, -0.00752200, -0.01393186,  0.00115541, -0.00807425]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 2, 1, 5] with unstable size 1 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.99716169, 0.97789258, 0.98977906, 0.99464834, 0.99814177, 0.98602414,
         0.99876010, 0.98472363, 0.99364418]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5003 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 211, vnnlib ID: 211 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.80279091e-03, -3.75181437e-04,  5.66881895e-03,  8.84982198e-03,
         -3.00221145e-03, -4.02145088e-03,  1.00532055e+00, -2.62102485e-03,
          3.31418961e-03,  5.45329601e-03]], device='cuda:0')
diversed PGD initialization time: 0.1254
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.18687673,  0.01164854,  0.01561926,  0.02149770,  0.00309647,
          -0.01169740,  0.73603821,  0.01580094,  0.01173586,  0.01512795],
         [ 0.18687673,  0.01164854,  0.01561926,  0.02149770,  0.00309647,
          -0.01169740,  0.73603821,  0.01580094,  0.01173586,  0.01512795]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.54916149, 0.72438967, 0.72041893, 0.71454048, 0.73294175,
          0.74773562, 0.72023726, 0.72430235, 0.72091025]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4525 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.80279091e-03, -3.75181437e-04,  5.66881895e-03,  8.84982198e-03,
         -3.00221145e-03, -4.02145088e-03,  1.00532055e+00, -2.62102485e-03,
          3.31418961e-03,  5.45329601e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 24, 1, 5] with unstable size 23 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [23]; unstable size 23; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.01127142,  0.36077923,  0.31574345,  0.34920493,  0.37524062,
          0.32397997,  0.22571091,  0.35057217,  0.30890352]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 2.949338674545288
alpha/beta optimization time: 0.022640705108642578
initial alpha-crown bounds: tensor([[0.04708553, 0.39513159, 0.35453549, 0.37934217, 0.40858653, 0.35964602,
         0.27407026, 0.38313240, 0.34780863]], device='cuda:0')
Worst class: (+ rhs) 0.04708553105592728
verified with init bound!
Result: safe-incomplete in 0.5787 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 212, vnnlib ID: 212 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00148836,  0.00312608,  0.00249192,  0.00238854, -0.00239010,
          0.00839303,  0.00138139, -0.00177699,  0.00469239,  0.98927093]],
       device='cuda:0')
diversed PGD initialization time: 0.1463
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00575094, -0.02780703,  0.01712140, -0.05142820, -0.01965619,
          -0.00389624, -0.02758487, -0.02450022,  0.87082136,  0.23085512],
         [-0.00575094, -0.02780703,  0.01712140, -0.05142820, -0.01965619,
          -0.00389624, -0.02758487, -0.02450022,  0.87082136,  0.23085512]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23660606,  0.25866216,  0.21373372,  0.28228331,  0.25051132,
           0.23475136,  0.25843999,  0.25535536, -0.63996625]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1564 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2475 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 213, vnnlib ID: 213 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99975467, -0.00801787,  0.01314367,  0.00498784, -0.00675232,
         -0.01928002, -0.00803744, -0.01058985, -0.00553171, -0.00729062]],
       device='cuda:0')
diversed PGD initialization time: 0.1222
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.87857699,  0.01161857, -0.00785330, -0.05375460, -0.02270009,
           0.24541810,  0.00317261,  0.04451196,  0.00722557, -0.01617187],
         [ 0.87857699,  0.01161857, -0.00785330, -0.05375460, -0.02270009,
           0.24541810,  0.00317261,  0.04451196,  0.00722557, -0.01617187]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.86695844, 0.88643026, 0.93233156, 0.90127707, 0.63315892,
          0.87540436, 0.83406502, 0.87135142, 0.89474887]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3711 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99975467, -0.00801787,  0.01314367,  0.00498784, -0.00675232,
         -0.01928002, -0.00803744, -0.01058985, -0.00553171, -0.00729062]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 36, 1, 12] with unstable size 35 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [35]; unstable size 35; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.38083130,  0.23435119,  0.21334720,  0.29791781, -0.25700039,
          0.29792902,  0.09795727,  0.06507947,  0.33242583]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 3.2367148399353027
alpha/beta optimization time: 0.03923940658569336
initial alpha-crown bounds: tensor([[0.49605232, 0.40875885, 0.38060018, 0.44027859, 0.00547591, 0.44256917,
         0.26744753, 0.33067691, 0.46485543]], device='cuda:0')
Worst class: (+ rhs) 0.005475908517837524
verified with init bound!
Result: safe-incomplete in 0.4937 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 214, vnnlib ID: 214 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.17749649e-04,  9.62729335e-01,  3.74639034e-03, -9.37789679e-04,
         -3.65003198e-03, -1.95279717e-05,  2.70757824e-03,  5.42742014e-03,
         -4.09606844e-03, -7.44499266e-04]], device='cuda:0')
diversed PGD initialization time: 0.1268
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00488636,  0.95559013, -0.01023401, -0.01184234,  0.05624043,
          -0.01321966, -0.00553104, -0.01509960,  0.00401451,  0.02166777],
         [-0.00488636,  0.95559013, -0.01023401, -0.01184234,  0.05624043,
          -0.01321966, -0.00553104, -0.01509960,  0.00401451,  0.02166777]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96047646, 0.96582413, 0.96743250, 0.89934969, 0.96880978,
          0.96112120, 0.97068971, 0.95157564, 0.93392235]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4099 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 8.17749649e-04,  9.62729335e-01,  3.74639034e-03, -9.37789679e-04,
         -3.65003198e-03, -1.95279717e-05,  2.70757824e-03,  5.42742014e-03,
         -4.09606844e-03, -7.44499266e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 32, 1, 26] with unstable size 31 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [31]; unstable size 31; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.74784887, 0.71432024, 0.32834494, 0.53728169, 0.60061532, 0.71769434,
         0.67801690, 0.70608604, 0.36207041]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5086 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 215, vnnlib ID: 215 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.59364462e-03, -1.38817430e-02, -5.73426485e-04, -9.35520232e-03,
         -3.26320566e-02,  1.02620935e+00, -3.95056605e-03, -3.39728743e-02,
         -9.06625390e-03,  6.13868237e-04]], device='cuda:0')
diversed PGD initialization time: 0.1167
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00982273, -0.01236884,  0.00589670, -0.00149684, -0.03615801,
           1.00356841, -0.00854264, -0.03386790, -0.00656213,  0.00380114],
         [-0.00982273, -0.01236884,  0.00589670, -0.00149684, -0.03615801,
           1.00356841, -0.00854264, -0.03386790, -0.00656213,  0.00380114]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01339114, 1.01593721, 0.99767172, 1.00506520, 1.03972638,
          1.01211107, 1.03743625, 1.01013052, 0.99976730]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4000 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-6.59364462e-03, -1.38817430e-02, -5.73426485e-04, -9.35520232e-03,
         -3.26320566e-02,  1.02620935e+00, -3.95056605e-03, -3.39728743e-02,
         -9.06625390e-03,  6.13868237e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 12, 1, 15] with unstable size 11 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.65832806, 0.59060729, 0.62853873, 0.52811331, 0.66762042, 0.75651586,
         0.67707896, 0.21694580, 0.63697529]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4898 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 216, vnnlib ID: 216 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00127543,  0.00572446,  0.00703026,  0.00820768, -0.00679177,
          0.00851911,  0.00256063, -0.00235392,  0.00738922,  0.97186947]],
       device='cuda:0')
diversed PGD initialization time: 0.1248
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00497811, 0.01027550, 0.01955546, 0.02078030, 0.29284576,
          0.00639078, 0.01082568, 0.01112519, 0.00651077, 0.62313652],
         [0.00497811, 0.01027550, 0.01955546, 0.02078030, 0.29284576,
          0.00639078, 0.01082568, 0.01112519, 0.00651077, 0.62313652]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.61815840, 0.61286104, 0.60358107, 0.60235620, 0.33029076,
          0.61674571, 0.61231083, 0.61201131, 0.61662573]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4114 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00127543,  0.00572446,  0.00703026,  0.00820768, -0.00679177,
          0.00851911,  0.00256063, -0.00235392,  0.00738922,  0.97186947]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 32, 1, 10] with unstable size 31 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [31]; unstable size 31; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.13979632,  0.14122671,  0.07370254,  0.05345088, -0.35301822,
          0.11134280,  0.14180245, -0.00690767, -0.02657062]], device='cuda:0') None
best_l after optimization: 0.6778404712677002
alpha/beta optimization time: 1.6868183612823486
initial alpha-crown bounds: tensor([[ 0.16653231,  0.16387130,  0.08950522,  0.13893528, -0.32864448,
          0.15372404,  0.16571458,  0.04421216,  0.08399005]], device='cuda:0')
Worst class: (+ rhs) -0.3286444842815399
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.79638648033142
##### Instance 216 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16653230786323547.

Properties batch 1, size 1
Remaining timeout: 117.72400903701782
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16387130320072174.

Properties batch 2, size 1
Remaining timeout: 117.65706896781921
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08950521796941757.

Properties batch 3, size 1
Remaining timeout: 117.58865880966187
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13893528282642365.

Properties batch 4, size 1
Remaining timeout: 117.51498174667358
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32864448]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00127543,  0.00572446,  0.00703026,  0.00820768, -0.00679177,
         0.00851911,  0.00256063, -0.00235392,  0.00738922,  0.97186947],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32864448]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 10
Node /17 input 0: size torch.Size([256]) unstable 27
-----------------
# of unstable neurons: 37
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input, 15] 
split level 3: [/input.3, 18] 
split level 4: [/input, 178] 
split level 5: [/input.3, 123] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0113    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05412912368774414


Properties batch 5, size 1
Remaining timeout: 117.36456990242004
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1537240445613861.

Properties batch 6, size 1
Remaining timeout: 117.2941963672638
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1657145768404007.

Properties batch 7, size 1
Remaining timeout: 117.22823071479797
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.04421215504407883.

Properties batch 8, size 1
Remaining timeout: 117.16303873062134
##### Instance 216 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08399005234241486.
Result: safe in 2.9011 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 217, vnnlib ID: 217 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.48661807e-03, -6.20733202e-03, -9.78036225e-03, -2.13853270e-03,
          6.24684989e-03,  4.65363264e-03, -1.51012093e-04,  9.73288000e-01,
          4.55284119e-03,  3.55517119e-03]], device='cuda:0')
diversed PGD initialization time: 0.1214
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03044175, -0.02825844,  0.00829233, -0.04822078, -0.00370018,
           0.06255920, -0.00062721,  0.26188189,  0.58674419,  0.15055175],
         [-0.03044175, -0.02825844,  0.00829233, -0.04822078, -0.00370018,
           0.06255920, -0.00062721,  0.26188189,  0.58674419,  0.15055175]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.29232365,  0.29014033,  0.25358957,  0.31010267,  0.26558205,
           0.19932269,  0.26250911, -0.32486230,  0.11133014]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1318 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1860 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 218, vnnlib ID: 218 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01257418, -0.02653407,  0.01678567,  0.59804010, -0.02626429,
          0.04143000, -0.00321151, -0.07445292,  0.00741141,  0.46451789]],
       device='cuda:0')
diversed PGD initialization time: 0.1345
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.50397043e-02, -3.42228338e-02, -3.25750262e-02,  3.36862028e-01,
           1.14745945e-02, -6.05548918e-03, -1.59241632e-02, -2.20326632e-02,
           6.66663051e-04,  7.30779588e-01],
         [-3.50397043e-02, -3.42228338e-02, -3.25750262e-02,  3.36862028e-01,
           1.14745945e-02, -6.05548918e-03, -1.59241632e-02, -2.20326632e-02,
           6.66663051e-04,  7.30779588e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.37190172,  0.37108487,  0.36943704,  0.32538742,  0.34291750,
           0.35278618,  0.35889471,  0.33619535, -0.39391756]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1445 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2087 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 219, vnnlib ID: 219 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.33886221e-03, -3.80126387e-03,  1.48700178e-03, -1.17176771e-03,
          9.88623738e-01, -1.87616795e-03,  1.42543763e-03, -2.71704793e-03,
         -2.48916447e-04,  7.61076808e-04]], device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02425646, -0.02689981, -0.03718352, -0.00356159,  0.40873319,
          -0.05997870,  0.04627915, -0.05893224,  0.75172168, -0.04758421],
         [-0.02425646, -0.02689981, -0.03718352, -0.00356159,  0.40873319,
          -0.05997870,  0.04627915, -0.05893224,  0.75172168, -0.04758421]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.43298966,  0.43563300,  0.44591671,  0.41229478,  0.46871188,
           0.36245403,  0.46766543, -0.34298849,  0.45631739]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1339 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2086 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 220, vnnlib ID: 220 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
          8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
          2.06686556e-03,  9.99410272e-01]], device='cuda:0')
diversed PGD initialization time: 0.1228
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.10896747e-02, -3.06315869e-02, -1.76717788e-02, -7.36728311e-02,
          -1.96274370e-04,  3.23226526e-02,  1.12498924e-03, -5.05232066e-02,
           3.89402449e-01,  7.72546887e-01],
         [-3.10896747e-02, -3.06315869e-02, -1.76717788e-02, -7.36728311e-02,
          -1.96274370e-04,  3.23226526e-02,  1.12498924e-03, -5.05232066e-02,
           3.89402449e-01,  7.72546887e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.80363655, 0.80317849, 0.79021865, 0.84621972, 0.77274317,
          0.74022424, 0.77142191, 0.82307011, 0.38314444]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4011 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
          8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
          2.06686556e-03,  9.99410272e-01]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 48, 1, 9] with unstable size 47 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [47]; unstable size 47; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.14526278,  0.17771474,  0.13289350,  0.06243896, -0.04733416,
         -0.14999169,  0.10178643, -0.19158331, -0.21940130]], device='cuda:0') None
best_l after optimization: 0.19076400995254517
alpha/beta optimization time: 1.0788648128509521
initial alpha-crown bounds: tensor([[ 0.15946047,  0.18959232,  0.15848213,  0.11721914, -0.03201392,
         -0.14277902,  0.11965853, -0.16349468, -0.21536097]], device='cuda:0')
Worst class: (+ rhs) -0.21536096930503845
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.4164707660675
##### Instance 220 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15946047008037567.

Properties batch 1, size 1
Remaining timeout: 118.34290623664856
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.18959231674671173.

Properties batch 2, size 1
Remaining timeout: 118.27614307403564
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1584821343421936.

Properties batch 3, size 1
Remaining timeout: 118.20716786384583
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11721913516521454.

Properties batch 4, size 1
Remaining timeout: 118.13288640975952
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03201392]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
         8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
         2.06686556e-03,  9.99410272e-01], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03201392]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 9
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 123] 
split level 2: [/input.3, 149] 
split level 3: [/input.3, 18] 
split level 4: [/input.3, 57] 
split level 5: [/input, 236] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0069    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0074    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0114    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0232    set_bounds 0.0114    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05370330810546875


Properties batch 5, size 1
Remaining timeout: 117.98537373542786
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14277902]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
         8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
         2.06686556e-03,  9.99410272e-01], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14277902]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 9
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 57] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 55] 
split level 4: [/input, 236] 
split level 5: [/input.3, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.033348083496094e-05
Time: prepare 0.0065    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0045    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0136    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0136    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05206179618835449


Properties batch 6, size 1
Remaining timeout: 117.83741593360901
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11965852975845337.

Properties batch 7, size 1
Remaining timeout: 117.76747727394104
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16349468]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
         8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
         2.06686556e-03,  9.99410272e-01], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16349468]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 9
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 57] 
split level 2: [/input, 236] 
split level 3: [/input.3, 124] 
split level 4: [/input.3, 238] 
split level 5: [/input, 106] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.176399230957031e-05
Time: prepare 0.0065    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0045    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0113    solve 0.0136    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0113    solve 0.0136    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0523982048034668


Properties batch 8, size 1
Remaining timeout: 117.62456440925598
##### Instance 220 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21536097]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.81978941e-03,  1.37314945e-03, -1.75617635e-03,  7.69942999e-05,
         8.02099332e-03,  5.64098358e-03,  1.51980668e-04, -1.71111524e-03,
         2.06686556e-03,  9.99410272e-01], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21536097]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 9
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 57] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 150] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 30] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0035    bound 0.0047    transfer 0.0001    finalize 0.0018    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0041    bound 0.0047    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0230    set_bounds 0.0115    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0230    set_bounds 0.0115    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04922842979431152

Result: safe in 2.5188 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 221, vnnlib ID: 221 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
         -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
         -3.15752625e-03,  9.30946320e-03]], device='cuda:0')
diversed PGD initialization time: 0.1284
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02249894, -0.01247375, -0.01352088, -0.02407470, -0.01510995,
           0.55167675,  0.60211313, -0.02548571, -0.02695726, -0.01637991],
         [-0.02249894, -0.01247375, -0.01352088, -0.02407470, -0.01510995,
           0.55167675,  0.60211313, -0.02548571, -0.02695726, -0.01637991]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.62461209, 0.61458689, 0.61563402, 0.62618780, 0.61722308,
          0.05043638, 0.62759882, 0.62907040, 0.61849302]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4085 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
         -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
         -3.15752625e-03,  9.30946320e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 90, 1, 16] with unstable size 89 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [89]; unstable size 89; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 89] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.96243638, -0.78671181, -0.98787105, -1.05700731, -0.78159612,
         -1.68469286, -1.19000566, -1.63956177, -1.47534680]], device='cuda:0') None
best_l after optimization: -4.369665622711182
alpha/beta optimization time: 1.7414050102233887
initial alpha-crown bounds: tensor([[-0.32440233, -0.24880701, -0.31876403, -0.35047370, -0.30589381,
         -1.18047512, -0.36963484, -0.63911372, -0.63210106]], device='cuda:0')
Worst class: (+ rhs) -1.180475115776062
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.74900841712952
##### Instance 221 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32440233]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32440233]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 144] 
split level 2: [/input.3, 85] 
split level 3: [/input.3, 151] 
split level 4: [/input.3, 116] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.00873112678527832
Time: prepare 0.0035    bound 0.1952    transfer 0.0004    finalize 0.0024    func 0.2015    
Accumulated time: func 0.2015    prepare 0.0040    bound 0.1952    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.14844 (6), -0.03285 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0109    solve 0.2016    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0109    solve 0.2016    add 0.0009    
Current (lb-rhs): -0.14844000339508057
2 domains visited
Cumulative time: 0.24086689949035645

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] 
split level 1: [/input, 169] [/input, 169] 
split level 2: [/input, 5] [/input, 177] 
split level 3: [/input, 35] [/input, 150] 
split level 4: [/input, 177] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.2157    prepare 0.0117    bound 0.1997    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0007    decision 0.0213    set_bounds 0.0098    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0442    set_bounds 0.0207    solve 0.2159    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.287294864654541


Properties batch 1, size 1
Remaining timeout: 117.36070942878723
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24880701]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24880701]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 45] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.008814096450805664
Time: prepare 0.0036    bound 0.1956    transfer 0.0004    finalize 0.0025    func 0.2023    
Accumulated time: func 0.2023    prepare 0.0041    bound 0.1956    transfer 0.0004    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.09997 (6), -0.05946 (6), -0.00386 (6), 
length of domains: 3
Time: pickout 0.0005    decision 0.0227    set_bounds 0.0110    solve 0.2023    add 0.0010    
Accumulated time: pickout 0.0005    decision 0.0227    set_bounds 0.0110    solve 0.2023    add 0.0010    
Current (lb-rhs): -0.09997338056564331
3 domains visited
Cumulative time: 0.2417912483215332

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 69] 
split level 1: [/input, 169] [/input, 169] [/input, 169] 
split level 2: [/input, 35] [/input, 5] [/input, 177] 
split level 3: [/input, 150] [/input, 177] [/input, 150] 
split level 4: [/input.3, 236] [/input, 35] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 9.751319885253906e-05
Time: prepare 0.0133    bound 0.0060    transfer 0.0001    finalize 0.0043    func 0.0238    
Accumulated time: func 0.2261    prepare 0.0178    bound 0.2016    transfer 0.0005    finalize 0.0068    
length of domains: 0
Time: pickout 0.0006    decision 0.0228    set_bounds 0.0171    solve 0.0239    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0455    set_bounds 0.0281    solve 0.2262    add 0.0012    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.30674171447753906


Properties batch 2, size 1
Remaining timeout: 116.95806169509888
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31876403]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31876403]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 150] 
split level 5: [/input.3, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.008948802947998047
Time: prepare 0.0040    bound 0.1964    transfer 0.0004    finalize 0.0024    func 0.2034    
Accumulated time: func 0.2034    prepare 0.0045    bound 0.1964    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.16441 (6), -0.12885 (6), -0.07750 (6), -0.04727 (6), -0.01553 (6), -0.00833 (6), -0.00808 (6), 
length of domains: 7
Time: pickout 0.0005    decision 0.0238    set_bounds 0.0112    solve 0.2035    add 0.0010    
Accumulated time: pickout 0.0005    decision 0.0238    set_bounds 0.0112    solve 0.2035    add 0.0010    
Current (lb-rhs): -0.16441303491592407
7 domains visited
Cumulative time: 0.24434518814086914

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 102] [/input.3, 102] [/input.3, 102] [/input.3, 102] [/input.3, 102] [/input.3, 102] [/input.3, 102] 
split level 1: [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 169] [/input, 169] 
split level 2: [/input, 169] [/input, 169] [/input, 5] [/input, 169] [/input, 169] [/input, 177] [/input, 69] 

all verified at 10th iter
pruning_in_iteration open status: True
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.004318952560424805
Time: prepare 0.0067    bound 0.1049    transfer 0.0004    finalize 0.0031    func 0.1152    
Accumulated time: func 0.3186    prepare 0.0116    bound 0.3014    transfer 0.0008    finalize 0.0055    
length of domains: 0
Time: pickout 0.0008    decision 0.0251    set_bounds 0.0083    solve 0.1153    add 0.0001    
Accumulated time: pickout 0.0013    decision 0.0489    set_bounds 0.0195    solve 0.3188    add 0.0011    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.39435863494873047


Properties batch 3, size 1
Remaining timeout: 116.45346426963806
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35047370]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35047370]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 220] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.00888967514038086
Time: prepare 0.0036    bound 0.1974    transfer 0.0004    finalize 0.0024    func 0.2039    
Accumulated time: func 0.2039    prepare 0.0041    bound 0.1974    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.15342 (6), -0.09852 (6), -0.01008 (6), 
length of domains: 3
Time: pickout 0.0005    decision 0.0231    set_bounds 0.0110    solve 0.2039    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0231    set_bounds 0.0110    solve 0.2039    add 0.0009    
Current (lb-rhs): -0.1534176468849182
3 domains visited
Cumulative time: 0.24362993240356445

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 5] 
split level 1: [/input, 169] [/input, 5] [/input, 69] 
split level 2: [/input, 35] [/input, 169] [/input, 169] 
split level 3: [/input.3, 30] [/input, 177] [/input, 177] 
split level 4: [/input.3, 247] [/input.3, 247] [/input, 150] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0110    bound 0.0046    transfer 0.0001    finalize 0.0037    func 0.0195    
Accumulated time: func 0.2234    prepare 0.0156    bound 0.2020    transfer 0.0005    finalize 0.0061    
length of domains: 0
Time: pickout 0.0008    decision 0.0235    set_bounds 0.0153    solve 0.0196    add 0.0001    
Accumulated time: pickout 0.0013    decision 0.0466    set_bounds 0.0263    solve 0.2235    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.3032245635986328


Properties batch 4, size 1
Remaining timeout: 116.05385756492615
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30589381]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30589381]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009259462356567383
Time: prepare 0.0035    bound 0.2012    transfer 0.0004    finalize 0.0022    func 0.2075    
Accumulated time: func 0.2075    prepare 0.0041    bound 0.2012    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.12782 (6), -0.08978 (6), -0.04493 (6), -0.03152 (6), 
length of domains: 4
Time: pickout 0.0005    decision 0.0282    set_bounds 0.0112    solve 0.2076    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0282    set_bounds 0.0112    solve 0.2076    add 0.0008    
Current (lb-rhs): -0.12781569361686707
4 domains visited
Cumulative time: 0.2533454895019531

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 69] [/input, 69] 
split level 1: [/input, 169] [/input, 169] [/input, 169] [/input, 169] 
split level 2: [/input, 35] [/input, 5] [/input, 35] [/input, 5] 
split level 3: [/input, 150] [/input, 177] [/input.3, 150] [/input.3, 150] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.842613220214844e-05
Time: prepare 0.0074    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.2221    prepare 0.0120    bound 0.2058    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0231    set_bounds 0.0096    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0513    set_bounds 0.0208    solve 0.2223    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.3015906810760498


Properties batch 5, size 1
Remaining timeout: 115.64618062973022
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.18047512]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.18047512]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 197] 
split level 4: [/input, 5] 
split level 5: [/input, 169] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 64 = 0.8125
pruning-in-iteration extra time: 0.009702682495117188
Time: prepare 0.0067    bound 0.2118    transfer 0.0004    finalize 0.0029    func 0.2220    
Accumulated time: func 0.2220    prepare 0.0072    bound 0.2118    transfer 0.0004    finalize 0.0029    
Current worst splitting domains lb-rhs (depth):
-0.64216 (6), -0.61612 (6), -0.27423 (6), -0.16806 (6), -0.15351 (6), -0.13876 (6), -0.11462 (6), -0.08045 (6), -0.07602 (6), -0.06370 (6), -0.05337 (6), -0.03331 (6), 
length of domains: 12
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0115    solve 0.2220    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0115    solve 0.2220    add 0.0010    
Current (lb-rhs): -0.6421645879745483
12 domains visited
Cumulative time: 0.2618706226348877

BaB round 2
batch: 12
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] 
split level 1: [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] 
split level 2: [/input, 35] [/input, 35] [/input, 35] [/input, 150] [/input, 35] [/input, 35] [/input, 35] [/input.3, 195] [/input.3, 195] [/input.3, 195] 
pruning_in_iteration open status: True
ratio of positive domain = 93 / 96 = 0.96875
pruning-in-iteration extra time: 0.009369134902954102
Time: prepare 0.0108    bound 0.2071    transfer 0.0004    finalize 0.0054    func 0.2238    
Accumulated time: func 0.4457    prepare 0.0184    bound 0.4189    transfer 0.0008    finalize 0.0084    
Current worst splitting domains lb-rhs (depth):
-0.19789 (9), -0.17209 (9), -0.01888 (9), 
length of domains: 3
Time: pickout 0.0006    decision 0.0286    set_bounds 0.0135    solve 0.2240    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0514    set_bounds 0.0250    solve 0.4460    add 0.0020    
Current (lb-rhs): -0.19789326190948486
15 domains visited
Cumulative time: 0.5302431583404541

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] [/input.3, 217] [/input.3, 217] 
split level 1: [/input, 150] [/input, 150] [/input, 150] 
split level 2: [/input, 35] [/input.3, 28] [/input, 35] 
split level 3: [/input.3, 61] [/input, 35] [/input.3, 61] 
split level 4: [/input.3, 28] [/input.3, 61] [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 93 / 96 = 0.96875
pruning-in-iteration extra time: 0.00921320915222168
Time: prepare 0.0108    bound 0.2092    transfer 0.0003    finalize 0.0043    func 0.2249    
Accumulated time: func 0.6707    prepare 0.0297    bound 0.6281    transfer 0.0011    finalize 0.0127    
Current worst splitting domains lb-rhs (depth):
-0.04974 (14), -0.02835 (14), -0.01252 (14), 
length of domains: 3
Time: pickout 0.0006    decision 0.0231    set_bounds 0.0170    solve 0.2250    add 0.0009    
Accumulated time: pickout 0.0017    decision 0.0745    set_bounds 0.0420    solve 0.6710    add 0.0029    
Current (lb-rhs): -0.04973733425140381
18 domains visited
Cumulative time: 0.7977967262268066

BaB round 4
batch: 3
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 138] [/input, 138] 
split level 1: [/input, 245] [/input.3, 219] [/input.3, 219] 
split level 2: [/input.3, 219] [/input, 245] [/input, 245] 
split level 3: [/input.3, 144] [/input.3, 144] [/input.3, 144] 
split level 4: [/input.3, 184] [/input.3, 184] [/input.3, 184] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0110    bound 0.0045    transfer 0.0001    finalize 0.0034    func 0.0191    
Accumulated time: func 0.6897    prepare 0.0412    bound 0.6326    transfer 0.0012    finalize 0.0161    
length of domains: 0
Time: pickout 0.0008    decision 0.0230    set_bounds 0.0171    solve 0.0191    add 0.0001    
Accumulated time: pickout 0.0025    decision 0.0975    set_bounds 0.0591    solve 0.6902    add 0.0030    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18 domains visited
Cumulative time: 0.8582558631896973


Properties batch 6, size 1
Remaining timeout: 114.69363641738892
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36963484]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36963484]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 13] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.009344339370727539
Time: prepare 0.0036    bound 0.2019    transfer 0.0004    finalize 0.0025    func 0.2086    
Accumulated time: func 0.2086    prepare 0.0041    bound 0.2019    transfer 0.0004    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.22210 (6), -0.18441 (6), -0.18439 (6), -0.16737 (6), -0.13399 (6), -0.11383 (6), -0.10727 (6), -0.07052 (6), -0.05760 (6), 
length of domains: 9
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.2087    add 0.0011    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.2087    add 0.0011    
Current (lb-rhs): -0.2220977246761322
9 domains visited
Cumulative time: 0.24889063835144043

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] 
split level 1: [/input, 169] [/input, 169] [/input, 5] [/input, 169] [/input, 169] [/input, 169] [/input, 169] [/input, 169] [/input, 169] 
split level 2: [/input, 35] [/input, 5] [/input, 169] [/input, 35] [/input, 177] [/input, 177] [/input, 177] [/input, 177] [/input, 177] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 72 = 0.9861111111111112
pruning-in-iteration extra time: 0.00968027114868164
Time: prepare 0.0080    bound 0.2150    transfer 0.0003    finalize 0.0032    func 0.2266    
Accumulated time: func 0.4352    prepare 0.0126    bound 0.4169    transfer 0.0007    finalize 0.0057    
Current worst splitting domains lb-rhs (depth):
-0.00654 (9), 
length of domains: 1
Time: pickout 0.0006    decision 0.0270    set_bounds 0.0092    solve 0.2267    add 0.0007    
Accumulated time: pickout 0.0011    decision 0.0503    set_bounds 0.0203    solve 0.4354    add 0.0018    
Current (lb-rhs): -0.00653606653213501
10 domains visited
Cumulative time: 0.5135056972503662

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 177] 
split level 1: [/input, 5] 
split level 2: [/input, 150] 
split level 3: [/input.3, 217] 
split level 4: [/input.3, 53] 
split level 5: [/input.3, 69] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.726119995117188e-05
Time: prepare 0.0089    bound 0.0060    transfer 0.0001    finalize 0.0032    func 0.0182    
Accumulated time: func 0.4534    prepare 0.0220    bound 0.4229    transfer 0.0008    finalize 0.0088    
length of domains: 0
Time: pickout 0.0005    decision 0.0255    set_bounds 0.0164    solve 0.0183    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0758    set_bounds 0.0367    solve 0.4536    add 0.0019    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 0.5747115612030029


Properties batch 7, size 1
Remaining timeout: 114.02224016189575
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63911372]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63911372]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 162] 
split level 4: [/input.3, 30] 
split level 5: [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.009421348571777344
Time: prepare 0.0036    bound 0.2036    transfer 0.0003    finalize 0.0022    func 0.2099    
Accumulated time: func 0.2099    prepare 0.0041    bound 0.2036    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.19257 (6), -0.17722 (6), -0.08657 (6), -0.06091 (6), -0.05130 (6), -0.05118 (6), -0.02530 (6), -0.02266 (6), 
length of domains: 8
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0109    solve 0.2099    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0109    solve 0.2099    add 0.0008    
Current (lb-rhs): -0.19256502389907837
8 domains visited
Cumulative time: 0.24995827674865723

BaB round 2
batch: 8
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 69] [/input, 150] 
split level 1: [/input, 169] [/input, 177] [/input, 169] [/input, 150] [/input, 169] [/input, 150] [/input, 150] [/input, 69] 
split level 2: [/input, 5] [/input, 150] [/input, 177] [/input, 245] [/input, 177] [/input, 177] [/input, 169] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.319450378417969e-05
Time: prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.2240    prepare 0.0117    bound 0.2081    transfer 0.0005    finalize 0.0045    
length of domains: 0
Time: pickout 0.0006    decision 0.0264    set_bounds 0.0082    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0500    set_bounds 0.0191    solve 0.2242    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.2997763156890869


Properties batch 8, size 1
Remaining timeout: 113.61325240135193
##### Instance 221 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63210106]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.56382546e-02, -3.15297395e-03, -4.82499599e-05,  1.53399482e-02,
        -5.65004349e-03, -2.24555507e-02,  1.03117239e+00, -1.22106373e-02,
        -3.15752625e-03,  9.30946320e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63210106]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 16
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 79
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 159] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 144] 
split level 5: [/input.3, 26] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.009507417678833008
Time: prepare 0.0034    bound 0.2023    transfer 0.0003    finalize 0.0022    func 0.2084    
Accumulated time: func 0.2084    prepare 0.0040    bound 0.2023    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.25015 (6), -0.21484 (6), -0.21452 (6), -0.19556 (6), -0.18251 (6), -0.09578 (6), -0.09409 (6), -0.08246 (6), -0.05204 (6), 
length of domains: 9
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0107    solve 0.2084    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0107    solve 0.2084    add 0.0009    
Current (lb-rhs): -0.2501533627510071
9 domains visited
Cumulative time: 0.24799728393554688

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 69] [/input, 35] [/input, 69] [/input, 35] [/input, 69] [/input, 169] [/input, 35] [/input, 35] [/input, 35] 
split level 1: [/input, 169] [/input, 169] [/input, 169] [/input, 169] [/input, 169] [/input, 35] [/input, 169] [/input, 169] [/input, 169] 
split level 2: [/input, 177] [/input, 69] [/input, 35] [/input, 69] [/input, 5] [/input, 150] [/input, 150] [/input.3, 30] [/input, 69] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 72 = 0.9583333333333334
pruning-in-iteration extra time: 0.009194612503051758
Time: prepare 0.0083    bound 0.2071    transfer 0.0004    finalize 0.0032    func 0.2191    
Accumulated time: func 0.4274    prepare 0.0128    bound 0.4094    transfer 0.0006    finalize 0.0053    
Current worst splitting domains lb-rhs (depth):
-0.03592 (9), -0.01741 (9), -0.00065 (9), 
length of domains: 3
Time: pickout 0.0006    decision 0.0274    set_bounds 0.0091    solve 0.2191    add 0.0007    
Accumulated time: pickout 0.0011    decision 0.0507    set_bounds 0.0198    solve 0.4275    add 0.0016    
Current (lb-rhs): -0.03592085838317871
12 domains visited
Cumulative time: 0.5055239200592041

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 177] [/input, 150] [/input, 150] 
split level 1: [/input, 5] [/input, 5] [/input.3, 31] 
split level 2: [/input, 150] [/input.3, 31] [/input.3, 3] 
split level 3: [/input.3, 244] [/input.3, 3] [/input.3, 150] 
split level 4: [/input.3, 150] [/input.3, 150] [/input.3, 30] 

all verified at 7th iter
pruning_in_iteration open status: True
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 0.0031630992889404297
Time: prepare 0.0114    bound 0.0778    transfer 0.0003    finalize 0.0043    func 0.0939    
Accumulated time: func 0.5213    prepare 0.0246    bound 0.4873    transfer 0.0009    finalize 0.0097    
length of domains: 0
Time: pickout 0.0006    decision 0.0227    set_bounds 0.0169    solve 0.0940    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0734    set_bounds 0.0367    solve 0.5216    add 0.0017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.6403868198394775

Result: safe in 7.1221 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 222, vnnlib ID: 222 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.98766249e-04,  1.07797980e-03,  9.55496728e-03,  1.36043802e-02,
         -2.99071148e-03, -6.88885897e-03,  1.00116754e+00, -2.67963111e-03,
          1.06991455e-02,  8.50295275e-03]], device='cuda:0')
diversed PGD initialization time: 0.1262
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.56433338e-03,  3.35589796e-03,  1.36521012e-02,  1.48837194e-02,
          -1.60451606e-03, -6.99623674e-03,  9.87006903e-01, -6.17146492e-04,
           1.77896619e-02,  1.12748519e-02],
         [-2.56433338e-03,  3.35589796e-03,  1.36521012e-02,  1.48837194e-02,
          -1.60451606e-03, -6.99623674e-03,  9.87006903e-01, -6.17146492e-04,
           1.77896619e-02,  1.12748519e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98957121, 0.98365098, 0.97335482, 0.97212321, 0.98861140,
          0.99400312, 0.98762405, 0.96921724, 0.97573203]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4005 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-3.98766249e-04,  1.07797980e-03,  9.55496728e-03,  1.36043802e-02,
         -2.99071148e-03, -6.88885897e-03,  1.00116754e+00, -2.67963111e-03,
          1.06991455e-02,  8.50295275e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 8, 1, 13] with unstable size 7 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94050384, 0.95248365, 0.94019473, 0.93267721, 0.95083714, 0.94350988,
         0.85355777, 0.94046593, 0.93699133]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4969 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 223, vnnlib ID: 223 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00460084, -0.01504979, -0.00339065, -0.00270829, -0.03193946,
          1.03277671, -0.00286476, -0.03547087, -0.00983229, -0.00107653]],
       device='cuda:0')
diversed PGD initialization time: 0.1275
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.94744426e-03, -9.22285020e-03,  9.88364220e-04, -4.47399914e-04,
          -1.83719508e-02,  1.01854944e+00, -2.40046531e-04, -2.29446441e-02,
          -6.99716061e-03, -1.42577291e-03],
         [-3.94744426e-03, -9.22285020e-03,  9.88364220e-04, -4.47399914e-04,
          -1.83719508e-02,  1.01854944e+00, -2.40046531e-04, -2.29446441e-02,
          -6.99716061e-03, -1.42577291e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.02249694, 1.02777231, 1.01756108, 1.01899683, 1.03692138,
          1.01878953, 1.04149413, 1.02554655, 1.01997519]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4083 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00460084, -0.01504979, -0.00339065, -0.00270829, -0.03193946,
          1.03277671, -0.00286476, -0.03547087, -0.00983229, -0.00107653]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 3, 1, 18] with unstable size 2 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [2]; unstable size 2; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.00619435, 1.01161790, 0.99826247, 0.99367297, 1.02051091, 1.00235486,
         1.01944709, 1.00799239, 1.00002003]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5203 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 224, vnnlib ID: 224 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00171919, 0.00234618, 0.00780991, 0.00806610, 0.74923551, 0.01148967,
         0.00616215, 0.07062805, 0.01108272, 0.13114169]], device='cuda:0')
diversed PGD initialization time: 0.1270
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.32127218e-02,  2.04203278e-03,  3.01595032e-03,  9.30748880e-04,
           2.01428123e-02,  2.32241526e-02,  1.03979558e-03, -6.36337698e-03,
           5.36155701e-03,  9.68664885e-01],
         [-1.32127218e-02,  2.04203278e-03,  3.01595032e-03,  9.30748880e-04,
           2.01428123e-02,  2.32241526e-02,  1.03979558e-03, -6.36337698e-03,
           5.36155701e-03,  9.68664885e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.03335553,  0.01810078,  0.01712686,  0.01921206, -0.00308134,
           0.01910302,  0.02650619,  0.01478126, -0.94852209]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1347 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2018 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 225, vnnlib ID: 225 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00275302e+00, -7.60162622e-03, -1.69868767e-03, -1.00636035e-02,
         -2.70278752e-03,  7.34514743e-03, -3.13688815e-03, -1.14660859e-02,
          3.92325222e-04, -7.04842806e-03]], device='cuda:0')
diversed PGD initialization time: 0.1291
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.72091258e-01, -1.48138404e-03, -8.00140202e-03, -5.23842871e-03,
           3.08725983e-04,  2.15933919e-02, -2.87907198e-03, -3.99070978e-03,
           8.02109390e-03, -2.79754400e-04],
         [ 9.72091258e-01, -1.48138404e-03, -8.00140202e-03, -5.23842871e-03,
           3.08725983e-04,  2.15933919e-02, -2.87907198e-03, -3.99070978e-03,
           8.02109390e-03, -2.79754400e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97357261, 0.98009264, 0.97732967, 0.97178251, 0.95049787,
          0.97497034, 0.97608197, 0.96407014, 0.97237098]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4010 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00275302e+00, -7.60162622e-03, -1.69868767e-03, -1.00636035e-02,
         -2.70278752e-03,  7.34514743e-03, -3.13688815e-03, -1.14660859e-02,
          3.92325222e-04, -7.04842806e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 20, 1, 4] with unstable size 19 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.91547120, 0.87403965, 0.85900784, 0.92651731, 0.79378164, 0.93541586,
         0.90798038, 0.91407591, 0.91650367]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5504 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 226, vnnlib ID: 226 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00435413, -0.00140010, -0.00662673, -0.00216631,  0.00550166,
          0.00534461,  0.00195744,  0.95487487,  0.00621343,  0.00381257]],
       device='cuda:0')
diversed PGD initialization time: 0.1270
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.37910628, 0.01435655, 0.01854776, 0.02071550, 0.04669422,
          0.06812459, 0.01139214, 0.21328616, 0.02807648, 0.18741778],
         [0.37910628, 0.01435655, 0.01854776, 0.02071550, 0.04669422,
          0.06812459, 0.01139214, 0.21328616, 0.02807648, 0.18741778]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.16582012,  0.19892961,  0.19473840,  0.19257066,  0.16659194,
           0.14516157,  0.20189402,  0.18520968,  0.02586839]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1360 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 227, vnnlib ID: 227 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00503217,  0.00636431,  0.02366787,  0.02165502,  0.82774752,
          0.01724451,  0.00954917, -0.00584616,  0.01291375,  0.07575097]],
       device='cuda:0')
diversed PGD initialization time: 0.1273
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01463903, -0.00332539, -0.00947049, -0.04048856,  0.51909494,
          -0.01053675, -0.04119332,  0.01228306,  0.50601864,  0.07236154],
         [-0.01463903, -0.00332539, -0.00947049, -0.04048856,  0.51909494,
          -0.01053675, -0.04119332,  0.01228306,  0.50601864,  0.07236154]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.53373396, 0.52242035, 0.52856541, 0.55958349, 0.52963167,
          0.56028825, 0.50681186, 0.01307631, 0.44673342]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4062 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.00503217,  0.00636431,  0.02366787,  0.02165502,  0.82774752,
          0.01724451,  0.00954917, -0.00584616,  0.01291375,  0.07575097]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 31, 1, 10] with unstable size 30 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [30]; unstable size 30; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.09997038, -0.05859670, -0.03025042,  0.01400754, -0.00865459,
          0.07764497,  0.15087466, -0.90485179, -0.21511985]], device='cuda:0') None
best_l after optimization: 1.4024431705474854
alpha/beta optimization time: 1.0916001796722412
initial alpha-crown bounds: tensor([[ 0.28007925,  0.28500432,  0.22761449,  0.23525907,  0.23844872,
          0.25806874,  0.28317013, -0.28895575, -0.11624585]], device='cuda:0')
Worst class: (+ rhs) -0.2889557480812073
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.39646506309509
##### Instance 227 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2800792455673218.

Properties batch 1, size 1
Remaining timeout: 118.3232901096344
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28500431776046753.

Properties batch 2, size 1
Remaining timeout: 118.25376415252686
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22761449217796326.

Properties batch 3, size 1
Remaining timeout: 118.17907071113586
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2352590709924698.

Properties batch 4, size 1
Remaining timeout: 118.10887718200684
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.23844872415065765.

Properties batch 5, size 1
Remaining timeout: 118.03928446769714
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2580687403678894.

Properties batch 6, size 1
Remaining timeout: 117.97350740432739
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2831701338291168.

Properties batch 7, size 1
Remaining timeout: 117.90773034095764
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.28895575]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00503217,  0.00636431,  0.02366787,  0.02165502,  0.82774752,
         0.01724451,  0.00954917, -0.00584616,  0.01291375,  0.07575097],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28895575]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 10
Node /17 input 0: size torch.Size([256]) unstable 20
-----------------
# of unstable neurons: 30
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 150] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 206] 
split level 5: [/input.3, 189] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00887298583984375
Time: prepare 0.0035    bound 0.1931    transfer 0.0004    finalize 0.0023    func 0.1993    
Accumulated time: func 0.1993    prepare 0.0040    bound 0.1931    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.17424 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0110    solve 0.1993    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0110    solve 0.1993    add 0.0007    
Current (lb-rhs): -0.17423689365386963
1 domains visited
Cumulative time: 0.2392253875732422

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 198] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 159] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 216] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0075    bound 0.0046    transfer 0.0001    finalize 0.0025    func 0.0147    
Accumulated time: func 0.2140    prepare 0.0120    bound 0.1977    transfer 0.0005    finalize 0.0048    
length of domains: 0
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0119    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0486    set_bounds 0.0229    solve 0.2141    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29195547103881836


Properties batch 8, size 1
Remaining timeout: 117.52568006515503
##### Instance 227 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11624585]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.00503217,  0.00636431,  0.02366787,  0.02165502,  0.82774752,
         0.01724451,  0.00954917, -0.00584616,  0.01291375,  0.07575097],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11624585]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 10
Node /17 input 0: size torch.Size([256]) unstable 20
-----------------
# of unstable neurons: 30
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 89] 
split level 3: [/input.3, 159] 
split level 4: [/input.3, 189] 
split level 5: [/input.3, 30] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0036    bound 0.0048    transfer 0.0001    finalize 0.0018    func 0.0103    
Accumulated time: func 0.0103    prepare 0.0041    bound 0.0048    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0241    set_bounds 0.0111    solve 0.0104    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0241    set_bounds 0.0111    solve 0.0104    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05051755905151367

Result: safe in 2.6216 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 228, vnnlib ID: 228 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00378382e+00, -2.36257762e-02,  1.90775096e-03, -1.60321891e-02,
         -1.87617503e-02, -1.01588666e-04,  1.09992996e-02, -2.67864019e-02,
         -3.34021449e-03, -1.55052394e-02]], device='cuda:0')
diversed PGD initialization time: 0.1638
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.98449147, -0.05050446,  0.11331723, -0.04433818, -0.01953162,
          -0.00835910,  0.00285424,  0.01606213, -0.01786410, -0.03311652],
         [ 0.98449147, -0.05050446,  0.11331723, -0.04433818, -0.01953162,
          -0.00835910,  0.00285424,  0.01606213, -0.01786410, -0.03311652]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03499591, 0.87117422, 1.02882969, 1.00402308, 0.99285054,
          0.98163724, 0.96842933, 1.00235558, 1.01760793]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4874 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00378382e+00, -2.36257762e-02,  1.90775096e-03, -1.60321891e-02,
         -1.87617503e-02, -1.01588666e-04,  1.09992996e-02, -2.67864019e-02,
         -3.34021449e-03, -1.55052394e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 11, 1, 9] with unstable size 10 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.98930728, 0.79695988, 0.97200602, 0.97870606, 0.96941960, 0.94989169,
         0.86903775, 0.97371370, 0.96824723]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 229, vnnlib ID: 229 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.54491141e-03,  9.26835299e-01,  7.11648166e-03,  3.81474197e-03,
          1.76649541e-04, -9.54739749e-04,  9.19913501e-03,  1.42569616e-02,
          7.04587251e-03,  6.05869293e-03]], device='cuda:0')
diversed PGD initialization time: 0.1491
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01392810,  0.44211566,  0.02128062, -0.04816984,  0.01288263,
           0.01436155, -0.02960482,  0.05069017,  0.52190411, -0.00290408],
         [-0.01392810,  0.44211566,  0.02128062, -0.04816984,  0.01288263,
           0.01436155, -0.02960482,  0.05069017,  0.52190411, -0.00290408]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.45604375,  0.42083505,  0.49028552,  0.42923304,  0.42775410,
           0.47172049,  0.39142549, -0.07978845,  0.44501975]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1574 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2174 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 230, vnnlib ID: 230 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01406806, -0.00899558,  0.01083744,  0.97255433, -0.03704191,
          0.03242222, -0.00409599, -0.02320276, -0.00133399,  0.00128387]],
       device='cuda:0')
diversed PGD initialization time: 0.1370
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01825562, -0.01254624,  0.02206278,  0.95108557, -0.04839805,
           0.04261347, -0.00199893, -0.03270239,  0.00192673,  0.00264202],
         [-0.01825562, -0.01254624,  0.02206278,  0.95108557, -0.04839805,
           0.04261347, -0.00199893, -0.03270239,  0.00192673,  0.00264202]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.96934122, 0.96363181, 0.92902279, 0.99948364, 0.90847212,
          0.95308453, 0.98378795, 0.94915885, 0.94844353]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4452 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01406806, -0.00899558,  0.01083744,  0.97255433, -0.03704191,
          0.03242222, -0.00409599, -0.02320276, -0.00133399,  0.00128387]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 13] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.92424804, 0.89034104, 0.89636981, 0.93991929, 0.88815141, 0.91299874,
         0.93567884, 0.90825409, 0.90803427]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5549 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 231, vnnlib ID: 231 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.85936958e-03,  8.71188998e-01, -4.62830067e-05, -6.35135174e-03,
          8.88260454e-03,  4.24441881e-02,  1.67564936e-02,  5.16356081e-02,
          8.68151337e-03,  5.99524379e-03]], device='cuda:0')
diversed PGD initialization time: 0.1413
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02586523,  0.31004831, -0.00366108, -0.09413739,  0.06577095,
           0.12413860, -0.00645068,  0.04797754,  0.59020829, -0.02844353],
         [-0.02586523,  0.31004831, -0.00366108, -0.09413739,  0.06577095,
           0.12413860, -0.00645068,  0.04797754,  0.59020829, -0.02844353]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33591354,  0.31370938,  0.40418571,  0.24427736,  0.18590972,
           0.31649899,  0.26207078, -0.28015998,  0.33849186]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1543 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2473 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 232, vnnlib ID: 232 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.05444491e-02, -7.56034255e-03,  7.11382926e-03,  9.86696362e-01,
         -3.06216963e-02,  1.56643316e-02, -4.28701565e-03, -2.17741281e-02,
         -9.15199518e-04,  1.45175308e-03]], device='cuda:0')
diversed PGD initialization time: 0.1274
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.19447634e-02, -4.35172766e-03,  6.96031749e-03,  9.67341185e-01,
          -1.76658966e-02,  4.86617945e-02, -1.07834488e-02, -2.08641738e-02,
          -2.23107636e-03, -6.96629286e-05],
         [-1.19447634e-02, -4.35172766e-03,  6.96031749e-03,  9.67341185e-01,
          -1.76658966e-02,  4.86617945e-02, -1.07834488e-02, -2.08641738e-02,
          -2.23107636e-03, -6.96629286e-05]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97928596, 0.97169292, 0.96038085, 0.98500711, 0.91867942,
          0.97812462, 0.98820537, 0.96957225, 0.96741086]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4091 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.05444491e-02, -7.56034255e-03,  7.11382926e-03,  9.86696362e-01,
         -3.06216963e-02,  1.56643316e-02, -4.28701565e-03, -2.17741281e-02,
         -9.15199518e-04,  1.45175308e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 18, 1, 15] with unstable size 17 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.56880677, 0.55733538, 0.49607518, 0.57682610, 0.26070145, 0.54320216,
         0.54527259, 0.55634999, 0.54144323]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4997 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 233, vnnlib ID: 233 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00502498,  0.00295632,  0.01299980,  0.00387610,  0.94082850,
          0.00411189,  0.00259487, -0.02212003,  0.00338046,  0.00351942]],
       device='cuda:0')
diversed PGD initialization time: 0.1279
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.45939806e-01,  4.96879220e-05, -1.34920478e-02,  4.39839065e-03,
           9.50320065e-01, -3.44996676e-02, -7.66902864e-02, -3.40125710e-02,
          -8.89546424e-03, -6.68711364e-02],
         [ 2.45939806e-01,  4.96879220e-05, -1.34920478e-02,  4.39839065e-03,
           9.50320065e-01, -3.44996676e-02, -7.66902864e-02, -3.40125710e-02,
          -8.89546424e-03, -6.68711364e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.70438027, 0.95027035, 0.96381211, 0.94592166, 0.98481971,
          1.02701032, 0.98433262, 0.95921552, 1.01719117]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3987 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00502498,  0.00295632,  0.01299980,  0.00387610,  0.94082850,
          0.00411189,  0.00259487, -0.02212003,  0.00338046,  0.00351942]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 19, 1, 9] with unstable size 18 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.14481208, 0.50907063, 0.43130058, 0.48074436, 0.47129679, 0.50543958,
         0.40597212, 0.50805497, 0.54136670]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4894 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 234, vnnlib ID: 234 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.22644681e-04,  2.66960263e-03, -5.41834533e-03, -1.50557160e-02,
          1.21480972e-03, -4.23464924e-03, -4.18354571e-03,  1.00365269e+00,
         -1.33452564e-03, -8.76572728e-03]], device='cuda:0')
diversed PGD initialization time: 0.1258
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04763366, -0.06329171,  0.72711301,  0.06350156, -0.02575880,
          -0.05057224, -0.01167879,  0.45485574, -0.03182029, -0.05102035],
         [-0.04763366, -0.06329171,  0.72711301,  0.06350156, -0.02575880,
          -0.05057224, -0.01167879,  0.45485574, -0.03182029, -0.05102035]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.50248939,  0.51814747, -0.27225727,  0.39135417,  0.48061454,
           0.50542796,  0.46653453,  0.48667604,  0.50587606]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1350 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2226 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 235, vnnlib ID: 235 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00990874, -0.02443600,  1.02235425, -0.01011245, -0.00349946,
          0.00327014, -0.01096580, -0.02338848, -0.00236575, -0.01094936]],
       device='cuda:0')
diversed PGD initialization time: 0.1305
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.59119442e-03, -1.13169104e-02,  9.91775990e-01, -7.11274147e-03,
           5.53580001e-03,  3.67331505e-03, -7.94513524e-03, -1.31879747e-02,
           1.57281011e-03, -3.79726291e-04],
         [-1.59119442e-03, -1.13169104e-02,  9.91775990e-01, -7.11274147e-03,
           5.53580001e-03,  3.67331505e-03, -7.94513524e-03, -1.31879747e-02,
           1.57281011e-03, -3.79726291e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99336720, 1.00309289, 0.99888873, 0.98624021, 0.98810267,
          0.99972111, 1.00496399, 0.99020320, 0.99215573]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4088 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00990874, -0.02443600,  1.02235425, -0.01011245, -0.00349946,
          0.00327014, -0.01096580, -0.02338848, -0.00236575, -0.01094936]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 10, 1, 9] with unstable size 9 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.90980506, 0.91117227, 0.90112376, 0.90908587, 0.82204646, 0.91852397,
         0.92917013, 0.91243029, 0.91318655]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5109 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 236, vnnlib ID: 236 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.64967403e-03,  1.19650364e-02,  3.69789898e-02, -9.60128009e-03,
         -8.84678587e-03,  3.52694094e-03,  1.08875334e-03,  9.53385293e-01,
         -2.50712037e-05, -2.16508061e-02]], device='cuda:0')
diversed PGD initialization time: 0.1345
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04777351,  0.06317846,  0.64706230,  0.00386157, -0.02275567,
           0.01037025, -0.00612897,  0.31622326, -0.03591035, -0.01281277],
         [-0.04777351,  0.06317846,  0.64706230,  0.00386157, -0.02275567,
           0.01037025, -0.00612897,  0.31622326, -0.03591035, -0.01281277]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.36399677,  0.25304478, -0.33083904,  0.31236169,  0.33897895,
           0.30585301,  0.32235223,  0.35213363,  0.32903603]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1435 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2088 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 237, vnnlib ID: 237 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
          2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
          2.62393802e-03,  4.84780967e-03]], device='cuda:0')
diversed PGD initialization time: 0.1320
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03245500,  0.55448532,  0.00816081, -0.05708739,  0.00827620,
           0.00260849, -0.03946369,  0.04466365,  0.50035727, -0.01508826],
         [-0.03245500,  0.55448532,  0.00816081, -0.05708739,  0.00827620,
           0.00260849, -0.03946369,  0.04466365,  0.50035727, -0.01508826]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.58694035, 0.54632449, 0.61157274, 0.54620910, 0.55187684,
          0.59394902, 0.50982165, 0.05412805, 0.56957358]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4276 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
          2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
          2.62393802e-03,  4.84780967e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 67, 1, 22] with unstable size 66 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [66]; unstable size 66; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 66] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.21024925, -0.26168346, -0.74864119, -0.23573050, -0.61310917,
         -0.20608738, -0.43384239, -1.09126437, -0.47078639]], device='cuda:0') None
best_l after optimization: -0.4453527331352234
alpha/beta optimization time: 1.6992762088775635
initial alpha-crown bounds: tensor([[ 0.18576595,  0.12004170, -0.35099021,  0.11704060, -0.15538540,
          0.13589486, -0.01095709, -0.57635140,  0.08958828]], device='cuda:0')
Worst class: (+ rhs) -0.5763514041900635
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.779132604599
##### Instance 237 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.18576595187187195.

Properties batch 1, size 1
Remaining timeout: 117.70627212524414
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12004169821739197.

Properties batch 2, size 1
Remaining timeout: 117.63962984085083
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35099021]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
         2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
         2.62393802e-03,  4.84780967e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35099021]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 67
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 220] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 236] 
split level 5: [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.008945465087890625
Time: prepare 0.0035    bound 0.1957    transfer 0.0003    finalize 0.0023    func 0.2018    
Accumulated time: func 0.2018    prepare 0.0040    bound 0.1957    transfer 0.0003    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.13051 (6), -0.02742 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.2019    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.2019    add 0.0008    
Current (lb-rhs): -0.13051259517669678
2 domains visited
Cumulative time: 0.24150753021240234

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 103] [/input, 103] 
split level 1: [/input, 209] [/input, 138] 
split level 2: [/input, 171] [/input, 209] 
split level 3: [/input, 3] [/input, 171] 
split level 4: [/input.3, 43] [/input, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.441375732421875e-05
Time: prepare 0.0079    bound 0.0054    transfer 0.0001    finalize 0.0028    func 0.0163    
Accumulated time: func 0.2181    prepare 0.0123    bound 0.2012    transfer 0.0004    finalize 0.0051    
length of domains: 0
Time: pickout 0.0006    decision 0.0218    set_bounds 0.0108    solve 0.0163    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0450    set_bounds 0.0218    solve 0.2182    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.29154014587402344


Properties batch 3, size 1
Remaining timeout: 117.25703835487366
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11704060435295105.

Properties batch 4, size 1
Remaining timeout: 117.18296885490417
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15538540]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
         2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
         2.62393802e-03,  4.84780967e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15538540]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 67
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 197] 
split level 3: [/input.3, 55] 
split level 4: [/input.3, 217] 
split level 5: [/input.3, 28] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.295608520507812e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0041    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0112    solve 0.0101    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0112    solve 0.0101    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04940676689147949


Properties batch 5, size 1
Remaining timeout: 117.03710794448853
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13589486479759216.

Properties batch 6, size 1
Remaining timeout: 116.9661192893982
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01095709]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
         2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
         2.62393802e-03,  4.84780967e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01095709]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 67
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 126] 
split level 2: [/input.3, 43] 
split level 3: [/input.3, 124] 
split level 4: [/input.3, 13] 
split level 5: [/input.3, 217] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0034    bound 0.0045    transfer 0.0001    finalize 0.0017    func 0.0098    
Accumulated time: func 0.0098    prepare 0.0039    bound 0.0045    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0106    solve 0.0099    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0106    solve 0.0099    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04829263687133789


Properties batch 7, size 1
Remaining timeout: 116.82597041130066
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57635140]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.88296863e-03,  9.25934434e-01, -5.50746918e-05, -1.91698223e-03,
         2.35434994e-03,  1.77830234e-02,  6.38928264e-03,  2.79463083e-02,
         2.62393802e-03,  4.84780967e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57635140]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 45
-----------------
# of unstable neurons: 67
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 43] 
split level 5: [/input, 198] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009367704391479492
Time: prepare 0.0066    bound 0.2062    transfer 0.0004    finalize 0.0031    func 0.2164    
Accumulated time: func 0.2164    prepare 0.0071    bound 0.2062    transfer 0.0004    finalize 0.0031    
Current worst splitting domains lb-rhs (depth):
-0.20272 (6), -0.07362 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.2165    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.2165    add 0.0008    
Current (lb-rhs): -0.20272386074066162
2 domains visited
Cumulative time: 0.256439208984375

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 216] [/input, 216] 
split level 1: [/input, 3] [/input, 3] 
split level 2: [/input, 188] [/input, 188] 
split level 3: [/input.3, 217] [/input.3, 217] 
split level 4: [/input.3, 21] [/input.3, 21] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008260488510131836
Time: prepare 0.0073    bound 0.1755    transfer 0.0003    finalize 0.0031    func 0.1862    
Accumulated time: func 0.4026    prepare 0.0148    bound 0.3817    transfer 0.0007    finalize 0.0061    
Current worst splitting domains lb-rhs (depth):
-0.02140 (11), 
length of domains: 1
Time: pickout 0.0007    decision 0.0223    set_bounds 0.0115    solve 0.1863    add 0.0007    
Accumulated time: pickout 0.0011    decision 0.0455    set_bounds 0.0226    solve 0.4028    add 0.0016    
Current (lb-rhs): -0.021398425102233887
3 domains visited
Cumulative time: 0.47843146324157715

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 121] 
split level 1: [/input.3, 187] 
split level 2: [/input.3, 22] 
split level 3: [/input.3, 28] 
split level 4: [/input.3, 55] 
split level 5: [/input.3, 126] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.152557373046875e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0145    
Accumulated time: func 0.4172    prepare 0.0226    bound 0.3864    transfer 0.0008    finalize 0.0086    
length of domains: 0
Time: pickout 0.0006    decision 0.0244    set_bounds 0.0111    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0699    set_bounds 0.0337    solve 0.4174    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.5294876098632812


Properties batch 8, size 1
Remaining timeout: 116.19819831848145
##### Instance 237 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08958828449249268.
Result: safe in 3.8768 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 238, vnnlib ID: 238 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00531381, 0.08326200, 0.70808184, 0.03354600, 0.01339049, 0.03221024,
         0.00836618, 0.02311210, 0.02842065, 0.02494929]], device='cuda:0')
diversed PGD initialization time: 0.1376
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00671142,  0.02566797,  0.02018715,  0.92447925, -0.00538828,
          -0.06333435,  0.01673546,  0.00803176,  0.01630660,  0.01324470],
         [ 0.00671142,  0.02566797,  0.02018715,  0.92447925, -0.00538828,
          -0.06333435,  0.01673546,  0.00803176,  0.01630660,  0.01324470]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01347573, -0.00548081, -0.90429211,  0.02557543,  0.08352151,
           0.00345169,  0.01215540,  0.00388055,  0.00694245]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1465 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2371 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 239, vnnlib ID: 239 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.02861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.007152661681175232, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.52928585e-04,  9.70695734e-01,  2.45571136e-03, -2.01679021e-03,
         -3.99880856e-03, -3.59788537e-04,  1.22624636e-03,  4.72927094e-03,
         -4.40827757e-03, -7.13564456e-04]], device='cuda:0')
diversed PGD initialization time: 0.1261
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02545508,  0.87458199, -0.01192540, -0.03493308, -0.01394128,
          -0.05443003, -0.06414743, -0.01048225,  0.32201469, -0.00492553],
         [-0.02545508,  0.87458199, -0.01192540, -0.03493308, -0.01394128,
          -0.05443003, -0.06414743, -0.01048225,  0.32201469, -0.00492553]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.90003705, 0.88650739, 0.90951508, 0.88852328, 0.92901200,
          0.93872941, 0.88506424, 0.55256730, 0.87950754]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4060 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.52928585e-04,  9.70695734e-01,  2.45571136e-03, -2.01679021e-03,
         -3.99880856e-03, -3.59788537e-04,  1.22624636e-03,  4.72927094e-03,
         -4.40827757e-03, -7.13564456e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 47, 1, 22] with unstable size 46 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [46]; unstable size 46; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.26065147,  0.11429214, -0.36821094,  0.22161204, -0.00578710,
          0.16143519,  0.00926471, -0.97214758,  0.00137514]], device='cuda:0') None
best_l after optimization: 3.3740572929382324
alpha/beta optimization time: 1.42830491065979
initial alpha-crown bounds: tensor([[ 0.54760510,  0.47891527,  0.05666006,  0.53420496,  0.41631520,
          0.52279568,  0.43997639, -0.07043591,  0.44802028]], device='cuda:0')
Worst class: (+ rhs) -0.07043591141700745
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.05900263786316
##### Instance 239 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5476050972938538.

Properties batch 1, size 1
Remaining timeout: 117.98757290840149
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.478915274143219.

Properties batch 2, size 1
Remaining timeout: 117.92132949829102
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05666005611419678.

Properties batch 3, size 1
Remaining timeout: 117.85551357269287
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5342049598693848.

Properties batch 4, size 1
Remaining timeout: 117.79122138023376
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4163151979446411.

Properties batch 5, size 1
Remaining timeout: 117.72589683532715
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5227956771850586.

Properties batch 6, size 1
Remaining timeout: 117.66078662872314
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.43997639417648315.

Properties batch 7, size 1
Remaining timeout: 117.59329199790955
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07043591]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.52928585e-04,  9.70695734e-01,  2.45571136e-03, -2.01679021e-03,
        -3.99880856e-03, -3.59788537e-04,  1.22624636e-03,  4.72927094e-03,
        -4.40827757e-03, -7.13564456e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07043591]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 35
-----------------
# of unstable neurons: 57
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 150] 
split level 1: [/input.3, 63] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 206] 
split level 5: [/input.3, 43] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.106231689453125e-05
Time: prepare 0.0038    bound 0.0055    transfer 0.0001    finalize 0.0018    func 0.0115    
Accumulated time: func 0.0115    prepare 0.0044    bound 0.0055    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0255    set_bounds 0.0115    solve 0.0115    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0255    set_bounds 0.0115    solve 0.0115    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05370903015136719


Properties batch 8, size 1
Remaining timeout: 117.39954829216003
##### Instance 239 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4480202794075012.
Result: safe in 2.6823 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 240, vnnlib ID: 240 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.02771151, 0.01291575, 0.29145297, 0.06561913, 0.01940026, 0.04570694,
         0.02460428, 0.40930647, 0.03732879, 0.02860988]], device='cuda:0')
diversed PGD initialization time: 0.1437
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.51898688, -0.04108065,  0.06354760, -0.01008312, -0.00640667,
          -0.00360792, -0.00077958,  0.07042888,  0.39016506, -0.00491676],
         [ 0.51898688, -0.04108065,  0.06354760, -0.01008312, -0.00640667,
          -0.00360792, -0.00077958,  0.07042888,  0.39016506, -0.00491676]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.44855800,  0.11150953,  0.00688128,  0.08051200,  0.07683554,
           0.07403680,  0.07120845, -0.31973618,  0.07534564]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1544 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2380 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 241, vnnlib ID: 241 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.77296180e-03, -2.71504074e-02,  1.01981390e+00,  6.69792295e-03,
          7.10256398e-04, -1.06703937e-02, -1.11115649e-02, -1.92614943e-02,
         -9.76942480e-04, -9.58033651e-03]], device='cuda:0')
diversed PGD initialization time: 0.1313
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.02410167, -0.05487475,  0.59691733,  0.66222990, -0.00947485,
          -0.18399546,  0.03442799, -0.10991848,  0.00972380, -0.00773237],
         [ 0.02410167, -0.05487475,  0.59691733,  0.66222990, -0.00947485,
          -0.18399546,  0.03442799, -0.10991848,  0.00972380, -0.00773237]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.57281566,  0.65179205, -0.06531256,  0.60639220,  0.78091276,
           0.56248933,  0.70683581,  0.58719355,  0.60464972]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1430 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1968 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 242, vnnlib ID: 242 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00483028, 0.83210415, 0.02992879, 0.01947534, 0.00132961, 0.02263322,
         0.00340284, 0.01529434, 0.01878582, 0.02800449]], device='cuda:0')
diversed PGD initialization time: 0.1253
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01282130,  0.12771785, -0.04445212, -0.06969449,  0.15555423,
          -0.02712224, -0.05967456,  0.22802605,  0.63736570,  0.04132654],
         [-0.01282130,  0.12771785, -0.04445212, -0.06969449,  0.15555423,
          -0.02712224, -0.05967456,  0.22802605,  0.63736570,  0.04132654]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.14053915,  0.17216997,  0.19741234, -0.02783638,  0.15484008,
           0.18739241, -0.10030819, -0.50964785,  0.08639131]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1355 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2102 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 243, vnnlib ID: 243 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00118732e+00, -1.20548978e-02,  1.71443820e-03, -1.03550404e-02,
         -7.31433555e-03,  7.67626613e-03,  2.40911916e-03, -1.78902596e-02,
          3.05391848e-04, -9.98085737e-03]], device='cuda:0')
diversed PGD initialization time: 0.1346
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.91593057, -0.00523525,  0.03480810, -0.01645510,  0.00780839,
           0.00771679, -0.01593717, -0.02248336,  0.00466209,  0.06083092],
         [ 0.91593057, -0.00523525,  0.03480810, -0.01645510,  0.00780839,
           0.00771679, -0.01593717, -0.02248336,  0.00466209,  0.06083092]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92116582, 0.88112247, 0.93238568, 0.90812218, 0.90821379,
          0.93186772, 0.93841392, 0.91126847, 0.85509962]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4261 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00118732e+00, -1.20548978e-02,  1.71443820e-03, -1.03550404e-02,
         -7.31433555e-03,  7.67626613e-03,  2.40911916e-03, -1.78902596e-02,
          3.05391848e-04, -9.98085737e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 43, 1, 9] with unstable size 42 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [42]; unstable size 42; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.33852804, -0.01690093,  0.15127453,  0.29184651,  0.06058437,
          0.30888087,  0.26130447,  0.32237852,  0.13342847]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 2.0460152626037598
alpha/beta optimization time: 0.02093362808227539
initial alpha-crown bounds: tensor([[0.35201475, 0.00259450, 0.17454702, 0.30622116, 0.09111419, 0.32210547,
         0.28786853, 0.35044068, 0.15910880]], device='cuda:0')
Worst class: (+ rhs) 0.002594500780105591
verified with init bound!
Result: safe-incomplete in 0.5486 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 244, vnnlib ID: 244 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00635907, 0.01186079, 0.02831034, 0.02232751, 0.71741426, 0.01521704,
         0.01185275, 0.06221925, 0.01420029, 0.10569803]], device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.18690115e-04,  5.13609499e-03,  1.75408572e-02,  7.09026307e-03,
          -1.46273263e-02,  1.05308369e-02,  4.88739461e-04, -1.85130239e-02,
           1.39801353e-02,  9.80617046e-01],
         [ 9.18690115e-04,  5.13609499e-03,  1.75408572e-02,  7.09026307e-03,
          -1.46273263e-02,  1.05308369e-02,  4.88739461e-04, -1.85130239e-02,
           1.39801353e-02,  9.80617046e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01554602, -0.01976342, -0.03216818, -0.02171759, -0.02515816,
          -0.01511607,  0.00388570, -0.02860746, -0.99524438]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2311 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 245, vnnlib ID: 245 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.81605190e-04,  9.76758122e-01, -1.14715099e-03, -5.41394949e-03,
         -5.82773611e-03,  3.02265584e-03, -4.84427065e-03,  8.62464309e-04,
          2.62667984e-03,  1.20746568e-02]], device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00172422,  0.34477043,  0.00155871, -0.04161480, -0.01390332,
          -0.01095027, -0.05178750,  0.07444064,  0.65110785,  0.00465324],
         [ 0.00172422,  0.34477043,  0.00155871, -0.04161480, -0.01390332,
          -0.01095027, -0.05178750,  0.07444064,  0.65110785,  0.00465324]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.34304622,  0.34321171,  0.38638523,  0.35867375,  0.35572070,
           0.39655793,  0.27032977, -0.30633742,  0.34011719]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1353 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2035 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 246, vnnlib ID: 246 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00243866, -0.00649197,  0.00349671, -0.00432061,  0.88758683,
          0.03870546,  0.01036246,  0.00259495,  0.00930382,  0.04693048]],
       device='cuda:0')
diversed PGD initialization time: 0.1263
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1353 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2138 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 247, vnnlib ID: 247 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00307890,  0.01241608,  0.03682579,  0.00641291, -0.04927442,
          0.01188473,  0.00794633, -0.03767262,  0.00982650,  0.99021244]],
       device='cuda:0')
diversed PGD initialization time: 0.1262
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03576894, -0.03158190,  0.03035583, -0.02853446, -0.00982383,
          -0.00981601,  0.03120299, -0.00385620,  1.02496290, -0.00225247],
         [-0.03576894, -0.03158190,  0.03035583, -0.02853446, -0.00982383,
          -0.00981601,  0.03120299, -0.00385620,  1.02496290, -0.00225247]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.03351646,  0.02932943, -0.03260830,  0.02628198,  0.00757136,
           0.00756353, -0.03345547,  0.00160372, -1.02721536]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1342 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2013 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 248, vnnlib ID: 248 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.02113683,  0.01135266,  0.02949235, -0.01253611,  0.00400805,
          0.66332239,  0.19199695,  0.01207868,  0.04333086,  0.02594250]],
       device='cuda:0')
diversed PGD initialization time: 0.1280
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.16716084e-03,  2.23689526e-03,  1.24413967e-02, -3.20126116e-03,
          -5.25247306e-04,  6.86240941e-02,  8.89297485e-01,  9.07585025e-04,
           2.38109380e-02,  1.40374601e-02],
         [ 9.16716084e-03,  2.23689526e-03,  1.24413967e-02, -3.20126116e-03,
          -5.25247306e-04,  6.86240941e-02,  8.89297485e-01,  9.07585025e-04,
           2.38109380e-02,  1.40374601e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.05945693,  0.06638720,  0.05618270,  0.07182536,  0.06914935,
          -0.82067341,  0.06771651,  0.04481316,  0.05458663]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1370 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 249, vnnlib ID: 249 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.42741948e-03,  2.76811421e-04, -1.53300166e-03,  6.69911504e-04,
          7.52924010e-03,  6.89794868e-03,  1.64240226e-03, -4.72719967e-03,
          4.46880609e-03,  9.96892810e-01]], device='cuda:0')
diversed PGD initialization time: 0.1247
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02556447, -0.06346071, -0.00270236, -0.10379598,  0.00162478,
           0.05149806,  0.00614007, -0.02653037,  0.61570334,  0.55329657],
         [-0.02556447, -0.06346071, -0.00270236, -0.10379598,  0.00162478,
           0.05149806,  0.00614007, -0.02653037,  0.61570334,  0.55329657]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.57886106,  0.61675727,  0.55599892,  0.65709257,  0.55167180,
           0.50179851,  0.54715651,  0.57982695, -0.06240678]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1328 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1998 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 250, vnnlib ID: 250 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00368392, -0.01078733,  0.00164433, -0.00614631, -0.00853330,
         -0.00964666, -0.00709356, -0.01323475,  0.00120326, -0.00763986]],
       device='cuda:0')
diversed PGD initialization time: 0.1262
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.89986837e-01, -3.51443887e-04,  1.22021586e-02,  4.00082767e-03,
           2.03421339e-03, -1.95657089e-02, -1.27825439e-02, -2.09195912e-03,
           2.01997906e-03, -1.05039030e-03],
         [ 9.89986837e-01, -3.51443887e-04,  1.22021586e-02,  4.00082767e-03,
           2.03421339e-03, -1.95657089e-02, -1.27825439e-02, -2.09195912e-03,
           2.01997906e-03, -1.05039030e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.99033827, 0.97778469, 0.98598599, 0.98795265, 1.00955260,
          1.00276935, 0.99207878, 0.98796684, 0.99103725]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4183 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00368392, -0.01078733,  0.00164433, -0.00614631, -0.00853330,
         -0.00964666, -0.00709356, -0.01323475,  0.00120326, -0.00763986]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 5, 1, 7] with unstable size 4 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94992119, 0.93255651, 0.94058925, 0.95333266, 0.96259010, 0.96991152,
         0.94527936, 0.95040864, 0.95161474]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4970 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 251, vnnlib ID: 251 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.18696520e-03, -4.46036458e-04,  5.56391478e-03,  7.82869756e-03,
         -2.99296901e-03, -1.32469088e-03,  1.00299323e+00, -2.54845619e-03,
          2.96919048e-03,  5.27416915e-03]], device='cuda:0')
diversed PGD initialization time: 0.1396
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.32143104,  0.01857392,  0.02731174,  0.02292940,  0.00141551,
          -0.00809394,  0.54098463,  0.01925061,  0.01345798,  0.03003450],
         [ 0.32143104,  0.01857392,  0.02731174,  0.02292940,  0.00141551,
          -0.00809394,  0.54098463,  0.01925061,  0.01345798,  0.03003450]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.21955359, 0.52241069, 0.51367289, 0.51805520, 0.53956914,
          0.54907858, 0.52173400, 0.52752662, 0.51095015]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4314 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 2.18696520e-03, -4.46036458e-04,  5.56391478e-03,  7.82869756e-03,
         -2.99296901e-03, -1.32469088e-03,  1.00299323e+00, -2.54845619e-03,
          2.96919048e-03,  5.27416915e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 33, 1, 6] with unstable size 32 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [32]; unstable size 32; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.71944851, -0.07064243, -0.16536072, -0.08652498, -0.10335019,
         -0.12791118, -0.63577157, -0.35125422, -0.23190185]], device='cuda:0') None
best_l after optimization: 1.709592580795288
alpha/beta optimization time: 1.510730266571045
initial alpha-crown bounds: tensor([[-0.09877637,  0.28722796,  0.23930928,  0.25003785,  0.28983673,
          0.26111495,  0.23729512,  0.00260380,  0.24094328]], device='cuda:0')
Worst class: (+ rhs) -0.09877637028694153
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.95155715942383
##### Instance 251 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09877637]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.18696520e-03, -4.46036458e-04,  5.56391478e-03,  7.82869756e-03,
        -2.99296901e-03, -1.32469088e-03,  1.00299323e+00, -2.54845619e-03,
         2.96919048e-03,  5.27416915e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09877637]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 6
Node /17 input 0: size torch.Size([256]) unstable 26
-----------------
# of unstable neurons: 32
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 151] 
split level 3: [/input.3, 48] 
split level 4: [/input.3, 116] 
split level 5: [/input.3, 144] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.367134094238281e-05
Time: prepare 0.0036    bound 0.0047    transfer 0.0001    finalize 0.0017    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0041    bound 0.0047    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0112    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0112    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04987168312072754


Properties batch 1, size 1
Remaining timeout: 117.79940366744995
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28722795844078064.

Properties batch 2, size 1
Remaining timeout: 117.72635889053345
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.23930928111076355.

Properties batch 3, size 1
Remaining timeout: 117.6589515209198
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2500378489494324.

Properties batch 4, size 1
Remaining timeout: 117.59199738502502
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28983673453330994.

Properties batch 5, size 1
Remaining timeout: 117.52448344230652
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2611149549484253.

Properties batch 6, size 1
Remaining timeout: 117.45839023590088
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.23729512095451355.

Properties batch 7, size 1
Remaining timeout: 117.39191222190857
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0026037991046905518.

Properties batch 8, size 1
Remaining timeout: 117.32343816757202
##### Instance 251 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2409432828426361.
Result: safe in 2.7426 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 252, vnnlib ID: 252 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00118131,  0.00299060,  0.00508662,  0.00258260, -0.00351643,
          0.01045789,  0.00215954, -0.00832728,  0.00637588,  0.98830223]],
       device='cuda:0')
diversed PGD initialization time: 0.1225
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1306 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1789 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 253, vnnlib ID: 253 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99964166, -0.00717583,  0.01323670,  0.00494210, -0.00551077,
         -0.01822783, -0.00762712, -0.00988664, -0.00545428, -0.00685032]],
       device='cuda:0')
diversed PGD initialization time: 0.1214
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.79413772,  0.00342347, -0.01093660, -0.01368414, -0.04175535,
           0.38252810, -0.00236360,  0.03068237,  0.01300208, -0.02765636],
         [ 0.79413772,  0.00342347, -0.01093660, -0.01368414, -0.04175535,
           0.38252810, -0.00236360,  0.03068237,  0.01300208, -0.02765636]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.79071426, 0.80507433, 0.80782187, 0.83589309, 0.41160962,
          0.79650134, 0.76345533, 0.78113562, 0.82179409]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4129 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99964166, -0.00717583,  0.01323670,  0.00494210, -0.00551077,
         -0.01822783, -0.00762712, -0.00988664, -0.00545428, -0.00685032]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 52, 1, 13] with unstable size 51 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [51]; unstable size 51; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.02935464, -0.21229941, -0.18872523, -0.05137159, -0.71569657,
         -0.16602078, -0.38110560, -0.47163862, -0.10596301]], device='cuda:0') None
best_l after optimization: 1.7676360607147217
alpha/beta optimization time: 1.7036159038543701
initial alpha-crown bounds: tensor([[ 0.34192741,  0.26990896,  0.21744221,  0.31266150, -0.15773866,
          0.28345495,  0.04654039,  0.16863947,  0.28479993]], device='cuda:0')
Worst class: (+ rhs) -0.15773865580558777
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.79740285873413
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3419274091720581.

Properties batch 1, size 1
Remaining timeout: 117.72345542907715
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.26990896463394165.

Properties batch 2, size 1
Remaining timeout: 117.65606236457825
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21744221448898315.

Properties batch 3, size 1
Remaining timeout: 117.58958053588867
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3126614987850189.

Properties batch 4, size 1
Remaining timeout: 117.52352285385132
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15773866]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99964166, -0.00717583,  0.01323670,  0.00494210, -0.00551077,
        -0.01822783, -0.00762712, -0.00988664, -0.00545428, -0.00685032],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15773866]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 37
-----------------
# of unstable neurons: 50
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 254] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 28] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010085105895996094
Time: prepare 0.0036    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0041    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0109    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0109    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04874444007873535


Properties batch 5, size 1
Remaining timeout: 117.38327884674072
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.283454954624176.

Properties batch 6, size 1
Remaining timeout: 117.3093249797821
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.046540386974811554.

Properties batch 7, size 1
Remaining timeout: 117.23838138580322
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16863946616649628.

Properties batch 8, size 1
Remaining timeout: 117.17171812057495
##### Instance 253 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2847999334335327.
Result: safe in 2.8946 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 254, vnnlib ID: 254 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.07321209e-04,  9.64080095e-01,  3.73451412e-03, -1.38343871e-03,
         -3.80119309e-03, -2.41771340e-05,  1.72299892e-03,  5.47561049e-03,
         -3.40702385e-03,  1.16311014e-04]], device='cuda:0')
diversed PGD initialization time: 0.1283
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01074935,  0.91620749, -0.01905990, -0.02915211,  0.08257805,
           0.01056773,  0.00572095,  0.00482923,  0.01157770,  0.02111600],
         [-0.01074935,  0.91620749, -0.01905990, -0.02915211,  0.08257805,
           0.01056773,  0.00572095,  0.00482923,  0.01157770,  0.02111600]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.92695683, 0.93526739, 0.94535959, 0.83362943, 0.90563977,
          0.91048652, 0.91137826, 0.90462977, 0.89509147]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4185 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 5.07321209e-04,  9.64080095e-01,  3.73451412e-03, -1.38343871e-03,
         -3.80119309e-03, -2.41771340e-05,  1.72299892e-03,  5.47561049e-03,
         -3.40702385e-03,  1.16311014e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 72, 1, 27] with unstable size 71 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [71]; unstable size 71; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 71] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.22381333,  0.03062698, -0.67857653, -0.27098358, -0.17343804,
          0.03419769,  0.01187989, -0.40050709, -0.58968627]], device='cuda:0') None
best_l after optimization: 1.8467137813568115
alpha/beta optimization time: 1.695295810699463
initial alpha-crown bounds: tensor([[ 0.42739904,  0.38756585, -0.41101673,  0.19681695,  0.15287888,
          0.38335794,  0.33585835,  0.34831101,  0.02554247]], device='cuda:0')
Worst class: (+ rhs) -0.4110167324542999
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.78280806541443
##### Instance 254 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.42739903926849365.

Properties batch 1, size 1
Remaining timeout: 117.71090888977051
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.38756585121154785.

Properties batch 2, size 1
Remaining timeout: 117.64366841316223
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41101673]], device='cuda:0') need to verify.
Model prediction is: tensor([ 5.07321209e-04,  9.64080095e-01,  3.73451412e-03, -1.38343871e-03,
        -3.80119309e-03, -2.41771340e-05,  1.72299892e-03,  5.47561049e-03,
        -3.40702385e-03,  1.16311014e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41101673]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 27
Node /17 input 0: size torch.Size([256]) unstable 42
-----------------
# of unstable neurons: 69
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 153] 
split level 1: [/input.3, 63] 
split level 2: [/input.3, 200] 
split level 3: [/input.3, 236] 
split level 4: [/input.3, 143] 
split level 5: [/input, 209] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008987188339233398
Time: prepare 0.0066    bound 0.2021    transfer 0.0003    finalize 0.0033    func 0.2124    
Accumulated time: func 0.2124    prepare 0.0071    bound 0.2021    transfer 0.0003    finalize 0.0033    
Current worst splitting domains lb-rhs (depth):
-0.03897 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0113    solve 0.2124    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0113    solve 0.2124    add 0.0008    
Current (lb-rhs): -0.03897213935852051
1 domains visited
Cumulative time: 0.2526559829711914

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] 
split level 1: [/input, 171] 
split level 2: [/input, 227] 
split level 3: [/input, 100] 
split level 4: [/input, 138] 
split level 5: [/input, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.818771362304688e-05
Time: prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.2266    prepare 0.0147    bound 0.2067    transfer 0.0004    finalize 0.0057    
length of domains: 0
Time: pickout 0.0007    decision 0.0239    set_bounds 0.0112    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0473    set_bounds 0.0225    solve 0.2268    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.30309343338012695


Properties batch 3, size 1
Remaining timeout: 117.25027799606323
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19681695103645325.

Properties batch 4, size 1
Remaining timeout: 117.17900514602661
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15287888050079346.

Properties batch 5, size 1
Remaining timeout: 117.11219072341919
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3833579421043396.

Properties batch 6, size 1
Remaining timeout: 117.04258298873901
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3358583450317383.

Properties batch 7, size 1
Remaining timeout: 116.97057366371155
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.34831100702285767.

Properties batch 8, size 1
Remaining timeout: 116.90028166770935
##### Instance 254 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.025542467832565308.
Result: safe in 3.1675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 255, vnnlib ID: 255 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.74827939e-03, -1.34791285e-02, -1.16537511e-03, -9.75456834e-03,
         -3.04224826e-02,  1.02699959e+00, -2.63301656e-03, -3.26074809e-02,
         -9.01259482e-03,  1.38118863e-04]], device='cuda:0')
diversed PGD initialization time: 0.1278
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.92283225e-03, -1.19013712e-02,  6.61581755e-03, -1.87575817e-04,
          -3.55035476e-02,  1.00021183e+00, -8.60375166e-03, -3.31590474e-02,
          -6.12328947e-03,  4.06622887e-03],
         [-9.92283225e-03, -1.19013712e-02,  6.61581755e-03, -1.87575817e-04,
          -3.55035476e-02,  1.00021183e+00, -8.60375166e-03, -3.31590474e-02,
          -6.12328947e-03,  4.06622887e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.01013470, 1.01211321, 0.99359602, 1.00039935, 1.03571534,
          1.00881553, 1.03337085, 1.00633514, 0.99614561]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4113 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.74827939e-03, -1.34791285e-02, -1.16537511e-03, -9.75456834e-03,
         -3.04224826e-02,  1.02699959e+00, -2.63301656e-03, -3.26074809e-02,
         -9.01259482e-03,  1.38118863e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 28, 1, 17] with unstable size 27 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [27]; unstable size 27; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.15850595, -0.37136582, -0.39360738, -0.86542261, -0.22349298,
         -0.45566630, -0.23757532, -1.33027005, -0.30805814]], device='cuda:0') None

all verified at 7th iter
best_l after optimization: 3.476613998413086
alpha/beta optimization time: 0.11989116668701172
initial alpha-crown bounds: tensor([[0.45850301, 0.42426348, 0.41973430, 0.13145348, 0.47511777, 0.50829601,
         0.46813846, 0.15299737, 0.43810996]], device='cuda:0')
Worst class: (+ rhs) 0.1314534842967987
verified with init bound!
Result: safe-incomplete in 0.6324 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 256, vnnlib ID: 256 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
          0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028]],
       device='cuda:0')
diversed PGD initialization time: 0.1263
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00651391, 0.01131840, 0.02392019, 0.02176689, 0.40302205,
          0.00843678, 0.01209858, 0.01384473, 0.00834499, 0.49558616],
         [0.00651391, 0.01131840, 0.02392019, 0.02176689, 0.40302205,
          0.00843678, 0.01209858, 0.01384473, 0.00834499, 0.49558616]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.48907226, 0.48426777, 0.47166598, 0.47381926, 0.09256411,
          0.48714936, 0.48348758, 0.48174143, 0.48724118]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4305 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
          0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 41, 1, 12] with unstable size 40 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [40]; unstable size 40; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.32090861, -0.30594975, -0.47987542, -0.35957283, -0.96895623,
         -0.34657848, -0.30767080, -0.54956526, -0.63326299]], device='cuda:0') None
best_l after optimization: -2.973125696182251
alpha/beta optimization time: 1.52213716506958
initial alpha-crown bounds: tensor([[-0.16943277, -0.15705745, -0.34290814, -0.22203979, -0.81498384,
         -0.20991358, -0.16819692, -0.35699525, -0.53159785]], device='cuda:0')
Worst class: (+ rhs) -0.8149838447570801
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.8890814781189
##### Instance 256 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16943277]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16943277]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 57] 
split level 3: [/input.3, 18] 
split level 4: [/input.3, 123] 
split level 5: [/input.3, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.006967782974243164
Time: prepare 0.0037    bound 0.1288    transfer 0.0003    finalize 0.0018    func 0.1346    
Accumulated time: func 0.1346    prepare 0.0042    bound 0.1288    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.00136 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0110    solve 0.1347    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0110    solve 0.1347    add 0.0006    
Current (lb-rhs): -0.0013628900051116943
1 domains visited
Cumulative time: 0.17417001724243164

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 178] 
split level 1: [/input, 76] 
split level 2: [/input, 15] 
split level 3: [/input, 2] 
split level 4: [/input.3, 162] 
split level 5: [/input, 198] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.890296936035156e-05
Time: prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.1492    prepare 0.0120    bound 0.1334    transfer 0.0004    finalize 0.0044    
length of domains: 0
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0117    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0466    set_bounds 0.0228    solve 0.1493    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.22456932067871094


Properties batch 1, size 1
Remaining timeout: 117.5663652420044
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15705745]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15705745]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 18] 
split level 3: [/input.3, 57] 
split level 4: [/input.3, 123] 
split level 5: [/input.3, 238] 

all verified at 13th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.004675149917602539
Time: prepare 0.0035    bound 0.0890    transfer 0.0002    finalize 0.0018    func 0.0947    
Accumulated time: func 0.0947    prepare 0.0040    bound 0.0890    transfer 0.0002    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0109    solve 0.0948    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0109    solve 0.0948    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.1342325210571289


Properties batch 2, size 1
Remaining timeout: 117.33524012565613
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34290814]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34290814]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 57] 
split level 3: [/input, 15] 
split level 4: [/input.3, 102] 
split level 5: [/input.3, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.007044076919555664
Time: prepare 0.0068    bound 0.1309    transfer 0.0002    finalize 0.0024    func 0.1406    
Accumulated time: func 0.1406    prepare 0.0073    bound 0.1309    transfer 0.0002    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.06955 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0237    set_bounds 0.0114    solve 0.1406    add 0.0006    
Accumulated time: pickout 0.0005    decision 0.0237    set_bounds 0.0114    solve 0.1406    add 0.0006    
Current (lb-rhs): -0.06954699754714966
1 domains visited
Cumulative time: 0.1812114715576172

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 178] 
split level 1: [/input, 2] 
split level 2: [/input, 76] 
split level 3: [/input, 198] 
split level 4: [/input.3, 18] 
split level 5: [/input.3, 123] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.153915405273438e-05
Time: prepare 0.0074    bound 0.0052    transfer 0.0001    finalize 0.0026    func 0.0154    
Accumulated time: func 0.1560    prepare 0.0153    bound 0.1361    transfer 0.0003    finalize 0.0050    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0127    solve 0.0155    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0476    set_bounds 0.0242    solve 0.1561    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.23428773880004883


Properties batch 3, size 1
Remaining timeout: 117.00593781471252
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22203979]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22203979]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 57] 
split level 3: [/input.3, 18] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 143] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.007326841354370117
Time: prepare 0.0035    bound 0.1335    transfer 0.0002    finalize 0.0018    func 0.1393    
Accumulated time: func 0.1393    prepare 0.0041    bound 0.1335    transfer 0.0002    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.03692 (6), -0.00644 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0109    solve 0.1393    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0109    solve 0.1393    add 0.0007    
Current (lb-rhs): -0.036924660205841064
2 domains visited
Cumulative time: 0.17923569679260254

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 2] [/input, 178] 
split level 1: [/input, 76] [/input, 15] 
split level 2: [/input, 198] [/input, 76] 
split level 3: [/input, 15] [/input, 2] 
split level 4: [/input, 178] [/input, 198] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.890296936035156e-05
Time: prepare 0.0073    bound 0.0044    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.1536    prepare 0.0119    bound 0.1379    transfer 0.0003    finalize 0.0042    
length of domains: 0
Time: pickout 0.0005    decision 0.0212    set_bounds 0.0101    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0448    set_bounds 0.0210    solve 0.1538    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2257070541381836


Properties batch 4, size 1
Remaining timeout: 116.6819896697998
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.81498384]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.81498384]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 18] 
split level 1: [/input.3, 38] 
split level 2: [/input.3, 123] 
split level 3: [/input.3, 149] 
split level 4: [/input.3, 57] 
split level 5: [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.007370471954345703
Time: prepare 0.0067    bound 0.1343    transfer 0.0003    finalize 0.0024    func 0.1439    
Accumulated time: func 0.1439    prepare 0.0072    bound 0.1343    transfer 0.0003    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.43545 (6), -0.42086 (6), -0.21924 (6), -0.20272 (6), -0.17175 (6), -0.11416 (6), -0.09355 (6), -0.06404 (6), -0.02967 (6), -0.01011 (6), -0.00813 (6), 
length of domains: 11
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.1439    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.1439    add 0.0008    
Current (lb-rhs): -0.43545278906822205
11 domains visited
Cumulative time: 0.18420720100402832

BaB round 2
batch: 11
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 174] [/input.3, 80] [/input, 15] [/input, 76] [/input, 76] [/input, 76] [/input, 15] [/input, 76] [/input, 76] [/input, 76] 
split level 1: [/input, 76] [/input.3, 162] [/input, 76] [/input, 15] [/input, 15] [/input, 174] [/input, 76] [/input, 15] [/input, 15] [/input, 174] 
split level 2: [/input, 15] [/input, 91] [/input, 2] [/input.3, 162] [/input.3, 162] [/input, 15] [/input.3, 162] [/input.3, 162] [/input.3, 162] [/input, 15] 
pruning_in_iteration open status: True
ratio of positive domain = 85 / 88 = 0.9659090909090909
pruning-in-iteration extra time: 0.007105827331542969
Time: prepare 0.0101    bound 0.1306    transfer 0.0002    finalize 0.0034    func 0.1444    
Accumulated time: func 0.2883    prepare 0.0178    bound 0.2649    transfer 0.0005    finalize 0.0058    
Current worst splitting domains lb-rhs (depth):
-0.17628 (9), -0.15162 (9), -0.04833 (9), 
length of domains: 3
Time: pickout 0.0005    decision 0.0278    set_bounds 0.0127    solve 0.1445    add 0.0007    
Accumulated time: pickout 0.0009    decision 0.0512    set_bounds 0.0243    solve 0.2884    add 0.0015    
Current (lb-rhs): -0.17628194391727448
14 domains visited
Cumulative time: 0.37092018127441406

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 43] [/input, 43] [/input, 43] 
split level 1: [/input, 2] [/input.3, 162] [/input.3, 162] 
split level 2: [/input, 198] [/input, 198] [/input, 198] 
split level 3: [/input.3, 238] [/input.3, 238] [/input.3, 238] 
split level 4: [/input.3, 87] [/input.3, 87] [/input.3, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 96 = 0.9583333333333334
pruning-in-iteration extra time: 0.007059335708618164
Time: prepare 0.0107    bound 0.1319    transfer 0.0003    finalize 0.0036    func 0.1467    
Accumulated time: func 0.4350    prepare 0.0290    bound 0.3968    transfer 0.0008    finalize 0.0094    
Current worst splitting domains lb-rhs (depth):
-0.07394 (14), -0.05071 (14), -0.04626 (14), -0.01731 (14), 
length of domains: 4
Time: pickout 0.0006    decision 0.0228    set_bounds 0.0167    solve 0.1467    add 0.0007    
Accumulated time: pickout 0.0015    decision 0.0740    set_bounds 0.0409    solve 0.4351    add 0.0022    
Current (lb-rhs): -0.07394054532051086
18 domains visited
Cumulative time: 0.559035062789917

BaB round 4
batch: 4
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 80] [/input.3, 80] [/input.3, 80] [/input.3, 80] 
split level 1: [/input.3, 121] [/input.3, 124] [/input, 2] [/input.3, 121] 
split level 2: [/input, 2] [/input.3, 121] [/input.3, 121] [/input.3, 249] 
split level 3: [/input.3, 249] [/input.3, 249] [/input.3, 249] [/input.3, 232] 

all verified at 19th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.007013559341430664
Time: prepare 0.0077    bound 0.1326    transfer 0.0002    finalize 0.0025    func 0.1431    
Accumulated time: func 0.5780    prepare 0.0371    bound 0.5294    transfer 0.0010    finalize 0.0119    
length of domains: 0
Time: pickout 0.0006    decision 0.0237    set_bounds 0.0107    solve 0.1431    add 0.0001    
Accumulated time: pickout 0.0021    decision 0.0976    set_bounds 0.0516    solve 0.5783    add 0.0023    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18 domains visited
Cumulative time: 0.7376041412353516


Properties batch 5, size 1
Remaining timeout: 115.84902596473694
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20991358]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20991358]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 57] 
split level 3: [/input.3, 18] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 162] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.0067861080169677734
Time: prepare 0.0035    bound 0.1258    transfer 0.0003    finalize 0.0018    func 0.1315    
Accumulated time: func 0.1315    prepare 0.0040    bound 0.1258    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.01631 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0108    solve 0.1316    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0108    solve 0.1316    add 0.0006    
Current (lb-rhs): -0.016307979822158813
1 domains visited
Cumulative time: 0.1717817783355713

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 178] 
split level 1: [/input, 15] 
split level 2: [/input, 76] 
split level 3: [/input, 2] 
split level 4: [/input, 198] 
split level 5: [/input.3, 123] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0074    bound 0.0049    transfer 0.0001    finalize 0.0025    func 0.0149    
Accumulated time: func 0.1464    prepare 0.0119    bound 0.1307    transfer 0.0004    finalize 0.0043    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0123    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0473    set_bounds 0.0231    solve 0.1465    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.22316765785217285


Properties batch 6, size 1
Remaining timeout: 115.53018403053284
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16819692]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16819692]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 57] 
split level 3: [/input.3, 18] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 123] 

all verified at 16th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0057756900787353516
Time: prepare 0.0034    bound 0.1070    transfer 0.0002    finalize 0.0018    func 0.1126    
Accumulated time: func 0.1126    prepare 0.0040    bound 0.1070    transfer 0.0002    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.1127    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.1127    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.15143442153930664


Properties batch 7, size 1
Remaining timeout: 115.28201580047607
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35699525]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35699525]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 57] 
split level 2: [/input.3, 123] 
split level 3: [/input.3, 133] 
split level 4: [/input, 2] 
split level 5: [/input.3, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.007298946380615234
Time: prepare 0.0068    bound 0.1358    transfer 0.0002    finalize 0.0025    func 0.1455    
Accumulated time: func 0.1455    prepare 0.0073    bound 0.1358    transfer 0.0002    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.02788 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.1456    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.1456    add 0.0006    
Current (lb-rhs): -0.02788296341896057
1 domains visited
Cumulative time: 0.18635249137878418

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 76] 
split level 1: [/input, 178] 
split level 2: [/input.3, 124] 
split level 3: [/input, 15] 
split level 4: [/input, 198] 
split level 5: [/input.3, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0074    bound 0.0050    transfer 0.0001    finalize 0.0025    func 0.0150    
Accumulated time: func 0.1605    prepare 0.0152    bound 0.1407    transfer 0.0003    finalize 0.0050    
length of domains: 0
Time: pickout 0.0005    decision 0.0238    set_bounds 0.0126    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0476    set_bounds 0.0241    solve 0.1607    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.238692045211792


Properties batch 8, size 1
Remaining timeout: 114.94682168960571
##### Instance 256 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53159785]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00163915,  0.00506667,  0.00590280,  0.00669403, -0.00756216,
         0.00875761,  0.00214984, -0.00199358,  0.00731334,  0.97664028],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53159785]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 52
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 38] 
split level 1: [/input.3, 149] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 150] 
split level 4: [/input.3, 57] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.006979465484619141
Time: prepare 0.0036    bound 0.1276    transfer 0.0003    finalize 0.0018    func 0.1334    
Accumulated time: func 0.1334    prepare 0.0041    bound 0.1276    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.11338 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.1335    add 0.0006    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.1335    add 0.0006    
Current (lb-rhs): -0.11337593197822571
1 domains visited
Cumulative time: 0.17281889915466309

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 178] 
split level 1: [/input, 15] 
split level 2: [/input, 2] 
split level 3: [/input, 198] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 18] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.630752563476562e-05
Time: prepare 0.0075    bound 0.0049    transfer 0.0001    finalize 0.0025    func 0.0151    
Accumulated time: func 0.1485    prepare 0.0122    bound 0.1325    transfer 0.0004    finalize 0.0043    
length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0118    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0465    set_bounds 0.0227    solve 0.1486    add 0.0006    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.223801851272583

Result: safe in 5.3730 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 257, vnnlib ID: 257 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00668468, 0.00565499, 0.01345003, 0.01787698, 0.01288120, 0.01903743,
         0.00733147, 0.85570860, 0.01616033, 0.01928855]], device='cuda:0')
diversed PGD initialization time: 0.1278
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00799076, -0.07862896,  0.02281494, -0.06542404, -0.00186003,
           0.02742263, -0.00767206,  0.08537610,  0.82109648,  0.17259127],
         [-0.00799076, -0.07862896,  0.02281494, -0.06542404, -0.00186003,
           0.02742263, -0.00767206,  0.08537610,  0.82109648,  0.17259127]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.09336685,  0.16400506,  0.06256115,  0.15080014,  0.08723614,
           0.05795347,  0.09304816, -0.73572040, -0.08721517]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1357 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2012 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 258, vnnlib ID: 258 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00942206, -0.02745204,  0.02367947,  0.52583253, -0.02021936,
          0.05484756,  0.00335050, -0.07150625,  0.01291715,  0.49708116]],
       device='cuda:0')
diversed PGD initialization time: 0.1264
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03622850, -0.05590563, -0.01733866,  0.09273635, -0.01127756,
           0.02921354, -0.01050113, -0.06924941,  0.91836154,  0.13704674],
         [-0.03622850, -0.05590563, -0.01733866,  0.09273635, -0.01127756,
           0.02921354, -0.01050113, -0.06924941,  0.91836154,  0.13704674]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.12896484,  0.14864197,  0.11007501,  0.10401390,  0.06352281,
           0.10323748,  0.16198575, -0.82562518, -0.04431039]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1355 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1956 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 259, vnnlib ID: 259 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.34253705e-03, -4.04657423e-03,  2.01110542e-03, -8.39382410e-05,
          9.89667654e-01, -1.22514367e-03,  1.77028775e-03, -2.15244293e-03,
          4.67784703e-04,  5.65797091e-05]], device='cuda:0')
diversed PGD initialization time: 0.1326
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00104105, -0.03261474,  0.02070874, -0.01890945,  0.13247146,
          -0.02984548,  0.00343696, -0.04376327,  0.92451590, -0.01240780],
         [-0.00104105, -0.03261474,  0.02070874, -0.01890945,  0.13247146,
          -0.02984548,  0.00343696, -0.04376327,  0.92451590, -0.01240780]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13351251,  0.16508619,  0.11176272,  0.15138091,  0.16231693,
           0.12903450,  0.17623472, -0.79204446,  0.14487925]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1414 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2182 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 260, vnnlib ID: 260 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.10670009e-03,  9.29273665e-04, -2.05114484e-03, -3.76731157e-04,
          7.23702088e-03,  6.15415722e-03,  1.74410641e-04, -1.32256746e-03,
          2.36807019e-03,  1.00063181e+00]], device='cuda:0')
diversed PGD initialization time: 0.1261
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02803233, -0.07512985, -0.01658234, -0.08359227, -0.00672926,
           0.01528089,  0.01734162, -0.05046903,  0.77577430,  0.44519538],
         [-0.02803233, -0.07512985, -0.01658234, -0.08359227, -0.00672926,
           0.01528089,  0.01734162, -0.05046903,  0.77577430,  0.44519538]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47322771,  0.52032524,  0.46177772,  0.52878761,  0.45192462,
           0.42991447,  0.42785376,  0.49566442, -0.33057892]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1342 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1839 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 261, vnnlib ID: 261 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.22917406e-02, -3.41062248e-03, -7.77512789e-04,  1.04244351e-02,
         -8.52431729e-03,  6.24172390e-04,  1.02339363e+00, -1.81084722e-02,
         -4.13545966e-03,  1.34542435e-02]], device='cuda:0')
diversed PGD initialization time: 0.1267
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05150071, -0.00739975,  0.01773205, -0.02724662, -0.00641108,
           0.64743698,  0.46385485, -0.04295547,  0.01702097, -0.02028748],
         [-0.05150071, -0.00739975,  0.01773205, -0.02724662, -0.00641108,
           0.64743698,  0.46385485, -0.04295547,  0.01702097, -0.02028748]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.51535559,  0.47125459,  0.44612280,  0.49110147,  0.47026592,
          -0.18358213,  0.50681031,  0.44683388,  0.48414233]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1356 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2052 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 262, vnnlib ID: 262 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.68085098e-04,  7.60234892e-04,  8.91616940e-03,  1.27602667e-02,
         -3.12228128e-03, -5.72194904e-03,  1.00172186e+00, -2.83406675e-03,
          9.80088860e-03,  8.03922862e-03]], device='cuda:0')
diversed PGD initialization time: 0.1320
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.73025781e-03,  3.58500332e-03,  1.39850825e-02,  1.49012953e-02,
          -1.39592588e-03, -7.11248815e-03,  9.85447764e-01, -4.17664647e-04,
           1.86860561e-02,  1.15730986e-02],
         [-2.73025781e-03,  3.58500332e-03,  1.39850825e-02,  1.49012953e-02,
          -1.39592588e-03, -7.11248815e-03,  9.85447764e-01, -4.17664647e-04,
           1.86860561e-02,  1.15730986e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.98817801, 0.98186278, 0.97146267, 0.97054648, 0.98684371,
          0.99256027, 0.98586541, 0.96676171, 0.97387469]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4469 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.68085098e-04,  7.60234892e-04,  8.91616940e-03,  1.27602667e-02,
         -3.12228128e-03, -5.72194904e-03,  1.00172186e+00, -2.83406675e-03,
          9.80088860e-03,  8.03922862e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 15, 1, 14] with unstable size 14 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.52022058, 0.65132380, 0.60652739, 0.59101814, 0.61793494, 0.60130119,
         0.40563414, 0.64496851, 0.61033201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5283 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 263, vnnlib ID: 263 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00431933, -0.01430139, -0.00303631, -0.00272696, -0.02995953,
          1.03172565, -0.00233252, -0.03379720, -0.00956514, -0.00133288]],
       device='cuda:0')
diversed PGD initialization time: 0.1431
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.92889774e-04, -5.91808558e-03,  8.24992359e-03, -1.12186372e-02,
          -6.37908280e-03,  9.76362824e-01,  1.61071718e-02, -9.52433050e-03,
           5.04484028e-03,  1.38378888e-03],
         [ 2.92889774e-04, -5.91808558e-03,  8.24992359e-03, -1.12186372e-02,
          -6.37908280e-03,  9.76362824e-01,  1.61071718e-02, -9.52433050e-03,
           5.04484028e-03,  1.38378888e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.97606993, 0.98228091, 0.96811289, 0.98758149, 0.98274189,
          0.96025562, 0.98588717, 0.97131801, 0.97497904]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4701 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00431933, -0.01430139, -0.00303631, -0.00272696, -0.02995953,
          1.03172565, -0.00233252, -0.03379720, -0.00956514, -0.00133288]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 12, 1, 20] with unstable size 11 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.67552823, 0.69366562, 0.66627920, 0.52596372, 0.69879812, 0.65371788,
         0.68021983, 0.66135001, 0.67488980]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5512 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 264, vnnlib ID: 264 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00263054, 0.00357698, 0.01177098, 0.01200126, 0.60222006, 0.01761293,
         0.00711386, 0.08036786, 0.01477169, 0.24956553]], device='cuda:0')
diversed PGD initialization time: 0.1437
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00103783, -0.01975246,  0.01271054, -0.02100222, -0.01161262,
           0.00753746, -0.02504918, -0.02249400,  0.91512662,  0.11943056],
         [ 0.00103783, -0.01975246,  0.01271054, -0.02100222, -0.01161262,
           0.00753746, -0.02504918, -0.02249400,  0.91512662,  0.11943056]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01265045,  0.00813984, -0.02432316,  0.00938960, -0.01915008,
           0.01343656,  0.01088138, -0.92673922, -0.13104318]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1526 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2015 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 265, vnnlib ID: 265 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00251842e+00, -7.18683004e-03, -1.20480359e-03, -9.80862975e-03,
         -2.14067847e-03,  7.26703554e-03, -2.62984261e-03, -1.11287385e-02,
          3.42801213e-04, -6.77493960e-03]], device='cuda:0')
diversed PGD initialization time: 0.1249
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.88064462, 0.00194931, 0.01240818, 0.01183292, 0.00360936,
          0.02706732, 0.00175531, 0.00333942, 0.02151152, 0.01485121],
         [0.88064462, 0.00194931, 0.01240818, 0.01183292, 0.00360936,
          0.02706732, 0.00175531, 0.00333942, 0.02151152, 0.01485121]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.87869531, 0.86823642, 0.86881173, 0.87703526, 0.85357732,
          0.87888932, 0.87730521, 0.85913312, 0.86579341]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4195 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00251842e+00, -7.18683004e-03, -1.20480359e-03, -9.80862975e-03,
         -2.14067847e-03,  7.26703554e-03, -2.62984261e-03, -1.11287385e-02,
          3.42801213e-04, -6.77493960e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 23, 1, 5] with unstable size 22 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [22]; unstable size 22; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.84472251, 0.80416703, 0.81679583, 0.85523081, 0.77778715, 0.80045110,
         0.83535784, 0.84123677, 0.84251714]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5359 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 266, vnnlib ID: 266 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00873604, 0.00853996, 0.01266088, 0.01151726, 0.01144024, 0.01437338,
         0.00783541, 0.86480659, 0.01466652, 0.01635295]], device='cuda:0')
diversed PGD initialization time: 0.1331
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.09472750, 0.02845804, 0.09328264, 0.04151099, 0.05785988,
          0.08826198, 0.03609902, 0.22944400, 0.04500013, 0.27313045],
         [0.09472750, 0.02845804, 0.09328264, 0.04151099, 0.05785988,
          0.08826198, 0.03609902, 0.22944400, 0.04500013, 0.27313045]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13471650,  0.20098595,  0.13616136,  0.18793300,  0.17158413,
           0.14118201,  0.19334498,  0.18444386, -0.04368645]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1422 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2042 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 267, vnnlib ID: 267 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00540522, 0.00728272, 0.02575849, 0.02384983, 0.79906356, 0.01893948,
         0.01011226, 0.00301215, 0.01407427, 0.08689822]], device='cuda:0')
diversed PGD initialization time: 0.1248
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00308172,  0.00950148,  0.02384712,  0.00805792,  0.31798360,
           0.01173535,  0.00717063, -0.01316161,  0.00880329,  0.61680251],
         [ 0.00308172,  0.00950148,  0.02384712,  0.00805792,  0.31798360,
           0.01173535,  0.00717063, -0.01316161,  0.00880329,  0.61680251]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.31490189,  0.30848211,  0.29413646,  0.30992568,  0.30624825,
           0.31081295,  0.33114523,  0.30918032, -0.29881892]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1338 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1886 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 268, vnnlib ID: 268 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00324357e+00, -2.33079642e-02,  2.99765170e-03, -1.59861743e-02,
         -1.72734968e-02,  2.04950571e-04,  1.10882744e-02, -2.44471878e-02,
         -3.24480981e-03, -1.51158050e-02]], device='cuda:0')
diversed PGD initialization time: 0.1310
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.97577643, -0.06211963,  0.19102991, -0.05881853, -0.02263157,
          -0.01680680, -0.00403054,  0.01872964, -0.02708533, -0.04255810],
         [ 0.97577643, -0.06211963,  0.19102991, -0.05881853, -0.02263157,
          -0.01680680, -0.00403054,  0.01872964, -0.02708533, -0.04255810]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.03789604, 0.78474653, 1.03459501, 0.99840802, 0.99258322,
          0.97980696, 0.95704681, 1.00286174, 1.01833451]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4134 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00324357e+00, -2.33079642e-02,  2.99765170e-03, -1.59861743e-02,
         -1.72734968e-02,  2.04950571e-04,  1.10882744e-02, -2.44471878e-02,
         -3.24480981e-03, -1.51158050e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 13, 1, 11] with unstable size 12 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.96511596, 0.64576149, 0.94416285, 0.95272309, 0.94425768, 0.93279111,
         0.76834542, 0.95413578, 0.93523610]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 269, vnnlib ID: 269 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[1.87825412e-04, 9.17002499e-01, 4.08141315e-03, 6.25938177e-03,
         1.54116005e-03, 2.47548521e-03, 1.08343363e-02, 1.73279345e-02,
         1.09237432e-02, 6.40837103e-03]], device='cuda:0')
diversed PGD initialization time: 0.1349
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00767858,  0.28100339, -0.02483176, -0.06884508,  0.00113274,
           0.01418520, -0.02944497,  0.01494521,  0.81147653, -0.02086562],
         [-0.00767858,  0.28100339, -0.02483176, -0.06884508,  0.00113274,
           0.01418520, -0.02944497,  0.01494521,  0.81147653, -0.02086562]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.28868198,  0.30583513,  0.34984845,  0.27987063,  0.26681820,
           0.31044835,  0.26605818, -0.53047311,  0.30186900]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1446 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2348 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 270, vnnlib ID: 270 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01275314, -0.00871505,  0.00939678,  0.97356272, -0.03382546,
          0.03199403, -0.00413634, -0.02218221, -0.00106408,  0.00141186]],
       device='cuda:0')
diversed PGD initialization time: 0.1280
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.36397812e-03,  4.44815382e-02, -6.64725900e-04,  9.49672461e-01,
          -1.53856091e-02, -1.88259780e-03,  1.20536238e-03, -1.71037167e-02,
           5.02061844e-03,  2.76909024e-03],
         [-3.36397812e-03,  4.44815382e-02, -6.64725900e-04,  9.49672461e-01,
          -1.53856091e-02, -1.88259780e-03,  1.20536238e-03, -1.71037167e-02,
           5.02061844e-03,  2.76909024e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.95303643, 0.90519094, 0.95033717, 0.96505809, 0.95155507,
          0.94846708, 0.96677619, 0.94465184, 0.94690335]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4223 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.01275314, -0.00871505,  0.00939678,  0.97356272, -0.03382546,
          0.03199403, -0.00413634, -0.02218221, -0.00106408,  0.00141186]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 16, 1, 14] with unstable size 15 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.47977301, 0.30655545, 0.43318459, 0.38346821, 0.30955321, 0.45388192,
         0.46743909, 0.38897789, 0.44495216]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5291 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 271, vnnlib ID: 271 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.64356641e-02,  8.37794125e-01, -2.03937292e-04, -2.84892321e-02,
          1.29633434e-02,  9.80561599e-02,  1.73893981e-02,  6.45382628e-02,
          9.74833220e-03,  1.80178881e-03]], device='cuda:0')
diversed PGD initialization time: 0.1356
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01160252,  0.17754979, -0.00801839, -0.06127107,  0.02273193,
           0.06422380, -0.01778850,  0.00574346,  0.83019137, -0.03267457],
         [-0.01160252,  0.17754979, -0.00801839, -0.06127107,  0.02273193,
           0.06422380, -0.01778850,  0.00574346,  0.83019137, -0.03267457]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.18915232,  0.18556818,  0.23882087,  0.15481786,  0.11332600,
           0.19533829,  0.17180634, -0.65264159,  0.21022436]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1445 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2100 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 272, vnnlib ID: 272 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.31605324e-03, -7.37614185e-03,  5.90632856e-03,  9.85697985e-01,
         -2.78016217e-02,  1.68680921e-02, -4.19125706e-03, -2.02756077e-02,
         -5.76861203e-04,  1.62685663e-03]], device='cuda:0')
diversed PGD initialization time: 0.1244
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00580620, -0.00424636, -0.00136444,  0.74208093, -0.01637143,
           0.26284164, -0.00664116, -0.00598757, -0.00257049,  0.00613121],
         [-0.00580620, -0.00424636, -0.00136444,  0.74208093, -0.01637143,
           0.26284164, -0.00664116, -0.00598757, -0.00257049,  0.00613121]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.74788713, 0.74632728, 0.74344540, 0.75845236, 0.47923928,
          0.74872208, 0.74806851, 0.74465144, 0.73594970]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4073 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.31605324e-03, -7.37614185e-03,  5.90632856e-03,  9.85697985e-01,
         -2.78016217e-02,  1.68680921e-02, -4.19125706e-03, -2.02756077e-02,
         -5.76861203e-04,  1.62685663e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 47, 1, 17] with unstable size 46 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [46]; unstable size 46; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.29900950, -0.40034884, -0.45921731, -0.30533201, -1.25728464,
         -0.40366495, -0.45943391, -0.85595411, -0.33311957]], device='cuda:0') None
best_l after optimization: 1.7285807132720947
alpha/beta optimization time: 1.069896936416626
initial alpha-crown bounds: tensor([[ 0.28417534,  0.26956353,  0.24650976,  0.28813609, -0.40922248,
          0.27670056,  0.26253873,  0.24632215,  0.26385701]], device='cuda:0')
Worst class: (+ rhs) -0.40922248363494873
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.41567182540894
##### Instance 272 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2841753363609314.

Properties batch 1, size 1
Remaining timeout: 118.34263920783997
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2695635259151459.

Properties batch 2, size 1
Remaining timeout: 118.27685880661011
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24650976061820984.

Properties batch 3, size 1
Remaining timeout: 118.21070861816406
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2881360948085785.

Properties batch 4, size 1
Remaining timeout: 118.14561414718628
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40922248]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.31605324e-03, -7.37614185e-03,  5.90632856e-03,  9.85697985e-01,
        -2.78016217e-02,  1.68680921e-02, -4.19125706e-03, -2.02756077e-02,
        -5.76861203e-04,  1.62685663e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40922248]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 17
Node /17 input 0: size torch.Size([256]) unstable 25
-----------------
# of unstable neurons: 42
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 193] 
split level 1: [/input.3, 55] 
split level 2: [/input.3, 72] 
split level 3: [/input.3, 197] 
split level 4: [/input.3, 195] 
split level 5: [/input, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.006829977035522461
Time: prepare 0.0069    bound 0.1263    transfer 0.0002    finalize 0.0024    func 0.1358    
Accumulated time: func 0.1358    prepare 0.0073    bound 0.1263    transfer 0.0002    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.01594 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0111    solve 0.1359    add 0.0005    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0111    solve 0.1359    add 0.0005    
Current (lb-rhs): -0.01593923568725586
1 domains visited
Cumulative time: 0.1754002571105957

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 177] 
split level 1: [/input, 108] 
split level 2: [/input, 214] 
split level 3: [/input, 169] 
split level 4: [/input, 125] 
split level 5: [/input.3, 61] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.818771362304688e-05
Time: prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.1500    prepare 0.0150    bound 0.1307    transfer 0.0003    finalize 0.0048    
length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0124    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0459    set_bounds 0.0235    solve 0.1501    add 0.0006    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.22568297386169434


Properties batch 5, size 1
Remaining timeout: 117.83157515525818
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.27670055627822876.

Properties batch 6, size 1
Remaining timeout: 117.76110363006592
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.26253873109817505.

Properties batch 7, size 1
Remaining timeout: 117.69390296936035
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2463221549987793.

Properties batch 8, size 1
Remaining timeout: 117.62495279312134
##### Instance 272 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.26385700702667236.
Result: safe in 2.4489 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 273, vnnlib ID: 273 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00431508,  0.00275853,  0.01292528,  0.00415038,  0.94513386,
          0.00409446,  0.00282402, -0.02150670,  0.00361560,  0.00128318]],
       device='cuda:0')
diversed PGD initialization time: 0.1277
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.36556962,  0.01010349, -0.00361873,  0.01611932,  0.73966122,
          -0.03511175, -0.08672120,  0.02527364, -0.00126063, -0.06697130],
         [ 0.36556962,  0.01010349, -0.00361873,  0.01611932,  0.73966122,
          -0.03511175, -0.08672120,  0.02527364, -0.00126063, -0.06697130]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.37409160, 0.72955775, 0.74327993, 0.72354192, 0.77477294,
          0.82638240, 0.71438760, 0.74092185, 0.80663252]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4122 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00431508,  0.00275853,  0.01292528,  0.00415038,  0.94513386,
          0.00409446,  0.00282402, -0.02150670,  0.00361560,  0.00128318]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 46, 1, 13] with unstable size 45 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [45]; unstable size 45; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.67864513, -0.04742385, -0.27449408, -0.11197782, -0.23018029,
         -0.10829791, -0.36314332, -0.10213687, -0.14106449]], device='cuda:0') None
best_l after optimization: 0.14342454075813293
alpha/beta optimization time: 1.1315028667449951
initial alpha-crown bounds: tensor([[-0.41864330,  0.12698907,  0.00458451,  0.08124962,  0.05677964,
          0.12738498, -0.10170263,  0.12863092,  0.13815174]], device='cuda:0')
Worst class: (+ rhs) -0.4186432957649231
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.35554361343384
##### Instance 273 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41864330]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00431508,  0.00275853,  0.01292528,  0.00415038,  0.94513386,
         0.00409446,  0.00282402, -0.02150670,  0.00361560,  0.00128318],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41864330]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 26
-----------------
# of unstable neurons: 39
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 85] 
split level 2: [/input, 64] 
split level 3: [/input.3, 238] 
split level 4: [/input.3, 151] 
split level 5: [/input.3, 116] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.007107973098754883
Time: prepare 0.0068    bound 0.1333    transfer 0.0003    finalize 0.0025    func 0.1429    
Accumulated time: func 0.1429    prepare 0.0072    bound 0.1333    transfer 0.0003    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.08977 (6), -0.00911 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0110    solve 0.1430    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0110    solve 0.1430    add 0.0007    
Current (lb-rhs): -0.08977437019348145
2 domains visited
Cumulative time: 0.1820390224456787

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 179] [/input, 74] 
split level 1: [/input, 233] [/input, 233] 
split level 2: [/input.3, 189] [/input.3, 189] 
split level 3: [/input.3, 89] [/input.3, 89] 
split level 4: [/input.3, 152] [/input, 179] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0075    bound 0.0045    transfer 0.0001    finalize 0.0026    func 0.0148    
Accumulated time: func 0.1577    prepare 0.0152    bound 0.1379    transfer 0.0004    finalize 0.0051    
length of domains: 0
Time: pickout 0.0005    decision 0.0211    set_bounds 0.0116    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0436    set_bounds 0.0226    solve 0.1579    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2304844856262207


Properties batch 1, size 1
Remaining timeout: 118.03013968467712
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12698906660079956.

Properties batch 2, size 1
Remaining timeout: 117.95597648620605
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.004584506154060364.

Properties batch 3, size 1
Remaining timeout: 117.88926982879639
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08124962449073792.

Properties batch 4, size 1
Remaining timeout: 117.82345151901245
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.056779637932777405.

Properties batch 5, size 1
Remaining timeout: 117.75829744338989
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1273849755525589.

Properties batch 6, size 1
Remaining timeout: 117.69324541091919
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10170263]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00431508,  0.00275853,  0.01292528,  0.00415038,  0.94513386,
         0.00409446,  0.00282402, -0.02150670,  0.00361560,  0.00128318],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10170263]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 26
-----------------
# of unstable neurons: 39
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input, 179] 
split level 3: [/input.3, 124] 
split level 4: [/input.3, 238] 
split level 5: [/input.3, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0068    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0073    bound 0.0047    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05327892303466797


Properties batch 7, size 1
Remaining timeout: 117.55037641525269
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12863092124462128.

Properties batch 8, size 1
Remaining timeout: 117.47936844825745
##### Instance 273 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13815173506736755.
Result: safe in 2.5868 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 274, vnnlib ID: 274 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00250765,  0.00184980,  0.02523820, -0.01750620, -0.00157493,
         -0.00238361, -0.00317333,  0.98607707, -0.00250118, -0.01676448]],
       device='cuda:0')
diversed PGD initialization time: 0.1267
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05681172, -0.04433587,  0.75961870,  0.03054100, -0.02733883,
          -0.04344747, -0.01795892,  0.46001458, -0.04028627, -0.05972959],
         [-0.05681172, -0.04433587,  0.75961870,  0.03054100, -0.02733883,
          -0.04344747, -0.01795892,  0.46001458, -0.04028627, -0.05972959]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.51682627,  0.50435042, -0.29960412,  0.42947358,  0.48735341,
           0.50346208,  0.47797352,  0.50030082,  0.51974416]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2124 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 275, vnnlib ID: 275 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00934074, -0.02385458,  1.02075958, -0.00972030, -0.00243570,
          0.00299696, -0.01061524, -0.02178246, -0.00196180, -0.00988604]],
       device='cuda:0')
diversed PGD initialization time: 0.1311
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00254943, -0.00682186,  0.70928288,  0.02958883,  0.00504553,
          -0.00347679, -0.00088415, -0.01292491,  0.23472047,  0.00959232],
         [-0.00254943, -0.00682186,  0.70928288,  0.02958883,  0.00504553,
          -0.00347679, -0.00088415, -0.01292491,  0.23472047,  0.00959232]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.71183228, 0.71610475, 0.67969406, 0.70423734, 0.71275967,
          0.71016705, 0.72220778, 0.47456241, 0.69969058]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4017 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00934074, -0.02385458,  1.02075958, -0.00972030, -0.00243570,
          0.00299696, -0.01061524, -0.02178246, -0.00196180, -0.00988604]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 27, 1, 11] with unstable size 26 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.32308513, 0.41149423, 0.38801599, 0.46621904, 0.34248966, 0.41175741,
         0.48474222, 0.18661918, 0.46432415]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5235 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 276, vnnlib ID: 276 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.69418752e-04,  1.29962564e-02,  7.44813383e-02,  3.29196453e-03,
         -6.83788210e-03,  9.10618156e-03,  4.66481596e-03,  8.77438426e-01,
          2.06405669e-03, -1.57529265e-02]], device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.06325337,  0.07611692,  0.77461571,  0.00809734, -0.02795047,
           0.00603729, -0.00291122,  0.17720182, -0.04504272, -0.01309400],
         [-0.06325337,  0.07611692,  0.77461571,  0.00809734, -0.02795047,
           0.00603729, -0.00291122,  0.17720182, -0.04504272, -0.01309400]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.24045520,  0.10108490, -0.59741390,  0.16910449,  0.20515229,
           0.17116453,  0.18011305,  0.22224453,  0.19029582]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1329 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1798 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 277, vnnlib ID: 277 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00590654,  0.91364002, -0.00142898, -0.00996889,  0.00392776,
          0.03783861,  0.00621556,  0.03403765,  0.00320894,  0.00436407]],
       device='cuda:0')
diversed PGD initialization time: 0.1324
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02518695,  0.45583093,  0.01540485, -0.06219821,  0.01079689,
           0.01793598, -0.04142983,  0.04355872,  0.56198967, -0.00855960],
         [-0.02518695,  0.45583093,  0.01540485, -0.06219821,  0.01079689,
           0.01793598, -0.04142983,  0.04355872,  0.56198967, -0.00855960]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.48101789,  0.44042608,  0.51802915,  0.44503406,  0.43789494,
           0.49726075,  0.41227221, -0.10615873,  0.46439052]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1414 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 278, vnnlib ID: 278 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00483142, 0.12697403, 0.66123372, 0.03483735, 0.01322079, 0.03488058,
         0.00676991, 0.02393571, 0.02828219, 0.02576911]], device='cuda:0')
diversed PGD initialization time: 0.1145
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.98621133e-03,  8.46503675e-03, -3.98758054e-03,  9.98505116e-01,
          -1.49322934e-02, -1.40666589e-02, -1.15362182e-03, -5.51344454e-03,
          -5.15192747e-04,  1.82445347e-03],
         [-2.98621133e-03,  8.46503675e-03, -3.98758054e-03,  9.98505116e-01,
          -1.49322934e-02, -1.40666589e-02, -1.15362182e-03, -5.51344454e-03,
          -5.15192747e-04,  1.82445347e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.00136921e-03, -1.24526173e-02, -1.00249267e+00,  1.09447129e-02,
           1.00790784e-02, -2.83395872e-03,  1.52586401e-03, -3.47238779e-03,
          -5.81203401e-03]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1231 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1806 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 279, vnnlib ID: 279 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.03432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.008581236004829407, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.15982848e-04,  9.68245685e-01,  3.25959921e-03, -1.65186822e-03,
         -3.75764817e-03,  3.57426703e-04,  1.50319189e-04,  5.76005876e-03,
         -3.37810814e-03,  6.19627535e-04]], device='cuda:0')
diversed PGD initialization time: 0.1184
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03288788,  0.60216492, -0.03842458, -0.04821344, -0.01858974,
          -0.07837573, -0.08673784, -0.01978296,  0.71872497, -0.02403574],
         [-0.03288788,  0.60216492, -0.03842458, -0.04821344, -0.01858974,
          -0.07837573, -0.08673784, -0.01978296,  0.71872497, -0.02403574]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.63505280,  0.64058948,  0.65037835,  0.62075466,  0.68054068,
           0.68890274,  0.62194788, -0.11656004,  0.62620068]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1292 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2046 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 280, vnnlib ID: 280 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.02966965, 0.01010968, 0.32438859, 0.08251400, 0.01710362, 0.05244932,
         0.02739218, 0.33264402, 0.05147684, 0.03499024]], device='cuda:0')
diversed PGD initialization time: 0.1130
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03064544,  0.06609458,  0.35212600,  0.07088145, -0.00406367,
          -0.02236588, -0.02611431,  0.00133578,  0.56618309, -0.01286630],
         [-0.03064544,  0.06609458,  0.35212600,  0.07088145, -0.00406367,
          -0.02236588, -0.02611431,  0.00133578,  0.56618309, -0.01286630]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.03198123, -0.06475880, -0.35079020, -0.06954566,  0.00539945,
           0.02370166,  0.02745009, -0.56484729,  0.01420208]]],
       device='cuda:0')
number of violation:  4
Attack finished in 0.1215 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1945 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 281, vnnlib ID: 281 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.77976418e-03, -2.78709829e-02,  1.01124179e+00,  4.27396521e-02,
          2.02171504e-04, -2.91563720e-02, -9.30459797e-03, -2.09300667e-02,
         -3.17798555e-03, -1.09127536e-02]], device='cuda:0')
diversed PGD initialization time: 0.1135
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00267667, -0.07579489,  0.28160375,  0.61398411, -0.02336982,
          -0.18762520, -0.05540635, -0.12659632,  0.57648075, -0.04113095],
         [ 0.00267667, -0.07579489,  0.28160375,  0.61398411, -0.02336982,
          -0.18762520, -0.05540635, -0.12659632,  0.57648075, -0.04113095]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.27892709,  0.35739863, -0.33238035,  0.30497357,  0.46922895,
           0.33701012,  0.40820009, -0.29487699,  0.32273471]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1215 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1930 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 282, vnnlib ID: 282 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00286340, 0.76406091, 0.03370418, 0.00967224, 0.00144267, 0.03291371,
         0.00701807, 0.01759276, 0.08379453, 0.02102767]], device='cuda:0')
diversed PGD initialization time: 0.1349
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04574776,  0.01963119, -0.08411936, -0.09770982,  0.01939363,
          -0.09672590, -0.09720246,  0.31973112,  1.06950200, -0.06082685],
         [-0.04574776,  0.01963119, -0.08411936, -0.09770982,  0.01939363,
          -0.09672590, -0.09720246,  0.31973112,  1.06950200, -0.06082685]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.53789490e-02,  1.03750557e-01,  1.17341012e-01,  2.37565488e-04,
           1.16357096e-01,  1.16833657e-01, -3.00099909e-01, -1.04987085e+00,
           8.04580450e-02]]], device='cuda:0')
number of violation:  2
Attack finished in 0.1444 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2134 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 283, vnnlib ID: 283 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
         -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
          6.00062311e-04, -9.83896106e-03]], device='cuda:0')
diversed PGD initialization time: 0.1245
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.34457493e-01, -1.62351280e-02,  8.96923691e-02, -2.14323848e-02,
           1.48930401e-03,  1.30973980e-02,  1.21403486e-04, -4.32809889e-02,
          -8.86370987e-03,  2.15866685e-01],
         [ 7.34457493e-01, -1.62351280e-02,  8.96923691e-02, -2.14323848e-02,
           1.48930401e-03,  1.30973980e-02,  1.21403486e-04, -4.32809889e-02,
          -8.86370987e-03,  2.15866685e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.75069261, 0.64476514, 0.75588989, 0.73296821, 0.72136009,
          0.73433608, 0.77773845, 0.74332118, 0.51859081]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4248 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
         -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
          6.00062311e-04, -9.83896106e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 55, 1, 12] with unstable size 54 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [54]; unstable size 54; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.21546501, -0.66606539, -0.52858365, -0.29973438, -0.62204725,
         -0.29594678, -0.37326804, -0.55436504, -0.65805286]], device='cuda:0') None
best_l after optimization: -1.352505087852478
alpha/beta optimization time: 1.7007203102111816
initial alpha-crown bounds: tensor([[ 0.05371353, -0.41342443, -0.20205662, -0.05812371, -0.21485528,
         -0.10582930, -0.01902665, -0.06903976, -0.32386288]], device='cuda:0')
Worst class: (+ rhs) -0.41342443227767944
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.75769567489624
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05371353030204773.

Properties batch 1, size 1
Remaining timeout: 117.6711733341217
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41342443]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41342443]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input, 158] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 130] 
split level 5: [/input.3, 132] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0066    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0071    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05434870719909668


Properties batch 2, size 1
Remaining timeout: 117.5162661075592
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20205662]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20205662]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 236] 
split level 5: [/input.3, 200] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0108    solve 0.0100    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0108    solve 0.0100    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04883170127868652


Properties batch 3, size 1
Remaining timeout: 117.37082433700562
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05812371]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05812371]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 26] 
split level 2: [/input, 149] 
split level 3: [/input, 158] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 230] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0065    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0045    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0135    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0135    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0519711971282959


Properties batch 4, size 1
Remaining timeout: 117.22356343269348
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21485528]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21485528]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 132] 
split level 3: [/input, 158] 
split level 4: [/input.3, 236] 
split level 5: [/input.3, 162] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0064    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0046    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0115    solve 0.0135    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0115    solve 0.0135    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05347490310668945


Properties batch 5, size 1
Remaining timeout: 117.0748598575592
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10582930]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10582930]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 244] 
split level 2: [/input.3, 216] 
split level 3: [/input, 158] 
split level 4: [/input.3, 230] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.985664367675781e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0110    solve 0.0138    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0110    solve 0.0138    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05225849151611328


Properties batch 6, size 1
Remaining timeout: 116.92638659477234
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01902665]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01902665]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input, 149] 
split level 2: [/input.3, 31] 
split level 3: [/input, 158] 
split level 4: [/input.3, 230] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.224082946777344e-05
Time: prepare 0.0066    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0137    
Accumulated time: func 0.0137    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0112    solve 0.0138    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0112    solve 0.0138    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05309867858886719


Properties batch 7, size 1
Remaining timeout: 116.7767174243927
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06903976]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06903976]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 150] 
split level 2: [/input, 149] 
split level 3: [/input, 158] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 162] 

all verified at 10th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00547480583190918
Time: prepare 0.0072    bound 0.1223    transfer 0.0003    finalize 0.0037    func 0.1337    
Accumulated time: func 0.1337    prepare 0.0078    bound 0.1223    transfer 0.0003    finalize 0.0037    
length of domains: 0
Time: pickout 0.0004    decision 0.0244    set_bounds 0.0124    solve 0.1339    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0244    set_bounds 0.0124    solve 0.1339    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.1756291389465332


Properties batch 8, size 1
Remaining timeout: 116.50083637237549
##### Instance 283 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32386288]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00094318e+00, -1.14876777e-02,  2.84831226e-03, -9.57410038e-03,
        -6.41993806e-03,  7.59883970e-03,  2.40477175e-03, -1.77451372e-02,
         6.00062311e-04, -9.83896106e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32386288]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 56
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 80] 
split level 2: [/input, 149] 
split level 3: [/input.3, 159] 
split level 4: [/input.3, 26] 
split level 5: [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.937980651855469e-05
Time: prepare 0.0066    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0071    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05296635627746582

Result: safe in 3.6476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 284, vnnlib ID: 284 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00817149, 0.01446430, 0.03330220, 0.02913301, 0.65194571, 0.01906493,
         0.01400349, 0.06565259, 0.01700511, 0.14688310]], device='cuda:0')
diversed PGD initialization time: 0.1385
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.98190489e-03,  8.46319646e-03,  2.74820328e-02,  9.70524549e-03,
          -1.30147003e-02,  9.10547376e-03, -4.08858061e-04, -1.55736357e-02,
           1.86017454e-02,  9.55891490e-01],
         [ 2.98190489e-03,  8.46319646e-03,  2.74820328e-02,  9.70524549e-03,
          -1.30147003e-02,  9.10547376e-03, -4.08858061e-04, -1.55736357e-02,
           1.86017454e-02,  9.55891490e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01599661, -0.02147790, -0.04049673, -0.02271995, -0.02212017,
          -0.01260584,  0.00255894, -0.03161645, -0.96890616]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1478 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2403 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 285, vnnlib ID: 285 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.31170517e-04,  9.70745325e-01,  1.56700611e-04, -5.92699647e-03,
         -6.15923107e-03,  4.48816270e-03, -5.28837740e-03,  6.38365746e-04,
          4.70572710e-03,  1.57397017e-02]], device='cuda:0')
diversed PGD initialization time: 0.1305
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00638318,  0.27278081, -0.00422902, -0.03007251, -0.01593843,
          -0.01000299, -0.04552552,  0.27549958,  0.49531212,  0.00997408],
         [ 0.00638318,  0.27278081, -0.00422902, -0.03007251, -0.01593843,
          -0.01000299, -0.04552552,  0.27549958,  0.49531212,  0.00997408]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.26639763,  0.27700984,  0.30285332,  0.28871924,  0.28278381,
           0.31830633, -0.00271878, -0.22253132,  0.26280671]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1390 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2135 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 286, vnnlib ID: 286 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00403999, -0.00808323,  0.00099453, -0.01128195,  0.80430007,
          0.04806478,  0.00584018,  0.01411499,  0.06017677,  0.07524915]],
       device='cuda:0')
diversed PGD initialization time: 0.1215
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02783230, -0.03373346,  0.03333274, -0.03112791, -0.00105133,
          -0.01682679,  0.03919685, -0.00862682,  1.02352285, -0.01835481],
         [-0.02783230, -0.03373346,  0.03333274, -0.03112791, -0.00105133,
          -0.01682679,  0.03919685, -0.00862682,  1.02352285, -0.01835481]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02678097,  0.03268213, -0.03438407,  0.03007658,  0.01577545,
          -0.04024818,  0.00757549, -1.02457416,  0.01730348]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1309 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1975 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 287, vnnlib ID: 287 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00311155,  0.01144221,  0.03765531,  0.00726800, -0.04644458,
          0.01462993,  0.00850128, -0.03858373,  0.01207695,  0.98303205]],
       device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02822870, -0.03367326,  0.03383841, -0.03156599, -0.00183624,
          -0.01639469,  0.03896896, -0.00873724,  1.02387714, -0.01705767],
         [-0.02822870, -0.03367326,  0.03383841, -0.03156599, -0.00183624,
          -0.01639469,  0.03896896, -0.00873724,  1.02387714, -0.01705767]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.11710317e-02,  1.66155919e-02, -5.08960783e-02,  1.45083219e-02,
          -1.52214356e-02, -6.62982464e-04, -5.60266301e-02, -8.32043588e-03,
          -1.04093480e+00]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.6489 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 288, vnnlib ID: 288 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.53650102e-03,  6.60426915e-03,  2.15996951e-02, -1.28152668e-02,
          1.39452517e-04,  6.44733250e-01,  2.66035736e-01,  4.36972082e-03,
          3.40053923e-02,  1.91401020e-02]], device='cuda:0')
diversed PGD initialization time: 0.1252
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.35475174e-02,  5.60738146e-04,  7.88052380e-03,  1.60886049e-02,
           1.37865543e-04,  3.59371305e-04,  9.59211946e-01, -9.38966870e-04,
           1.41815618e-02,  1.03570297e-02],
         [ 1.35475174e-02,  5.60738146e-04,  7.88052380e-03,  1.60886049e-02,
           1.37865543e-04,  3.59371305e-04,  9.59211946e-01, -9.38966870e-04,
           1.41815618e-02,  1.03570297e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.31881461e-02, -2.01366842e-04, -7.52115250e-03, -1.57292336e-02,
           2.21505761e-04, -9.58852589e-01,  1.29833817e-03, -1.38221905e-02,
          -9.99765843e-03]]], device='cuda:0')
number of violation:  7
Attack finished in 0.1340 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1832 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 289, vnnlib ID: 289 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.19890848e-03, -7.95841217e-04, -1.72124803e-03, -5.94280660e-04,
          6.78814575e-03,  6.97164983e-03,  1.13326311e-03, -9.05811787e-04,
          4.17713076e-03,  9.98625875e-01]], device='cuda:0')
diversed PGD initialization time: 0.1446
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02198378, -0.01453862,  0.02501439, -0.01238522, -0.00512903,
          -0.00237765,  0.00329845, -0.00736986,  0.99196935, -0.00127142],
         [-0.02198378, -0.01453862,  0.02501439, -0.01238522, -0.00512903,
          -0.00237765,  0.00329845, -0.00736986,  0.99196935, -0.00127142]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02071236,  0.01326720, -0.02628580,  0.01111380,  0.00385761,
           0.00110623, -0.00456987,  0.00609844, -0.99324077]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1535 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2024 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 290, vnnlib ID: 290 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00351512, -0.00994703,  0.00180942, -0.00614150, -0.00729699,
         -0.00866195, -0.00666524, -0.01253696,  0.00125126, -0.00720511]],
       device='cuda:0')
diversed PGD initialization time: 0.1275
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.94920170,  0.01011929,  0.01553358,  0.01237401,  0.00746626,
          -0.00746885, -0.03617580,  0.01264372,  0.00703596,  0.00675859],
         [ 0.94920170,  0.01011929,  0.01553358,  0.01237401,  0.00746626,
          -0.00746885, -0.03617580,  0.01264372,  0.00703596,  0.00675859]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93908238, 0.93366814, 0.93682772, 0.94173545, 0.95667052,
          0.98537749, 0.93655801, 0.94216573, 0.94244313]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3933 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00351512, -0.00994703,  0.00180942, -0.00614150, -0.00729699,
         -0.00866195, -0.00666524, -0.01253696,  0.00125126, -0.00720511]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 14, 1, 9] with unstable size 13 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.59710956, 0.51181185, 0.58543223, 0.60704321, 0.56378943, 0.54837441,
         0.58400965, 0.59292006, 0.59257501]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4980 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 291, vnnlib ID: 291 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 4.39564884e-03, -6.00337982e-04,  4.37040627e-03,  6.78882748e-03,
         -3.03993374e-03,  5.82762063e-04,  1.00095010e+00, -2.49482691e-03,
          2.67008692e-03,  5.13811409e-03]], device='cuda:0')
diversed PGD initialization time: 0.1240
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.46724656,  0.02814908,  0.04580580,  0.02438489, -0.02147071,
          -0.00704042,  0.35431719,  0.01222895,  0.01569930,  0.05547123],
         [ 0.46724656,  0.02814908,  0.04580580,  0.02438489, -0.02147071,
          -0.00704042,  0.35431719,  0.01222895,  0.01569930,  0.05547123]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.11292937,  0.32616812,  0.30851138,  0.32993230,  0.37578791,
           0.36135760,  0.34208822,  0.33861789,  0.29884595]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1332 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1929 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 292, vnnlib ID: 292 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.62405893e-03,  2.00667232e-03,  6.84590638e-03,  3.86990607e-04,
         -5.00137731e-03,  1.27046108e-02,  2.89206579e-03, -1.47104859e-02,
          1.57490298e-02,  9.85099077e-01]], device='cuda:0')
diversed PGD initialization time: 0.1281
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1380 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2116 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 293, vnnlib ID: 293 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
         -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465]],
       device='cuda:0')
diversed PGD initialization time: 0.1334
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.68009400,  0.00084642, -0.01452358, -0.00679867, -0.01047586,
           0.42454523,  0.00210421,  0.01839975,  0.05995520, -0.06396666],
         [ 0.68009400,  0.00084642, -0.01452358, -0.00679867, -0.01047586,
           0.42454523,  0.00210421,  0.01839975,  0.05995520, -0.06396666]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.67924756, 0.69461757, 0.68689269, 0.69056988, 0.25554878,
          0.67798978, 0.66169423, 0.62013882, 0.74406064]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4145 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
         -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 69, 1, 13] with unstable size 68 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [68]; unstable size 68; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 68] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.65602124, -1.22622895, -1.22597718, -0.89001971, -1.77858901,
         -1.13700128, -1.37646890, -1.81205297, -1.27531493]], device='cuda:0') None
best_l after optimization: -1.572516918182373
alpha/beta optimization time: 1.7034296989440918
initial alpha-crown bounds: tensor([[ 0.05029568, -0.08371553, -0.12503996,  0.01653772, -0.53163540,
         -0.10384282, -0.37758619, -0.37284178, -0.04468854]], device='cuda:0')
Worst class: (+ rhs) -0.5316354036331177
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.7997977733612
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05029568076133728.

Properties batch 1, size 1
Remaining timeout: 117.72803068161011
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08371553]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08371553]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 28] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 254] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 170] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.0101    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.0101    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.049088478088378906


Properties batch 2, size 1
Remaining timeout: 117.5888135433197
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12503996]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12503996]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 254] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 28] 
split level 5: [/input.3, 170] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.866455078125e-05
Time: prepare 0.0034    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0039    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0108    solve 0.0099    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0108    solve 0.0099    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.048175811767578125


Properties batch 3, size 1
Remaining timeout: 117.44663667678833
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.01653771847486496.

Properties batch 4, size 1
Remaining timeout: 117.3750786781311
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53163540]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53163540]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 254] 
split level 3: [/input.3, 236] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.008630990982055664
Time: prepare 0.0035    bound 0.1927    transfer 0.0003    finalize 0.0024    func 0.1990    
Accumulated time: func 0.1990    prepare 0.0040    bound 0.1927    transfer 0.0003    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.04280 (6), -0.00838 (6), 
length of domains: 2
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.1991    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.1991    add 0.0009    
Current (lb-rhs): -0.04279685020446777
2 domains visited
Cumulative time: 0.23899388313293457

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 149] 
split level 1: [/input, 149] [/input, 55] 
split level 2: [/input, 55] [/input, 254] 
split level 3: [/input, 254] [/input, 245] 
split level 4: [/input, 245] [/input.3, 115] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0075    bound 0.0046    transfer 0.0001    finalize 0.0026    func 0.0149    
Accumulated time: func 0.2139    prepare 0.0119    bound 0.1973    transfer 0.0004    finalize 0.0050    
length of domains: 0
Time: pickout 0.0007    decision 0.0214    set_bounds 0.0104    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0447    set_bounds 0.0213    solve 0.2140    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2867882251739502


Properties batch 5, size 1
Remaining timeout: 116.99735713005066
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10384282]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10384282]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 244] 
split level 2: [/input.3, 254] 
split level 3: [/input.3, 28] 
split level 4: [/input, 55] 
split level 5: [/input.3, 216] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.940696716308594e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052724361419677734


Properties batch 6, size 1
Remaining timeout: 116.85020112991333
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37758619]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37758619]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 124] 
split level 2: [/input, 55] 
split level 3: [/input.3, 254] 
split level 4: [/input.3, 133] 
split level 5: [/input.3, 28] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.890296936035156e-05
Time: prepare 0.0065    bound 0.0044    transfer 0.0001    finalize 0.0025    func 0.0135    
Accumulated time: func 0.0135    prepare 0.0070    bound 0.0044    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0136    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0111    solve 0.0136    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.051921844482421875


Properties batch 7, size 1
Remaining timeout: 116.70396113395691
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37284178]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37284178]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 150] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 254] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009174108505249023
Time: prepare 0.0034    bound 0.1991    transfer 0.0003    finalize 0.0023    func 0.2053    
Accumulated time: func 0.2053    prepare 0.0039    bound 0.1991    transfer 0.0003    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.03838 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0107    solve 0.2054    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0107    solve 0.2054    add 0.0006    
Current (lb-rhs): -0.03837776184082031
1 domains visited
Cumulative time: 0.24426865577697754

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 254] 
split level 1: [/input, 245] 
split level 2: [/input.3, 181] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 71] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0074    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0148    
Accumulated time: func 0.2201    prepare 0.0118    bound 0.2039    transfer 0.0004    finalize 0.0049    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0122    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0467    set_bounds 0.0229    solve 0.2202    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2957913875579834


Properties batch 8, size 1
Remaining timeout: 116.31466031074524
##### Instance 293 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04468854]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99949753, -0.00640095,  0.01320261,  0.00485738, -0.00442319,
        -0.01722344, -0.00721346, -0.00918069, -0.00530280, -0.00641465],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04468854]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 49
-----------------
# of unstable neurons: 62
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 254] 
split level 2: [/input.3, 170] 
split level 3: [/input.3, 155] 
split level 4: [/input, 149] 
split level 5: [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.271766662597656e-05
Time: prepare 0.0068    bound 0.0049    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0073    bound 0.0049    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0116    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0116    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.054110050201416016

Result: safe in 3.8400 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 294, vnnlib ID: 294 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
         -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
         -2.24035978e-03,  1.40997767e-03]], device='cuda:0')
diversed PGD initialization time: 0.1129
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00734226,  0.64879692,  0.02976076, -0.00706089,  0.05653586,
           0.09112366,  0.01942788,  0.06996197,  0.04909028,  0.03591770],
         [-0.00734226,  0.64879692,  0.02976076, -0.00706089,  0.05653586,
           0.09112366,  0.01942788,  0.06996197,  0.04909028,  0.03591770]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.65613919, 0.61903614, 0.65585780, 0.59226108, 0.55767328,
          0.62936902, 0.57883495, 0.59970665, 0.61287922]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4042 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
         -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
         -2.24035978e-03,  1.40997767e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 101, 1, 31] with unstable size 100 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [100]; unstable size 100; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 100] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.23537859, -0.54829997, -1.55405521, -0.73347032, -0.98101062,
         -0.48420048, -0.58141458, -0.98507428, -1.06011987]], device='cuda:0') None
best_l after optimization: -3.2068099975585938
alpha/beta optimization time: 1.7062788009643555
initial alpha-crown bounds: tensor([[ 0.03165150, -0.07075474, -1.14883542, -0.26524445, -0.52556098,
         -0.09209526, -0.15262660, -0.42110530, -0.56223857]], device='cuda:0')
Worst class: (+ rhs) -1.1488354206085205
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.79089903831482
##### Instance 294 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.03165149688720703.

Properties batch 1, size 1
Remaining timeout: 117.71647620201111
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07075474]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07075474]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 72] 
split level 2: [/input.3, 121] 
split level 3: [/input.3, 232] 
split level 4: [/input, 209] 
split level 5: [/input.3, 21] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0114    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0114    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053981781005859375


Properties batch 2, size 1
Remaining timeout: 117.56825184822083
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.14883542]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.14883542]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 200] 
split level 4: [/input.3, 143] 
split level 5: [/input, 209] 
pruning_in_iteration open status: True
ratio of positive domain = 43 / 64 = 0.671875
pruning-in-iteration extra time: 0.009424448013305664
Time: prepare 0.0066    bound 0.2112    transfer 0.0003    finalize 0.0028    func 0.2211    
Accumulated time: func 0.2211    prepare 0.0071    bound 0.2112    transfer 0.0003    finalize 0.0028    
Current worst splitting domains lb-rhs (depth):
-0.69675 (6), -0.66006 (6), -0.37956 (6), -0.35880 (6), -0.28886 (6), -0.25081 (6), -0.22676 (6), -0.17460 (6), -0.16217 (6), -0.12858 (6), -0.11703 (6), -0.11611 (6), -0.11105 (6), -0.09271 (6), -0.09092 (6), -0.08426 (6), -0.03756 (6), -0.03611 (6), -0.03252 (6), -0.02257 (6), 
length of domains: 21
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0111    solve 0.2212    add 0.0012    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0111    solve 0.2212    add 0.0012    
Current (lb-rhs): -0.6967501640319824
21 domains visited
Cumulative time: 0.2613813877105713

BaB round 2
batch: 21
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] [/input.3, 220] [/input.3, 217] [/input, 100] [/input, 171] [/input, 110] [/input, 110] [/input, 110] [/input, 175] [/input, 110] 
split level 1: [/input, 100] [/input, 100] [/input, 100] [/input, 171] [/input, 138] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 84 = 0.7857142857142857
pruning-in-iteration extra time: 0.009395122528076172
Time: prepare 0.0098    bound 0.2094    transfer 0.0004    finalize 0.0038    func 0.2234    
Accumulated time: func 0.4445    prepare 0.0174    bound 0.4206    transfer 0.0007    finalize 0.0066    
Current worst splitting domains lb-rhs (depth):
-0.43319 (8), -0.40638 (8), -0.35539 (8), -0.31638 (8), -0.12182 (8), -0.11177 (8), -0.10796 (8), -0.10418 (8), -0.09763 (8), -0.09424 (8), -0.09133 (8), -0.08197 (8), -0.06801 (8), -0.06279 (8), -0.06044 (8), -0.04701 (8), -0.01797 (8), -0.00942 (8), 
length of domains: 18
Time: pickout 0.0007    decision 0.0344    set_bounds 0.0110    solve 0.2235    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0578    set_bounds 0.0221    solve 0.4447    add 0.0022    
Current (lb-rhs): -0.4331897497177124
39 domains visited
Cumulative time: 0.5324501991271973

BaB round 3
batch: 18
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 171] [/input, 110] [/input, 175] [/input, 138] [/input, 110] [/input, 138] [/input, 110] [/input, 110] [/input, 138] 
split level 1: [/input, 227] [/input, 227] [/input, 227] [/input, 100] [/input, 227] [/input, 227] [/input, 100] [/input, 227] [/input, 100] [/input, 100] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 72 = 0.9166666666666666
pruning-in-iteration extra time: 0.009415149688720703
Time: prepare 0.0083    bound 0.2070    transfer 0.0003    finalize 0.0038    func 0.2194    
Accumulated time: func 0.6640    prepare 0.0262    bound 0.6277    transfer 0.0009    finalize 0.0104    
Current worst splitting domains lb-rhs (depth):
-0.15640 (10), -0.06171 (10), -0.04102 (10), -0.03393 (10), -0.03291 (10), -0.00123 (10), 
length of domains: 6
Time: pickout 0.0006    decision 0.0321    set_bounds 0.0093    solve 0.2195    add 0.0010    
Accumulated time: pickout 0.0017    decision 0.0899    set_bounds 0.0314    solve 0.6642    add 0.0031    
Current (lb-rhs): -0.1563969850540161
45 domains visited
Cumulative time: 0.7954626083374023

BaB round 4
batch: 6
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 175] [/input, 175] [/input, 175] [/input, 175] [/input, 175] 
split level 1: [/input, 138] [/input, 227] [/input, 138] [/input, 138] [/input, 227] [/input, 138] 
split level 2: [/input, 154] [/input, 133] [/input, 154] [/input, 154] [/input, 154] [/input, 154] 
split level 3: [/input, 133] [/input, 154] [/input, 133] [/input, 133] [/input, 133] [/input, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.224082946777344e-05
Time: prepare 0.0108    bound 0.0045    transfer 0.0001    finalize 0.0035    func 0.0190    
Accumulated time: func 0.6830    prepare 0.0374    bound 0.6322    transfer 0.0011    finalize 0.0139    
length of domains: 0
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0142    solve 0.0190    add 0.0001    
Accumulated time: pickout 0.0023    decision 0.1148    set_bounds 0.0456    solve 0.6832    add 0.0032    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
45 domains visited
Cumulative time: 0.8546779155731201


Properties batch 3, size 1
Remaining timeout: 116.61708545684814
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26524445]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26524445]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 18] 
split level 3: [/input.3, 43] 
split level 4: [/input.3, 110] 
split level 5: [/input, 100] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0069    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0074    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0113    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0113    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0534520149230957


Properties batch 4, size 1
Remaining timeout: 116.4678041934967
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.52556098]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.52556098]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 193] 
split level 3: [/input.3, 197] 
split level 4: [/input.3, 72] 
split level 5: [/input.3, 55] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008869409561157227
Time: prepare 0.0036    bound 0.1974    transfer 0.0003    finalize 0.0022    func 0.2038    
Accumulated time: func 0.2038    prepare 0.0041    bound 0.1974    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.00181 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0111    solve 0.2039    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0111    solve 0.2039    add 0.0007    
Current (lb-rhs): -0.001807570457458496
1 domains visited
Cumulative time: 0.24431443214416504

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] 
split level 1: [/input, 100] 
split level 2: [/input, 171] 
split level 3: [/input, 209] 
split level 4: [/input, 138] 
split level 5: [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.2181    prepare 0.0119    bound 0.2020    transfer 0.0005    finalize 0.0046    
length of domains: 0
Time: pickout 0.0006    decision 0.0242    set_bounds 0.0106    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0481    set_bounds 0.0217    solve 0.2183    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29439616203308105


Properties batch 5, size 1
Remaining timeout: 116.07615876197815
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09209526]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09209526]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 244] 
split level 2: [/input.3, 43] 
split level 3: [/input.3, 55] 
split level 4: [/input.3, 153] 
split level 5: [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.2479248046875e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05405139923095703


Properties batch 6, size 1
Remaining timeout: 115.925288438797
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15262660]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15262660]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 126] 
split level 2: [/input.3, 13] 
split level 3: [/input.3, 69] 
split level 4: [/input.3, 43] 
split level 5: [/input.3, 217] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.489059448242188e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0005    decision 0.0231    set_bounds 0.0108    solve 0.0100    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0231    set_bounds 0.0108    solve 0.0100    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04834794998168945


Properties batch 7, size 1
Remaining timeout: 115.7819893360138
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42110530]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42110530]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 43] 
split level 4: [/input.3, 30] 
split level 5: [/input.3, 121] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00886392593383789
Time: prepare 0.0036    bound 0.1966    transfer 0.0004    finalize 0.0022    func 0.2030    
Accumulated time: func 0.2030    prepare 0.0041    bound 0.1966    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.02445 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.2031    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.2031    add 0.0007    
Current (lb-rhs): -0.024454355239868164
1 domains visited
Cumulative time: 0.2422170639038086

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 211] 
split level 1: [/input, 198] 
split level 2: [/input, 216] 
split level 3: [/input, 188] 
split level 4: [/input, 150] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.989738464355469e-05
Time: prepare 0.0074    bound 0.0052    transfer 0.0001    finalize 0.0024    func 0.0152    
Accumulated time: func 0.2182    prepare 0.0120    bound 0.2017    transfer 0.0006    finalize 0.0046    
length of domains: 0
Time: pickout 0.0005    decision 0.0245    set_bounds 0.0106    solve 0.0153    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0475    set_bounds 0.0215    solve 0.2184    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29355716705322266


Properties batch 8, size 1
Remaining timeout: 115.3923568725586
##### Instance 294 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.56223857]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.57494098e-04,  9.63204503e-01,  4.05466557e-03, -1.76837295e-03,
        -3.94506380e-03, -4.50909138e-05,  9.71294940e-04,  5.55922091e-03,
        -2.24035978e-03,  1.40997767e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.56223857]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 31
Node /17 input 0: size torch.Size([256]) unstable 71
-----------------
# of unstable neurons: 102
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 159] 
split level 4: [/input, 100] 
split level 5: [/input.3, 43] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0069    bound 0.0052    transfer 0.0001    finalize 0.0025    func 0.0148    
Accumulated time: func 0.0148    prepare 0.0075    bound 0.0052    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0114    solve 0.0148    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0545041561126709

Result: safe in 4.7609 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 295, vnnlib ID: 295 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.07580116e-03, -1.31901652e-02, -1.75343454e-03, -1.00400150e-02,
         -2.86085121e-02,  1.02809298e+00, -1.57665834e-03, -3.15846503e-02,
         -9.02482867e-03, -3.15256417e-04]], device='cuda:0')
diversed PGD initialization time: 0.1271
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00493338, -0.01488442, -0.01937324, -0.02662671, -0.01604599,
           0.99523968, -0.03842035, -0.03521495,  0.13472840, -0.00338246],
         [-0.00493338, -0.01488442, -0.01937324, -0.02662671, -0.01604599,
           0.99523968, -0.03842035, -0.03521495,  0.13472840, -0.00338246]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.00017309, 1.01012409, 1.01461291, 1.02186632, 1.01128566,
          1.03366005, 1.03045464, 0.86051130, 0.99862212]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4205 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-5.07580116e-03, -1.31901652e-02, -1.75343454e-03, -1.00400150e-02,
         -2.86085121e-02,  1.02809298e+00, -1.57665834e-03, -3.15846503e-02,
         -9.02482867e-03, -3.15256417e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 34, 1, 18] with unstable size 33 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [33]; unstable size 33; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.28147984, -0.45879483, -0.47683519, -1.11568189, -0.35724360,
         -0.87609029, -0.48073968, -1.38517904, -0.41760811]], device='cuda:0') None
best_l after optimization: 0.2836049497127533
alpha/beta optimization time: 1.6616737842559814
initial alpha-crown bounds: tensor([[ 0.13460319,  0.12124114,  0.11351474, -0.50025576,  0.15329535,
          0.19177938,  0.13940692, -0.18332152,  0.11334155]], device='cuda:0')
Worst class: (+ rhs) -0.5002557635307312
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.81661796569824
##### Instance 295 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13460318744182587.

Properties batch 1, size 1
Remaining timeout: 117.744131565094
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12124114483594894.

Properties batch 2, size 1
Remaining timeout: 117.67742276191711
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1135147362947464.

Properties batch 3, size 1
Remaining timeout: 117.61291337013245
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50025576]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.07580116e-03, -1.31901652e-02, -1.75343454e-03, -1.00400150e-02,
        -2.86085121e-02,  1.02809298e+00, -1.57665834e-03, -3.15846503e-02,
        -9.02482867e-03, -3.15256417e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50025576]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 18
Node /17 input 0: size torch.Size([256]) unstable 22
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 220] 
split level 3: [/input.3, 31] 
split level 4: [/input, 17] 
split level 5: [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009146690368652344
Time: prepare 0.0068    bound 0.2063    transfer 0.0004    finalize 0.0034    func 0.2170    
Accumulated time: func 0.2170    prepare 0.0073    bound 0.2063    transfer 0.0004    finalize 0.0034    
Current worst splitting domains lb-rhs (depth):
-0.00432 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0113    solve 0.2171    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0113    solve 0.2171    add 0.0008    
Current (lb-rhs): -0.004315495491027832
1 domains visited
Cumulative time: 0.25691771507263184

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 87] 
split level 2: [/input, 222] 
split level 3: [/input, 227] 
split level 4: [/input, 209] 
split level 5: [/input, 100] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.654594421386719e-05
Time: prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0023    func 0.0146    
Accumulated time: func 0.2316    prepare 0.0152    bound 0.2110    transfer 0.0005    finalize 0.0057    
length of domains: 0
Time: pickout 0.0007    decision 0.0239    set_bounds 0.0116    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0469    set_bounds 0.0229    solve 0.2318    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.30825018882751465


Properties batch 4, size 1
Remaining timeout: 117.21545505523682
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1532953530550003.

Properties batch 5, size 1
Remaining timeout: 117.14292478561401
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19177937507629395.

Properties batch 6, size 1
Remaining timeout: 117.07590532302856
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13940691947937012.

Properties batch 7, size 1
Remaining timeout: 117.01129746437073
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18332152]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.07580116e-03, -1.31901652e-02, -1.75343454e-03, -1.00400150e-02,
        -2.86085121e-02,  1.02809298e+00, -1.57665834e-03, -3.15846503e-02,
        -9.02482867e-03, -3.15256417e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18332152]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 18
Node /17 input 0: size torch.Size([256]) unstable 22
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 153] 
split level 5: [/input.3, 162] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.034706115722656e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0017    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.0100    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.0100    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04813265800476074


Properties batch 8, size 1
Remaining timeout: 116.87243795394897
##### Instance 295 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1133415549993515.
Result: safe in 3.1972 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 296, vnnlib ID: 296 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00189631,  0.00460735,  0.00510068,  0.00580558, -0.00722648,
          0.00879319,  0.00195397, -0.00101946,  0.00704807,  0.97879851]],
       device='cuda:0')
diversed PGD initialization time: 0.1355
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00843607, 0.01277300, 0.03087728, 0.02416224, 0.49901998,
          0.01215880, 0.01403005, 0.02140744, 0.01144038, 0.36927432],
         [0.00843607, 0.01277300, 0.03087728, 0.02416224, 0.49901998,
          0.01215880, 0.01403005, 0.02140744, 0.01144038, 0.36927432]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.36083826,  0.35650131,  0.33839703,  0.34511209, -0.12974566,
           0.35711551,  0.35524428,  0.34786689,  0.35783392]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1444 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1928 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 297, vnnlib ID: 297 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01098577, 0.01541807, 0.03307338, 0.03472100, 0.01841019, 0.03112879,
         0.01355752, 0.75772136, 0.02588174, 0.03225449]], device='cuda:0')
diversed PGD initialization time: 0.1368
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01841484, -0.04302329, -0.01833917, -0.08915159, -0.02417228,
           0.01361430, -0.02606113, -0.04410033,  0.62355900,  0.60671538],
         [-0.01841484, -0.04302329, -0.01833917, -0.08915159, -0.02417228,
           0.01361430, -0.02606113, -0.04410033,  0.62355900,  0.60671538]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02568549, -0.00107704, -0.02576116,  0.04505126, -0.01992805,
          -0.05771463, -0.01803920, -0.66765934, -0.65081573]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1468 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2359 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 298, vnnlib ID: 298 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00706117, -0.02815659,  0.02968852,  0.46559381, -0.01595617,
          0.06832974,  0.00853441, -0.06962320,  0.01777329,  0.52257586]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00706117, -0.02815659,  0.02968849,  0.46559379, -0.01595615,
           0.06832968,  0.00853440, -0.06962319,  0.01777329,  0.52257597],
         [-0.00706117, -0.02815659,  0.02968849,  0.46559379, -0.01595615,
           0.06832968,  0.00853440, -0.06962319,  0.01777329,  0.52257597]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47265494,  0.49375039,  0.43590528,  0.48154995,  0.39726412,
           0.45705938,  0.53521699,  0.44782048, -0.05698219]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0876 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 299, vnnlib ID: 299 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.13927841e-05, -2.76147574e-03,  6.58036768e-03,  6.35011494e-03,
          9.44779456e-01,  7.48433918e-03,  4.47871909e-03, -5.17028570e-03,
          4.23301011e-03,  2.37681046e-02]], device='cuda:0')
diversed PGD initialization time: 0.1369
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 8.43760371e-03, -1.05545670e-02,  2.82187760e-03,  4.10608947e-04,
           7.02079386e-04,  2.83778086e-02,  6.85502589e-03, -5.86432219e-03,
           3.17522362e-02,  9.43498254e-01],
         [ 8.43760371e-03, -1.05545670e-02,  2.82187760e-03,  4.10608947e-04,
           7.02079386e-04,  2.83778086e-02,  6.85502589e-03, -5.86432219e-03,
           3.17522362e-02,  9.43498254e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-7.73552433e-03,  1.12566464e-02, -2.11979821e-03,  2.91470438e-04,
          -2.76757292e-02, -6.15294650e-03,  6.56640157e-03, -3.10501568e-02,
          -9.42796171e-01]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1457 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1973 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 300, vnnlib ID: 300 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.86636299e-03,  8.96468759e-04, -1.12861395e-04, -2.21505761e-05,
          5.92552498e-03,  7.64256716e-03,  8.17187130e-04, -5.67398965e-03,
          3.61219049e-03,  9.99497652e-01]], device='cuda:0')
diversed PGD initialization time: 0.1452
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03154259, -0.01769206,  0.02224280, -0.00908694, -0.00147699,
          -0.00279698,  0.00374401, -0.01415744,  0.97283262,  0.03080221],
         [-0.03154259, -0.01769206,  0.02224280, -0.00908694, -0.00147699,
          -0.00279698,  0.00374401, -0.01415744,  0.97283262,  0.03080221]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.06234480,  0.04849427,  0.00855941,  0.03988915,  0.03227920,
           0.03359919,  0.02705820,  0.04495966, -0.94203043]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1543 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2029 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 301, vnnlib ID: 301 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00503006, -0.00570239, -0.00256655,  0.00953944, -0.02517985,
          0.03418662,  1.01087606, -0.03454359, -0.00610901,  0.03989652]],
       device='cuda:0')
diversed PGD initialization time: 0.1287
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05832845,  0.00142778,  0.04743531, -0.02953106, -0.00627904,
           0.72067851,  0.27386594, -0.04115462,  0.06551966,  0.00614035],
         [-0.05832845,  0.00142778,  0.04743531, -0.02953106, -0.00627904,
           0.72067851,  0.27386594, -0.04115462,  0.06551966,  0.00614035]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33219439,  0.27243817,  0.22643062,  0.30339700,  0.28014499,
          -0.44681257,  0.31502056,  0.20834628,  0.26772559]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1376 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2198 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 302, vnnlib ID: 302 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.26295805e-05,  4.42527235e-04,  8.27735662e-03,  1.19161904e-02,
         -3.25387716e-03, -4.55509126e-03,  1.00227606e+00, -2.98853219e-03,
          8.90263915e-03,  7.57548958e-03]], device='cuda:0')
diversed PGD initialization time: 0.1255
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.05362944, -0.00258114, -0.00579813,  0.00696996, -0.00543246,
          -0.01253074,  0.98741615, -0.00463995,  0.00241224,  0.00262645],
         [ 0.05362944, -0.00258114, -0.00579813,  0.00696996, -0.00543246,
          -0.01253074,  0.98741615, -0.00463995,  0.00241224,  0.00262645]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.93378669, 0.98999727, 0.99321425, 0.98044622, 0.99284863,
          0.99994689, 0.99205613, 0.98500389, 0.98478973]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4173 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 6.26295805e-05,  4.42527235e-04,  8.27735662e-03,  1.19161904e-02,
         -3.25387716e-03, -4.55509126e-03,  1.00227606e+00, -2.98853219e-03,
          8.90263915e-03,  7.57548958e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 26, 1, 16] with unstable size 25 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [25]; unstable size 25; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.29536510,  0.04580851, -0.04883340, -0.04900280, -0.28433174,
         -0.05448639, -0.78494924, -0.02079999, -0.06003398]], device='cuda:0') None

all verified at 5th iter
best_l after optimization: 2.903325319290161
alpha/beta optimization time: 0.09593987464904785
initial alpha-crown bounds: tensor([[0.29716709, 0.42258453, 0.35540766, 0.36029661, 0.28530696, 0.34747297,
         0.05052170, 0.41353419, 0.37103364]], device='cuda:0')
Worst class: (+ rhs) 0.05052170157432556
verified with init bound!
Result: safe-incomplete in 0.6309 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 303, vnnlib ID: 303 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00403553, -0.01354813, -0.00267985, -0.00274600, -0.02796648,
          1.03066611, -0.00179622, -0.03211242, -0.00929616, -0.00159045]],
       device='cuda:0')
diversed PGD initialization time: 0.1612
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.06342281e-02,  3.49772684e-02,  4.78433073e-02,  4.34531271e-03,
           6.31924719e-04,  7.13758230e-01,  5.56284525e-02,  1.52085572e-02,
           7.64498860e-02,  3.59409973e-02],
         [-3.06342281e-02,  3.49772684e-02,  4.78433073e-02,  4.34531271e-03,
           6.31924719e-04,  7.13758230e-01,  5.56284525e-02,  1.52085572e-02,
           7.64498860e-02,  3.59409973e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.74439245, 0.67878097, 0.66591489, 0.70941293, 0.71312630,
          0.65812975, 0.69854969, 0.63730836, 0.67781723]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4462 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-0.00403553, -0.01354813, -0.00267985, -0.00274600, -0.02796648,
          1.03066611, -0.00179622, -0.03211242, -0.00929616, -0.00159045]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 44, 1, 26] with unstable size 43 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [43]; unstable size 43; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.10133305,  0.08748214,  0.06591991, -0.20741686,  0.07918002,
          0.04709350,  0.05503374, -0.18024141, -0.11920914]], device='cuda:0') None
best_l after optimization: 0.2519054412841797
alpha/beta optimization time: 1.0777556896209717
initial alpha-crown bounds: tensor([[ 0.12974462,  0.11307390,  0.10108574, -0.17874461,  0.11254657,
          0.07732935,  0.10816774, -0.15070453, -0.06059332]], device='cuda:0')
Worst class: (+ rhs) -0.1787446141242981
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.33586120605469
##### Instance 303 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12974461913108826.

Properties batch 1, size 1
Remaining timeout: 118.262779712677
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11307390034198761.

Properties batch 2, size 1
Remaining timeout: 118.1959867477417
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10108573734760284.

Properties batch 3, size 1
Remaining timeout: 118.13024115562439
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17874461]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00403553, -0.01354813, -0.00267985, -0.00274600, -0.02796648,
         1.03066611, -0.00179622, -0.03211242, -0.00929616, -0.00159045],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17874461]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 26
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 66
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 200] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 143] 
split level 5: [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0071    bound 0.0050    transfer 0.0001    finalize 0.0026    func 0.0149    
Accumulated time: func 0.0149    prepare 0.0076    bound 0.0050    transfer 0.0001    finalize 0.0026    
length of domains: 0
Time: pickout 0.0005    decision 0.0237    set_bounds 0.0116    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0237    set_bounds 0.0116    solve 0.0150    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05488085746765137


Properties batch 4, size 1
Remaining timeout: 117.98509573936462
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11254657059907913.

Properties batch 5, size 1
Remaining timeout: 117.91281366348267
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0773293524980545.

Properties batch 6, size 1
Remaining timeout: 117.84603357315063
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10816773772239685.

Properties batch 7, size 1
Remaining timeout: 117.78033542633057
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15070453]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00403553, -0.01354813, -0.00267985, -0.00274600, -0.02796648,
         1.03066611, -0.00179622, -0.03211242, -0.00929616, -0.00159045],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15070453]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 26
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 66
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 248] 
split level 2: [/input.3, 150] 
split level 3: [/input.3, 162] 
split level 4: [/input.3, 153] 
split level 5: [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.2479248046875e-05
Time: prepare 0.0035    bound 0.0046    transfer 0.0001    finalize 0.0018    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0040    bound 0.0046    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0109    solve 0.0101    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0109    solve 0.0101    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04910087585449219


Properties batch 8, size 1
Remaining timeout: 117.63925647735596
##### Instance 303 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06059332]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.00403553, -0.01354813, -0.00267985, -0.00274600, -0.02796648,
         1.03066611, -0.00179622, -0.03211242, -0.00929616, -0.00159045],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06059332]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 26
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 66
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 248] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 80] 
split level 4: [/input.3, 153] 
split level 5: [/input.3, 159] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.726119995117188e-05
Time: prepare 0.0038    bound 0.0053    transfer 0.0001    finalize 0.0018    func 0.0110    
Accumulated time: func 0.0110    prepare 0.0043    bound 0.0053    transfer 0.0001    finalize 0.0018    
length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0109    solve 0.0111    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0109    solve 0.0111    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05054187774658203

Result: safe in 2.5091 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 304, vnnlib ID: 304 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00371158, 0.00564488, 0.02038699, 0.01818252, 0.52078146, 0.02400666,
         0.00901365, 0.08258514, 0.01961606, 0.29783028]], device='cuda:0')
diversed PGD initialization time: 0.1334
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.02570385, -0.01925875,  0.00445569, -0.06539622, -0.03855527,
           0.00428192, -0.05559966, -0.02991767,  0.78628695,  0.33398077],
         [ 0.02570385, -0.01925875,  0.00445569, -0.06539622, -0.03855527,
           0.00428192, -0.05559966, -0.02991767,  0.78628695,  0.33398077]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.06425911, -0.01929652, -0.04301095,  0.02684095, -0.04283719,
           0.01704439, -0.00863760, -0.82484221, -0.37253603]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1419 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1908 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 305, vnnlib ID: 305 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00225687e+00, -6.79010153e-03, -6.89148903e-04, -9.51410830e-03,
         -1.63826346e-03,  7.08567351e-03, -2.25385278e-03, -1.07734203e-02,
          3.16463411e-04, -6.49820268e-03]], device='cuda:0')
diversed PGD initialization time: 0.1318
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.38202214e-01,  1.15144253e-03,  2.33349800e-02,  3.91564369e-02,
          -4.85677272e-04,  6.29838705e-02,  1.54053494e-02,  5.72118163e-03,
           7.89527223e-02,  7.36343861e-03],
         [ 7.38202214e-01,  1.15144253e-03,  2.33349800e-02,  3.91564369e-02,
          -4.85677272e-04,  6.29838705e-02,  1.54053494e-02,  5.72118163e-03,
           7.89527223e-02,  7.36343861e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.73705077, 0.71486723, 0.69904578, 0.73868787, 0.67521834,
          0.72279686, 0.73248100, 0.65924948, 0.73083878]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4231 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00225687e+00, -6.79010153e-03, -6.89148903e-04, -9.51410830e-03,
         -1.63826346e-03,  7.08567351e-03, -2.25385278e-03, -1.07734203e-02,
          3.16463411e-04, -6.49820268e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 39, 1, 7] with unstable size 38 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [38]; unstable size 38; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.64910209, 0.54958516, 0.51242322, 0.61738104, 0.48767760, 0.48757881,
         0.62170160, 0.60290980, 0.53970361]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5109 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 306, vnnlib ID: 306 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01395541, 0.01815185, 0.03122208, 0.02405000, 0.01728966, 0.02684364,
         0.01507907, 0.77110463, 0.02342765, 0.02911878]], device='cuda:0')
diversed PGD initialization time: 0.1265
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.04842119e-01, -3.11158523e-02,  3.61844897e-04, -8.18688124e-02,
          -5.48541546e-03,  6.39026612e-03, -3.36739644e-02, -3.20109278e-02,
           7.32037723e-01,  3.17181885e-01],
         [ 1.04842119e-01, -3.11158523e-02,  3.61844897e-04, -8.18688124e-02,
          -5.48541546e-03,  6.39026612e-03, -3.36739644e-02, -3.20109278e-02,
           7.32037723e-01,  3.17181885e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.13685304, -0.00089508, -0.03237277,  0.04985788, -0.02652551,
          -0.03840119,  0.00166304, -0.76404864, -0.34919280]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1366 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2133 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 307, vnnlib ID: 307 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00556932, 0.00784829, 0.02696560, 0.02519128, 0.77941710, 0.01995489,
         0.01045688, 0.00997289, 0.01477361, 0.09454640]], device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.56511635e-03, -3.18881124e-03,  7.34147429e-03, -2.33029723e-02,
           1.11094266e-01, -3.03506851e-04, -1.86456367e-02, -1.34350359e-03,
           1.99922100e-01,  7.34827161e-01],
         [-6.56511635e-03, -3.18881124e-03,  7.34147429e-03, -2.33029723e-02,
           1.11094266e-01, -3.03506851e-04, -1.86456367e-02, -1.34350359e-03,
           1.99922100e-01,  7.34827161e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.11765938,  0.11428308,  0.10375279,  0.13439724,  0.11139777,
           0.12973991,  0.11243777, -0.08882783, -0.62373292]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1349 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2224 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 308, vnnlib ID: 308 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00270391e+00, -2.29870081e-02,  4.08734381e-03, -1.59383416e-02,
         -1.57819875e-02,  5.10729849e-04,  1.11734644e-02, -2.21055150e-02,
         -3.14899534e-03, -1.47249624e-02]], device='cuda:0')
diversed PGD initialization time: 0.1551
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.96844614, -0.07190545,  0.25248778, -0.06941222, -0.02542603,
          -0.02449716, -0.00978187,  0.02282071, -0.03475437, -0.05023970],
         [ 0.96844614, -0.07190545,  0.25248778, -0.06941222, -0.02542603,
          -0.02449716, -0.00978187,  0.02282071, -0.03475437, -0.05023970]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04035163, 0.71595836, 1.03785837, 0.99387217, 0.99294329,
          0.97822803, 0.94562542, 1.00320053, 1.01868582]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4535 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00270391e+00, -2.29870081e-02,  4.08734381e-03, -1.59383416e-02,
         -1.57819875e-02,  5.10729849e-04,  1.11734644e-02, -2.21055150e-02,
         -3.14899534e-03, -1.47249624e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 29, 1, 13] with unstable size 28 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [28]; unstable size 28; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.80240488, 0.31950539, 0.77028340, 0.78354800, 0.76477587, 0.79275656,
         0.51582503, 0.80360454, 0.74466026]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5441 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 309, vnnlib ID: 309 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.49044022e-03,  9.03978348e-01,  7.46503472e-04,  9.70043987e-03,
          3.66503373e-03,  7.48501718e-03,  1.16035044e-02,  2.54674703e-02,
          1.30807683e-02,  7.18322396e-03]], device='cuda:0')
diversed PGD initialization time: 0.1506
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01191965,  0.15828502, -0.02767302, -0.05060709, -0.00662765,
          -0.01026145, -0.02808501, -0.01405422,  0.98907959, -0.02853425],
         [-0.01191965,  0.15828502, -0.02767302, -0.05060709, -0.00662765,
          -0.01026145, -0.02808501, -0.01405422,  0.98907959, -0.02853425]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.17020467,  0.18595804,  0.20889211,  0.16491267,  0.16854647,
           0.18637003,  0.17233925, -0.83079457,  0.18681927]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1596 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2262 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 310, vnnlib ID: 310 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.14486553e-02, -8.43817741e-03,  8.02370906e-03,  9.74467278e-01,
         -3.06334980e-02,  3.16108763e-02, -4.18458134e-03, -2.11923122e-02,
         -7.78689981e-04,  1.55800581e-03]], device='cuda:0')
diversed PGD initialization time: 0.1317
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01619941,  0.01748343, -0.01881035,  0.84465623, -0.01818303,
          -0.11654758, -0.00611162, -0.02669953,  0.31538188, -0.00859936],
         [-0.01619941,  0.01748343, -0.01881035,  0.84465623, -0.01818303,
          -0.11654758, -0.00611162, -0.02669953,  0.31538188, -0.00859936]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.86085564, 0.82717282, 0.86346656, 0.86283928, 0.96120381,
          0.85076785, 0.87135577, 0.52927434, 0.85325557]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4266 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.14486553e-02, -8.43817741e-03,  8.02370906e-03,  9.74467278e-01,
         -3.06334980e-02,  3.16108763e-02, -4.18458134e-03, -2.11923122e-02,
         -7.78689981e-04,  1.55800581e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 48, 1, 19] with unstable size 47 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [47]; unstable size 47; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.72205633, -1.01007652, -0.85211307, -1.53958642, -1.34682333,
         -0.87330985, -0.82172137, -1.59902751, -1.22306752]], device='cuda:0') None

all verified at 9th iter
best_l after optimization: 2.9023985862731934
alpha/beta optimization time: 0.16152691841125488
initial alpha-crown bounds: tensor([[0.42317265, 0.27212757, 0.38218525, 0.36401433, 0.34116492, 0.39195347,
         0.39457580, 0.04887520, 0.28432918]], device='cuda:0')
Worst class: (+ rhs) 0.048875197768211365
verified with init bound!
Result: safe-incomplete in 0.6797 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 311, vnnlib ID: 311 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02182920,  0.75569254,  0.01575293, -0.03173953,  0.01747337,
          0.13178807,  0.02118320,  0.07277146,  0.02143579,  0.00910278]],
       device='cuda:0')
diversed PGD initialization time: 0.1283
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.75100081e-02,  7.16282129e-02, -8.35768878e-03, -4.62628603e-02,
           9.81215388e-04,  3.45389135e-02, -2.79366970e-02, -1.34622455e-02,
           9.98774230e-01, -3.02484185e-02],
         [-1.75100081e-02,  7.16282129e-02, -8.35768878e-03, -4.62628603e-02,
           9.81215388e-04,  3.45389135e-02, -2.79366970e-02, -1.34622455e-02,
           9.98774230e-01, -3.02484185e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.08913822,  0.07998590,  0.11789107,  0.07064700,  0.03708930,
           0.09956491,  0.08509046, -0.92714602,  0.10187663]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1365 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2018 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 312, vnnlib ID: 312 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.20304081e-03, -7.24802166e-03,  4.66994941e-03,  9.85786915e-01,
         -2.51593553e-02,  1.76314265e-02, -4.15135920e-03, -1.91279650e-02,
         -3.63923609e-04,  1.70037895e-03]], device='cuda:0')
diversed PGD initialization time: 0.1416
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00596326, -0.00428981, -0.00193180,  0.48008943, -0.01546360,
           0.53223377, -0.00539993, -0.00572656, -0.00561395,  0.00343567],
         [-0.00596326, -0.00428981, -0.00193180,  0.48008943, -0.01546360,
           0.53223377, -0.00539993, -0.00572656, -0.00561395,  0.00343567]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.48605269,  0.48437923,  0.48202121,  0.49555302, -0.05214435,
           0.48548937,  0.48581600,  0.48570338,  0.47665375]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1542 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2244 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 313, vnnlib ID: 313 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
          9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
          3.82595509e-03, -9.01535153e-04]], device='cuda:0')
diversed PGD initialization time: 0.1256
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.51125556,  0.01712233,  0.00683571,  0.02489416,  0.52926672,
          -0.03412838, -0.09002797,  0.04227508,  0.00356240, -0.04951347],
         [ 0.51125556,  0.01712233,  0.00683571,  0.02489416,  0.52926672,
          -0.03412838, -0.09002797,  0.04227508,  0.00356240, -0.04951347]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.01801115, 0.51214439, 0.52243102, 0.50437254, 0.56339508,
          0.61929470, 0.48699164, 0.52570432, 0.57878017]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4098 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
          9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
          3.82595509e-03, -9.01535153e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 86, 1, 15] with unstable size 85 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [85]; unstable size 85; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 85] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.66547966, -0.72879744, -1.11494136, -0.82016146, -1.07599151,
         -1.05844569, -1.16255057, -1.29166675, -0.95942205]], device='cuda:0') None
best_l after optimization: -5.056560516357422
alpha/beta optimization time: 1.3507137298583984
initial alpha-crown bounds: tensor([[-1.13300252, -0.35360575, -0.56580806, -0.43084297, -0.51808107,
         -0.43228227, -0.77296019, -0.36766535, -0.48231256]], device='cuda:0')
Worst class: (+ rhs) -1.133002519607544
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.12491154670715
##### Instance 313 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.13300252]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.13300252]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 151] 
split level 3: [/input.3, 238] 
split level 4: [/input.3, 189] 
split level 5: [/input.3, 116] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 64 = 0.796875
pruning-in-iteration extra time: 0.009177684783935547
Time: prepare 0.0036    bound 0.1996    transfer 0.0003    finalize 0.0022    func 0.2057    
Accumulated time: func 0.2057    prepare 0.0041    bound 0.1996    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.77571 (6), -0.51595 (6), -0.48788 (6), -0.38135 (6), -0.36161 (6), -0.27508 (6), -0.26611 (6), -0.26501 (6), -0.25866 (6), -0.23452 (6), -0.07563 (6), -0.06855 (6), -0.00306 (6), 
length of domains: 13
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.2058    add 0.0011    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.2058    add 0.0011    
Current (lb-rhs): -0.7757115960121155
13 domains visited
Cumulative time: 0.24578166007995605

BaB round 2
batch: 13
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] [/input, 132] [/input, 132] [/input, 64] [/input, 64] [/input, 132] [/input, 64] [/input, 64] [/input, 64] [/input, 64] 
split level 1: [/input, 155] [/input, 179] [/input, 155] [/input, 233] [/input, 74] [/input, 179] [/input, 132] [/input, 155] [/input, 74] [/input, 253] 
pruning_in_iteration open status: True
ratio of positive domain = 41 / 52 = 0.7884615384615384
pruning-in-iteration extra time: 0.009419679641723633
Time: prepare 0.0062    bound 0.2063    transfer 0.0003    finalize 0.0029    func 0.2160    
Accumulated time: func 0.4217    prepare 0.0108    bound 0.4059    transfer 0.0006    finalize 0.0051    
Current worst splitting domains lb-rhs (depth):
-0.60039 (8), -0.37808 (8), -0.22372 (8), -0.22235 (8), -0.14743 (8), -0.13162 (8), -0.11014 (8), -0.09842 (8), -0.06369 (8), -0.05513 (8), -0.01350 (8), 
length of domains: 11
Time: pickout 0.0007    decision 0.0299    set_bounds 0.0065    solve 0.2161    add 0.0012    
Accumulated time: pickout 0.0013    decision 0.0531    set_bounds 0.0175    solve 0.4218    add 0.0023    
Current (lb-rhs): -0.6003918647766113
24 domains visited
Cumulative time: 0.500652551651001

BaB round 3
batch: 11
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 113] [/input.3, 113] [/input, 74] [/input, 105] [/input, 74] [/input.3, 113] [/input.3, 113] [/input, 105] [/input.3, 113] [/input, 64] 
split level 1: [/input, 179] [/input, 179] [/input.3, 113] [/input.3, 113] [/input, 132] [/input, 179] [/input, 132] [/input.3, 113] [/input, 233] [/input, 74] 
split level 2: [/input.3, 89] [/input.3, 89] [/input, 179] [/input, 233] [/input.3, 89] [/input, 233] [/input, 179] [/input, 233] [/input, 253] [/input, 233] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 88 = 0.9318181818181819
pruning-in-iteration extra time: 0.008924007415771484
Time: prepare 0.0104    bound 0.2028    transfer 0.0004    finalize 0.0051    func 0.2188    
Accumulated time: func 0.6404    prepare 0.0216    bound 0.6087    transfer 0.0010    finalize 0.0102    
Current worst splitting domains lb-rhs (depth):
-0.36827 (11), -0.30135 (11), -0.10874 (11), -0.10189 (11), -0.02330 (11), -0.00182 (11), 
length of domains: 6
Time: pickout 0.0008    decision 0.0293    set_bounds 0.0137    solve 0.2190    add 0.0011    
Accumulated time: pickout 0.0020    decision 0.0825    set_bounds 0.0312    solve 0.6408    add 0.0034    
Current (lb-rhs): -0.36826711893081665
30 domains visited
Cumulative time: 0.7652497291564941

BaB round 4
batch: 6
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 113] [/input.3, 113] [/input, 132] [/input, 132] [/input, 74] [/input.3, 89] 
split level 1: [/input, 155] [/input, 155] [/input, 253] [/input, 253] [/input.3, 89] [/input.3, 152] 
split level 2: [/input, 179] [/input, 179] [/input.3, 89] [/input.3, 89] [/input.3, 152] [/input.3, 55] 
split level 3: [/input.3, 152] [/input.3, 152] [/input.3, 152] [/input.3, 152] [/input.3, 232] [/input.3, 232] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 96 = 0.9166666666666666
pruning-in-iteration extra time: 0.009092092514038086
Time: prepare 0.0112    bound 0.2036    transfer 0.0003    finalize 0.0052    func 0.2204    
Accumulated time: func 0.8609    prepare 0.0333    bound 0.8123    transfer 0.0013    finalize 0.0154    
Current worst splitting domains lb-rhs (depth):
-0.26026 (15), -0.21351 (15), -0.18116 (15), -0.17586 (15), -0.08912 (15), -0.04766 (15), -0.02711 (15), -0.01654 (15), 
length of domains: 8
Time: pickout 0.0007    decision 0.0251    set_bounds 0.0157    solve 0.2205    add 0.0009    
Accumulated time: pickout 0.0027    decision 0.1076    set_bounds 0.0469    solve 0.8613    add 0.0043    
Current (lb-rhs): -0.2602589428424835
38 domains visited
Cumulative time: 1.028773307800293

BaB round 5
batch: 8
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 159] [/input.3, 159] [/input.3, 159] [/input.3, 159] [/input.3, 159] [/input, 179] [/input.3, 159] [/input.3, 159] 
split level 1: [/input.3, 3] [/input, 179] [/input.3, 108] [/input.3, 108] [/input, 179] [/input.3, 159] [/input.3, 108] [/input.3, 108] 
split level 2: [/input.3, 55] [/input, 155] [/input.3, 3] [/input.3, 3] [/input.3, 3] [/input.3, 3] [/input.3, 3] [/input.3, 3] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.009408950805664062
Time: prepare 0.0074    bound 0.2071    transfer 0.0003    finalize 0.0039    func 0.2187    
Accumulated time: func 1.0796    prepare 0.0412    bound 1.0194    transfer 0.0016    finalize 0.0193    
Current worst splitting domains lb-rhs (depth):
-0.13586 (18), -0.11286 (18), -0.10568 (18), -0.07601 (18), -0.07444 (18), 
length of domains: 5
Time: pickout 0.0007    decision 0.0266    set_bounds 0.0095    solve 0.2188    add 0.0011    
Accumulated time: pickout 0.0034    decision 0.1342    set_bounds 0.0563    solve 1.0802    add 0.0054    
Current (lb-rhs): -0.13586464524269104
43 domains visited
Cumulative time: 1.2860157489776611

BaB round 6
batch: 5
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 53] [/input.3, 53] [/input.3, 53] [/input.3, 53] [/input.3, 53] 
split level 1: [/input.3, 108] [/input.3, 108] [/input.3, 108] [/input.3, 108] [/input.3, 108] 
split level 2: [/input.3, 207] [/input.3, 3] [/input.3, 207] [/input, 155] [/input.3, 207] 
split level 3: [/input, 155] [/input.3, 232] [/input.3, 232] [/input.3, 232] [/input.3, 232] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 80 = 0.925
pruning-in-iteration extra time: 0.009260892868041992
Time: prepare 0.0092    bound 0.2064    transfer 0.0003    finalize 0.0043    func 0.2202    
Accumulated time: func 1.2998    prepare 0.0508    bound 1.2258    transfer 0.0019    finalize 0.0235    
Current worst splitting domains lb-rhs (depth):
-0.06088 (22), -0.05693 (22), -0.02168 (22), -0.01770 (22), -0.00392 (22), -0.00275 (22), 
length of domains: 6
Time: pickout 0.0009    decision 0.0239    set_bounds 0.0124    solve 0.2203    add 0.0010    
Accumulated time: pickout 0.0043    decision 0.1581    set_bounds 0.0688    solve 1.3005    add 0.0064    
Current (lb-rhs): -0.06087663769721985
49 domains visited
Cumulative time: 1.5453600883483887

BaB round 7
batch: 6
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 86] [/input.3, 86] [/input.3, 86] [/input.3, 86] [/input.3, 86] [/input.3, 86] 
split level 1: [/input.3, 232] [/input, 179] [/input.3, 207] [/input.3, 55] [/input.3, 207] [/input.3, 75] 
split level 2: [/input.3, 75] [/input.3, 75] [/input.3, 75] [/input.3, 75] [/input.3, 55] [/input.3, 133] 
split level 3: [/input.3, 133] [/input.3, 133] [/input.3, 55] [/input.3, 133] [/input.3, 75] [/input.3, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 96 = 0.9791666666666666
pruning-in-iteration extra time: 0.009449958801269531
Time: prepare 0.0112    bound 0.2045    transfer 0.0003    finalize 0.0055    func 0.2216    
Accumulated time: func 1.5215    prepare 0.0626    bound 1.4303    transfer 0.0022    finalize 0.0290    
Current worst splitting domains lb-rhs (depth):
-0.02151 (26), -0.01404 (26), 
length of domains: 2
Time: pickout 0.0008    decision 0.0250    set_bounds 0.0147    solve 0.2218    add 0.0011    
Accumulated time: pickout 0.0052    decision 0.1831    set_bounds 0.0835    solve 1.5222    add 0.0075    
Current (lb-rhs): -0.021507255733013153
51 domains visited
Cumulative time: 1.8094112873077393

BaB round 8
batch: 2
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input, 179] [/input.3, 208] 
split level 1: [/input.3, 208] [/input.3, 133] 
split level 2: [/input.3, 124] [/input.3, 124] 
split level 3: [/input.3, 166] [/input.3, 87] 
split level 4: [/input, 155] [/input.3, 166] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0070    bound 0.0044    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 1.5355    prepare 0.0701    bound 1.4347    transfer 0.0023    finalize 0.0314    
length of domains: 0
Time: pickout 0.0007    decision 0.0211    set_bounds 0.0109    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.2042    set_bounds 0.0944    solve 1.5363    add 0.0075    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
51 domains visited
Cumulative time: 1.856487512588501


Properties batch 1, size 1
Remaining timeout: 116.17119836807251
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35360575]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35360575]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00878596305847168
Time: prepare 0.0037    bound 0.1958    transfer 0.0004    finalize 0.0023    func 0.2023    
Accumulated time: func 0.2023    prepare 0.0042    bound 0.1958    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.19478 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0110    solve 0.2024    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0110    solve 0.2024    add 0.0007    
Current (lb-rhs): -0.19478249549865723
1 domains visited
Cumulative time: 0.24265027046203613

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input, 155] 
split level 2: [/input, 179] 
split level 3: [/input, 64] 
split level 4: [/input, 233] 
split level 5: [/input, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.2166    prepare 0.0119    bound 0.2003    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0243    set_bounds 0.0106    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0480    set_bounds 0.0216    solve 0.2168    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29286861419677734


Properties batch 2, size 1
Remaining timeout: 115.78241276741028
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.56580806]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.56580806]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 232] 
split level 5: [/input.3, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009899616241455078
Time: prepare 0.0035    bound 0.2173    transfer 0.0004    finalize 0.0019    func 0.2233    
Accumulated time: func 0.2233    prepare 0.0040    bound 0.2173    transfer 0.0004    finalize 0.0019    
Current worst splitting domains lb-rhs (depth):
-0.33245 (6), -0.27965 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0107    solve 0.2233    add 0.0017    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0107    solve 0.2233    add 0.0017    
Current (lb-rhs): -0.33245205879211426
2 domains visited
Cumulative time: 0.2628669738769531

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] [/input, 132] 
split level 1: [/input, 155] [/input, 155] 
split level 2: [/input, 179] [/input, 179] 
split level 3: [/input, 64] [/input, 64] 
split level 4: [/input, 55] [/input, 233] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0075    bound 0.0049    transfer 0.0001    finalize 0.0025    func 0.0150    
Accumulated time: func 0.2383    prepare 0.0120    bound 0.2222    transfer 0.0005    finalize 0.0043    
length of domains: 0
Time: pickout 0.0006    decision 0.0222    set_bounds 0.0103    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0448    set_bounds 0.0211    solve 0.2385    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.31165385246276855


Properties batch 3, size 1
Remaining timeout: 115.37534379959106
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43084297]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43084297]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 113] 
split level 5: [/input.3, 3] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008803367614746094
Time: prepare 0.0037    bound 0.1974    transfer 0.0004    finalize 0.0022    func 0.2039    
Accumulated time: func 0.2039    prepare 0.0043    bound 0.1974    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.25466 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0109    solve 0.2039    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0236    set_bounds 0.0109    solve 0.2039    add 0.0007    
Current (lb-rhs): -0.25465697050094604
1 domains visited
Cumulative time: 0.2440652847290039

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input, 155] 
split level 2: [/input, 179] 
split level 3: [/input, 64] 
split level 4: [/input, 233] 
split level 5: [/input, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0070    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.2181    prepare 0.0119    bound 0.2021    transfer 0.0005    finalize 0.0045    
length of domains: 0
Time: pickout 0.0005    decision 0.0246    set_bounds 0.0106    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0482    set_bounds 0.0215    solve 0.2183    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2945437431335449


Properties batch 4, size 1
Remaining timeout: 114.9790952205658
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.51808107]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.51808107]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 55] 
split level 5: [/input, 179] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009203195571899414
Time: prepare 0.0066    bound 0.2047    transfer 0.0003    finalize 0.0036    func 0.2155    
Accumulated time: func 0.2155    prepare 0.0072    bound 0.2047    transfer 0.0003    finalize 0.0036    
Current worst splitting domains lb-rhs (depth):
-0.10059 (6), -0.07633 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0111    solve 0.2156    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0111    solve 0.2156    add 0.0010    
Current (lb-rhs): -0.10059177875518799
2 domains visited
Cumulative time: 0.2567746639251709

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] [/input, 132] 
split level 1: [/input, 155] [/input, 155] 
split level 2: [/input, 64] [/input, 74] 
split level 3: [/input, 55] [/input, 64] 
split level 4: [/input, 233] [/input, 233] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.224082946777344e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0144    
Accumulated time: func 0.2300    prepare 0.0149    bound 0.2094    transfer 0.0004    finalize 0.0060    
length of domains: 0
Time: pickout 0.0007    decision 0.0219    set_bounds 0.0103    solve 0.0145    add 0.0002    
Accumulated time: pickout 0.0012    decision 0.0458    set_bounds 0.0214    solve 0.2301    add 0.0012    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.3046901226043701


Properties batch 5, size 1
Remaining timeout: 114.57312822341919
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43228227]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43228227]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 113] 
split level 5: [/input, 179] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00920867919921875
Time: prepare 0.0067    bound 0.2071    transfer 0.0004    finalize 0.0030    func 0.2174    
Accumulated time: func 0.2174    prepare 0.0072    bound 0.2071    transfer 0.0004    finalize 0.0030    
Current worst splitting domains lb-rhs (depth):
-0.06586 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0114    solve 0.2175    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0114    solve 0.2175    add 0.0007    
Current (lb-rhs): -0.06586378812789917
1 domains visited
Cumulative time: 0.2579305171966553

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input, 155] 
split level 2: [/input, 64] 
split level 3: [/input, 55] 
split level 4: [/input, 233] 
split level 5: [/input.3, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.319450378417969e-05
Time: prepare 0.0074    bound 0.0047    transfer 0.0001    finalize 0.0026    func 0.0148    
Accumulated time: func 0.2322    prepare 0.0151    bound 0.2118    transfer 0.0005    finalize 0.0056    
length of domains: 0
Time: pickout 0.0006    decision 0.0238    set_bounds 0.0121    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0471    set_bounds 0.0236    solve 0.2323    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.30968451499938965


Properties batch 6, size 1
Remaining timeout: 114.16206932067871
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.77296019]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.77296019]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 124] 
split level 3: [/input.3, 133] 
split level 4: [/input.3, 238] 
split level 5: [/input, 55] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.009262800216674805
Time: prepare 0.0070    bound 0.2072    transfer 0.0004    finalize 0.0037    func 0.2187    
Accumulated time: func 0.2187    prepare 0.0076    bound 0.2072    transfer 0.0004    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.31717 (6), -0.24603 (6), -0.11699 (6), 
length of domains: 3
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0114    solve 0.2187    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0114    solve 0.2187    add 0.0010    
Current (lb-rhs): -0.31716835498809814
3 domains visited
Cumulative time: 0.26003432273864746

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] [/input.3, 113] [/input, 132] 
split level 1: [/input, 155] [/input, 179] [/input, 155] 
split level 2: [/input, 179] [/input, 155] [/input, 179] 
split level 3: [/input, 64] [/input, 64] [/input, 64] 
split level 4: [/input, 233] [/input, 13] [/input, 233] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0107    bound 0.0045    transfer 0.0001    finalize 0.0038    func 0.0192    
Accumulated time: func 0.2378    prepare 0.0187    bound 0.2117    transfer 0.0005    finalize 0.0075    
length of domains: 0
Time: pickout 0.0007    decision 0.0230    set_bounds 0.0157    solve 0.0192    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0470    set_bounds 0.0271    solve 0.2380    add 0.0011    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.3190181255340576


Properties batch 7, size 1
Remaining timeout: 113.74604630470276
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36766535]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36766535]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 238] 
split level 3: [/input.3, 89] 
split level 4: [/input.3, 113] 
split level 5: [/input, 179] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009238243103027344
Time: prepare 0.0067    bound 0.2060    transfer 0.0004    finalize 0.0037    func 0.2171    
Accumulated time: func 0.2171    prepare 0.0072    bound 0.2060    transfer 0.0004    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.02834 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0111    solve 0.2172    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0111    solve 0.2172    add 0.0009    
Current (lb-rhs): -0.02833881974220276
1 domains visited
Cumulative time: 0.2571883201599121

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input, 155] 
split level 2: [/input, 64] 
split level 3: [/input, 74] 
split level 4: [/input, 233] 
split level 5: [/input, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0144    
Accumulated time: func 0.2315    prepare 0.0149    bound 0.2107    transfer 0.0006    finalize 0.0060    
length of domains: 0
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0112    solve 0.0145    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0462    set_bounds 0.0223    solve 0.2317    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.30691027641296387


Properties batch 8, size 1
Remaining timeout: 113.3444652557373
##### Instance 313 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48231256]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.62597406e-03,  2.54216790e-03,  1.28235966e-02,  4.39374149e-03,
         9.49472904e-01,  4.06064838e-03,  3.03217769e-03, -2.09110528e-02,
         3.82595509e-03, -9.01535153e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48231256]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 44
-----------------
# of unstable neurons: 59
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 103] 
split level 1: [/input.3, 189] 
split level 2: [/input.3, 89] 
split level 3: [/input.3, 113] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 3] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009046316146850586
Time: prepare 0.0035    bound 0.2014    transfer 0.0004    finalize 0.0023    func 0.2078    
Accumulated time: func 0.2078    prepare 0.0040    bound 0.2014    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.18308 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.2079    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.2079    add 0.0006    
Current (lb-rhs): -0.18308240175247192
1 domains visited
Cumulative time: 0.24757170677185059

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input, 155] 
split level 2: [/input, 64] 
split level 3: [/input, 179] 
split level 4: [/input, 74] 
split level 5: [/input, 233] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0142    
Accumulated time: func 0.2221    prepare 0.0118    bound 0.2059    transfer 0.0005    finalize 0.0046    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0107    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0469    set_bounds 0.0218    solve 0.2223    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2971000671386719

Result: safe in 7.0486 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 314, vnnlib ID: 314 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00839759, -0.01317286,  0.16034220, -0.03419214, -0.01034356,
         -0.01235547, -0.01077329,  0.94449300, -0.01212405, -0.03787920]],
       device='cuda:0')
diversed PGD initialization time: 0.1264
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03994542,  0.02308796,  0.74281657,  0.14074916, -0.01780507,
          -0.05205936,  0.00416164,  0.21433404, -0.02111711, -0.03027752],
         [-0.03994542,  0.02308796,  0.74281657,  0.14074916, -0.01780507,
          -0.05205936,  0.00416164,  0.21433404, -0.02111711, -0.03027752]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25427946,  0.19124609, -0.52848256,  0.07358488,  0.23213911,
           0.26639339,  0.21017240,  0.23545116,  0.24461156]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1350 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2104 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 315, vnnlib ID: 315 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00878760, -0.02283995,  1.01901901, -0.00916946, -0.00114904,
          0.00265165, -0.01016721, -0.01992148, -0.00169289, -0.00887997]],
       device='cuda:0')
diversed PGD initialization time: 0.1245
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03280528, -0.02823929,  0.19902828, -0.01484123, -0.00942433,
          -0.00494722, -0.00402158, -0.04288144,  0.93640143, -0.02602512],
         [-0.03280528, -0.02823929,  0.19902828, -0.01484123, -0.00942433,
          -0.00494722, -0.00402158, -0.04288144,  0.93640143, -0.02602512]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23183356,  0.22726756,  0.21386951,  0.20845261,  0.20397550,
           0.20304987,  0.24190973, -0.73737311,  0.22505340]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1338 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1964 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 316, vnnlib ID: 316 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.62602484e-04,  9.21050459e-03,  1.20500214e-01,  6.96571171e-03,
         -5.03085926e-03,  1.52041987e-02,  5.70421293e-03,  8.17724228e-01,
          2.77955830e-03, -1.21048987e-02]], device='cuda:0')
diversed PGD initialization time: 0.1273
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.07374424,  0.04200236,  0.80403847, -0.03369394, -0.03590237,
           0.00375632, -0.00953829,  0.26789504, -0.06335903, -0.02055952],
         [-0.07374424,  0.04200236,  0.80403847, -0.03369394, -0.03590237,
           0.00375632, -0.00953829,  0.26789504, -0.06335903, -0.02055952]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.34163928,  0.22589269, -0.53614342,  0.30158898,  0.30379742,
           0.26413873,  0.27743334,  0.33125407,  0.28845456]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1363 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2020 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 317, vnnlib ID: 317 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00883109,  0.90109223, -0.00309983, -0.01606111,  0.00532981,
          0.05429544,  0.00623383,  0.03988896,  0.00451668,  0.00454875]],
       device='cuda:0')
diversed PGD initialization time: 0.1269
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00992517,  0.31363702,  0.00969809, -0.06732200,  0.01501609,
           0.07201527, -0.01399887,  0.04115446,  0.64377183, -0.02888629],
         [-0.00992517,  0.31363702,  0.00969809, -0.06732200,  0.01501609,
           0.07201527, -0.01399887,  0.04115446,  0.64377183, -0.02888629]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.32356220,  0.30393893,  0.38095903,  0.29862094,  0.24162175,
           0.32763588,  0.27248257, -0.33013481,  0.34252331]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1371 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2663 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 318, vnnlib ID: 318 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00269567,  0.14819461,  0.62341809,  0.04885512,  0.01333211,
          0.04646587, -0.00231623,  0.02531245,  0.02752278,  0.02667241]],
       device='cuda:0')
diversed PGD initialization time: 0.1304
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02107468,  0.07840931, -0.05518608,  0.54553580, -0.01670839,
          -0.13807881, -0.02525235, -0.03502466,  0.65416473, -0.01469295],
         [-0.02107468,  0.07840931, -0.05518608,  0.54553580, -0.01670839,
          -0.13807881, -0.02525235, -0.03502466,  0.65416473, -0.01469295]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03411140, -0.13359539, -0.60072190, -0.03847769,  0.08289273,
          -0.02993373, -0.02016142, -0.70935082, -0.04049312]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1388 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2000 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 319, vnnlib ID: 319 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.04003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.010009810328483582, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.05216420e-04,  9.63500738e-01,  4.46781516e-03, -9.55708325e-04,
         -3.36205587e-03,  1.31854415e-03, -7.79893249e-04,  7.12485611e-03,
         -2.09940225e-03,  2.22954899e-03]], device='cuda:0')
diversed PGD initialization time: 0.1227
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03172933,  0.37757885, -0.05811395, -0.09023514, -0.02365305,
          -0.06092633, -0.07471700, -0.03180218,  1.00883663, -0.04348445],
         [-0.03172933,  0.37757885, -0.05811395, -0.09023514, -0.02365305,
          -0.06092633, -0.07471700, -0.03180218,  1.00883663, -0.04348445]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.40930820,  0.43569279,  0.46781400,  0.40123191,  0.43850517,
           0.45229584,  0.40938103, -0.63125777,  0.42106330]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1318 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2259 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 320, vnnlib ID: 320 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01476410, 0.02048150, 0.32462347, 0.06292048, 0.00778504, 0.02655639,
         0.01569136, 0.23571393, 0.23372701, 0.02275947]], device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.01476409, 0.02048155, 0.32462355, 0.06292049, 0.00778503,
          0.02655638, 0.01569136, 0.23571381, 0.23372698, 0.02275947],
         [0.01476409, 0.02048155, 0.32462355, 0.06292049, 0.00778503,
          0.02655638, 0.01569136, 0.23571381, 0.23372698, 0.02275947]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.22094971,  0.21523225, -0.08890975,  0.17279333,  0.22792877,
           0.20915744,  0.22002245,  0.00198683,  0.21295434]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 321, vnnlib ID: 321 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.66611674e-03, -2.77611166e-02,  1.00480509e+00,  6.75045401e-02,
         -4.15630639e-05, -4.17609289e-02, -8.06034356e-03, -2.18053907e-02,
         -4.73029912e-03, -1.17206872e-02]], device='cuda:0')
diversed PGD initialization time: 0.1262
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01114566, -0.07396902,  0.28841737,  0.72108591, -0.02078551,
          -0.16836053, -0.02563191, -0.12358157,  0.38680029, -0.03048824],
         [ 0.01114566, -0.07396902,  0.28841737,  0.72108591, -0.02078551,
          -0.16836053, -0.02563191, -0.12358157,  0.38680029, -0.03048824]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.27727172,  0.36238641, -0.43266854,  0.30920288,  0.45677790,
           0.31404927,  0.41199893, -0.09838292,  0.31890559]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1351 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1939 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 322, vnnlib ID: 322 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00264306,  0.69240969,  0.01620470, -0.01087305, -0.00299596,
          0.02710386, -0.02028494,  0.00606480,  0.25841594,  0.01023738]],
       device='cuda:0')
diversed PGD initialization time: 0.1281
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.25951634e-02, -2.19196081e-04, -7.54718035e-02, -1.06985867e-01,
           1.31434053e-01, -5.34354523e-02, -8.95438194e-02,  5.01567721e-01,
           6.83024108e-01,  8.75771046e-04],
         [-2.25951634e-02, -2.19196081e-04, -7.54718035e-02, -1.06985867e-01,
           1.31434053e-01, -5.34354523e-02, -8.95438194e-02,  5.01567721e-01,
           6.83024108e-01,  8.75771046e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02237597,  0.07525261,  0.10676667, -0.13165325,  0.05321626,
           0.08932462, -0.50178695, -0.68324327, -0.00109497]]],
       device='cuda:0')
number of violation:  4
Attack finished in 0.1376 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1935 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 323, vnnlib ID: 323 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
         -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
          5.10126352e-04, -1.01647675e-02]], device='cuda:0')
diversed PGD initialization time: 0.1264
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.52834266, -0.02736157,  0.00380185,  0.01439521, -0.00273990,
           0.05020093, -0.01575681, -0.05465944,  0.37868601,  0.06333950],
         [ 0.52834266, -0.02736157,  0.00380185,  0.01439521, -0.00273990,
           0.05020093, -0.01575681, -0.05465944,  0.37868601,  0.06333950]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.55570424, 0.52454078, 0.51394749, 0.53108257, 0.47814173,
          0.54409945, 0.58300209, 0.14965665, 0.46500316]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3914 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
         -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
          5.10126352e-04, -1.01647675e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 82, 1, 12] with unstable size 81 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [81]; unstable size 81; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 81] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.93630189, -1.50992513, -1.39903724, -1.15466690, -1.46859145,
         -1.08289957, -1.28210914, -1.69387257, -1.61812901]], device='cuda:0') None
best_l after optimization: -5.453451156616211
alpha/beta optimization time: 1.703284740447998
initial alpha-crown bounds: tensor([[-0.29236227, -0.86326474, -0.63255000, -0.48896626, -0.63618374,
         -0.53138816, -0.43990564, -0.71420407, -0.85462606]], device='cuda:0')
Worst class: (+ rhs) -0.8632647395133972
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.8180742263794
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.29236227]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.29236227]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 119] 
split level 3: [/input, 149] 
split level 4: [/input.3, 29] 
split level 5: [/input.3, 244] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009544134140014648
Time: prepare 0.0066    bound 0.2082    transfer 0.0004    finalize 0.0037    func 0.2191    
Accumulated time: func 0.2191    prepare 0.0071    bound 0.2082    transfer 0.0004    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.10733 (6), -0.04829 (6), 
length of domains: 2
Time: pickout 0.0005    decision 0.0229    set_bounds 0.0112    solve 0.2192    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0229    set_bounds 0.0112    solve 0.2192    add 0.0009    
Current (lb-rhs): -0.107330322265625
2 domains visited
Cumulative time: 0.2591896057128906

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] 
split level 1: [/input, 132] [/input, 132] 
split level 2: [/input, 87] [/input, 87] 
split level 3: [/input, 245] [/input.3, 155] 
split level 4: [/input.3, 155] [/input, 50] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.866455078125e-05
Time: prepare 0.0073    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0144    
Accumulated time: func 0.2334    prepare 0.0149    bound 0.2128    transfer 0.0005    finalize 0.0061    
length of domains: 0
Time: pickout 0.0007    decision 0.0215    set_bounds 0.0118    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0445    set_bounds 0.0231    solve 0.2336    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.3080170154571533


Properties batch 1, size 1
Remaining timeout: 117.41194915771484
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.86326474]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.86326474]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input, 158] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 130] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.00965428352355957
Time: prepare 0.0067    bound 0.2138    transfer 0.0004    finalize 0.0037    func 0.2249    
Accumulated time: func 0.2249    prepare 0.0072    bound 0.2138    transfer 0.0004    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.19735 (6), -0.15175 (6), -0.11143 (6), -0.09610 (6), -0.07450 (6), -0.06916 (6), -0.00857 (6), 
length of domains: 7
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.2250    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.2250    add 0.0009    
Current (lb-rhs): -0.1973501443862915
7 domains visited
Cumulative time: 0.266157865524292

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 132] [/input, 149] [/input, 132] [/input, 149] [/input, 132] [/input, 132] 
split level 1: [/input, 132] [/input, 149] [/input, 132] [/input, 149] [/input, 132] [/input, 149] [/input, 149] 
split level 2: [/input, 87] [/input, 87] [/input, 87] [/input, 87] [/input, 245] [/input, 87] [/input, 87] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.0003998279571533203
Time: prepare 0.0064    bound 0.0133    transfer 0.0002    finalize 0.0021    func 0.0220    
Accumulated time: func 0.2469    prepare 0.0141    bound 0.2271    transfer 0.0006    finalize 0.0058    
length of domains: 0
Time: pickout 0.0007    decision 0.0256    set_bounds 0.0081    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0493    set_bounds 0.0197    solve 0.2471    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.32298731803894043


Properties batch 2, size 1
Remaining timeout: 116.99173259735107
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63255000]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63255000]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 236] 
split level 5: [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 48 / 64 = 0.75
pruning-in-iteration extra time: 0.009171485900878906
Time: prepare 0.0036    bound 0.2011    transfer 0.0003    finalize 0.0025    func 0.2076    
Accumulated time: func 0.2076    prepare 0.0041    bound 0.2011    transfer 0.0003    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.32126 (6), -0.29011 (6), -0.26850 (6), -0.26160 (6), -0.23688 (6), -0.23681 (6), -0.23360 (6), -0.22120 (6), -0.22036 (6), -0.21959 (6), -0.21706 (6), -0.21526 (6), -0.18767 (6), -0.17456 (6), -0.16377 (6), -0.15125 (6), 
length of domains: 16
Time: pickout 0.0005    decision 0.0229    set_bounds 0.0110    solve 0.2077    add 0.0014    
Accumulated time: pickout 0.0005    decision 0.0229    set_bounds 0.0110    solve 0.2077    add 0.0014    
Current (lb-rhs): -0.32125574350357056
16 domains visited
Cumulative time: 0.24769902229309082

BaB round 2
batch: 16
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] 
split level 1: [/input, 158] [/input, 149] [/input, 149] [/input, 149] [/input, 149] [/input.3, 119] [/input, 149] [/input, 87] [/input, 149] [/input, 149] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008982658386230469
Time: prepare 0.0074    bound 0.2053    transfer 0.0004    finalize 0.0035    func 0.2167    
Accumulated time: func 0.4243    prepare 0.0119    bound 0.4064    transfer 0.0006    finalize 0.0060    
Current worst splitting domains lb-rhs (depth):
-0.11686 (8), 
length of domains: 1
Time: pickout 0.0007    decision 0.0307    set_bounds 0.0078    solve 0.2168    add 0.0008    
Accumulated time: pickout 0.0012    decision 0.0536    set_bounds 0.0187    solve 0.4245    add 0.0022    
Current (lb-rhs): -0.11686283349990845
17 domains visited
Cumulative time: 0.5049407482147217

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 87] 
split level 1: [/input, 149] 
split level 2: [/input.3, 244] 
split level 3: [/input, 245] 
split level 4: [/input.3, 155] 
split level 5: [/input.3, 230] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0073    bound 0.0049    transfer 0.0001    finalize 0.0026    func 0.0150    
Accumulated time: func 0.4393    prepare 0.0198    bound 0.4113    transfer 0.0008    finalize 0.0086    
length of domains: 0
Time: pickout 0.0007    decision 0.0243    set_bounds 0.0136    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0779    set_bounds 0.0323    solve 0.4395    add 0.0023    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17 domains visited
Cumulative time: 0.5589640140533447


Properties batch 3, size 1
Remaining timeout: 116.33709669113159
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48896626]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48896626]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 26] 
split level 2: [/input, 149] 
split level 3: [/input, 158] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 230] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0003750324249267578
Time: prepare 0.0066    bound 0.0134    transfer 0.0002    finalize 0.0024    func 0.0226    
Accumulated time: func 0.0226    prepare 0.0071    bound 0.0134    transfer 0.0002    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0237    set_bounds 0.0114    solve 0.0227    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0237    set_bounds 0.0114    solve 0.0227    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06244659423828125


Properties batch 4, size 1
Remaining timeout: 116.17261743545532
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63618374]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63618374]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 236] 
split level 4: [/input, 158] 
split level 5: [/input.3, 195] 

all verified at 5th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0021338462829589844
Time: prepare 0.0067    bound 0.0542    transfer 0.0002    finalize 0.0028    func 0.0640    
Accumulated time: func 0.0640    prepare 0.0073    bound 0.0542    transfer 0.0002    finalize 0.0028    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0641    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.0641    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.10305285453796387


Properties batch 5, size 1
Remaining timeout: 115.97319555282593
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53138816]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53138816]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 244] 
split level 2: [/input, 158] 
split level 3: [/input.3, 216] 
split level 4: [/input.3, 230] 
split level 5: [/input.3, 155] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00040411949157714844
Time: prepare 0.0066    bound 0.0133    transfer 0.0002    finalize 0.0023    func 0.0225    
Accumulated time: func 0.0225    prepare 0.0071    bound 0.0133    transfer 0.0002    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0113    solve 0.0226    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0113    solve 0.0226    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.061403512954711914


Properties batch 6, size 1
Remaining timeout: 115.81593179702759
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43990564]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43990564]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input, 149] 
split level 2: [/input.3, 31] 
split level 3: [/input, 158] 
split level 4: [/input.3, 155] 
split level 5: [/input.3, 230] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.914138793945312e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0115    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0115    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05268216133117676


Properties batch 7, size 1
Remaining timeout: 115.66785454750061
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.71420407]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.71420407]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009032964706420898
Time: prepare 0.0035    bound 0.1979    transfer 0.0004    finalize 0.0021    func 0.2040    
Accumulated time: func 0.2040    prepare 0.0040    bound 0.1979    transfer 0.0004    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.26001 (6), -0.20960 (6), -0.07315 (6), -0.05568 (6), -0.02880 (6), -0.01692 (6), -0.01454 (6), 
length of domains: 7
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0111    solve 0.2041    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0111    solve 0.2041    add 0.0009    
Current (lb-rhs): -0.26000988483428955
7 domains visited
Cumulative time: 0.24338626861572266

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 132] [/input, 245] [/input, 149] [/input, 132] [/input, 245] [/input, 245] 
split level 1: [/input, 158] [/input, 245] [/input.3, 119] [/input, 132] [/input, 245] [/input.3, 119] [/input.3, 119] 
split level 2: [/input, 132] [/input, 149] [/input.3, 155] [/input.3, 119] [/input.3, 119] [/input.3, 155] [/input, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 56 = 0.9821428571428571
pruning-in-iteration extra time: 0.009620189666748047
Time: prepare 0.0068    bound 0.2132    transfer 0.0004    finalize 0.0038    func 0.2243    
Accumulated time: func 0.4283    prepare 0.0113    bound 0.4110    transfer 0.0008    finalize 0.0058    
Current worst splitting domains lb-rhs (depth):
-0.01370 (9), 
length of domains: 1
Time: pickout 0.0006    decision 0.0266    set_bounds 0.0088    solve 0.2243    add 0.0007    
Accumulated time: pickout 0.0011    decision 0.0493    set_bounds 0.0200    solve 0.4284    add 0.0015    
Current (lb-rhs): -0.013701677322387695
8 domains visited
Cumulative time: 0.5050187110900879

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 132] 
split level 1: [/input.3, 71] 
split level 2: [/input.3, 244] 
split level 3: [/input.3, 216] 
split level 4: [/input.3, 229] 
split level 5: [/input.3, 115] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0074    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0147    
Accumulated time: func 0.4430    prepare 0.0193    bound 0.4157    transfer 0.0009    finalize 0.0083    
length of domains: 0
Time: pickout 0.0006    decision 0.0243    set_bounds 0.0124    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0737    set_bounds 0.0323    solve 0.4431    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.5574052333831787


Properties batch 8, size 1
Remaining timeout: 115.0156569480896
##### Instance 323 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.85462606]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00053060e+00, -8.13236833e-03,  3.93006206e-03, -9.33241844e-03,
        -5.75403497e-03,  7.21803308e-03,  2.13428959e-03, -1.78118050e-02,
         5.10126352e-04, -1.01647675e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.85462606]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 12
Node /17 input 0: size torch.Size([256]) unstable 64
-----------------
# of unstable neurons: 76
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 159] 
split level 3: [/input, 149] 
split level 4: [/input.3, 26] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009228944778442383
Time: prepare 0.0066    bound 0.2060    transfer 0.0003    finalize 0.0031    func 0.2163    
Accumulated time: func 0.2163    prepare 0.0071    bound 0.2060    transfer 0.0003    finalize 0.0031    
Current worst splitting domains lb-rhs (depth):
-0.19178 (6), -0.10079 (6), -0.08082 (6), -0.06276 (6), -0.05525 (6), -0.05424 (6), -0.01158 (6), 
length of domains: 7
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.2164    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0113    solve 0.2164    add 0.0010    
Current (lb-rhs): -0.19178062677383423
7 domains visited
Cumulative time: 0.256528377532959

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 158] [/input, 35] 
split level 1: [/input, 132] [/input.3, 119] [/input.3, 119] [/input.3, 119] [/input.3, 119] [/input.3, 119] [/input, 158] 
split level 2: [/input.3, 119] [/input.3, 244] [/input.3, 244] [/input.3, 244] [/input, 87] [/input.3, 244] [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 56 = 0.9821428571428571
pruning-in-iteration extra time: 0.009548425674438477
Time: prepare 0.0066    bound 0.2112    transfer 0.0004    finalize 0.0034    func 0.2217    
Accumulated time: func 0.4380    prepare 0.0142    bound 0.4172    transfer 0.0008    finalize 0.0064    
Current worst splitting domains lb-rhs (depth):
-0.01751 (9), 
length of domains: 1
Time: pickout 0.0008    decision 0.0254    set_bounds 0.0089    solve 0.2217    add 0.0006    
Accumulated time: pickout 0.0012    decision 0.0486    set_bounds 0.0202    solve 0.4381    add 0.0017    
Current (lb-rhs): -0.01750922203063965
8 domains visited
Cumulative time: 0.5145418643951416

BaB round 3
batch: 1
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] 
split level 1: [/input.3, 119] 
split level 2: [/input.3, 155] 
split level 3: [/input.3, 3] 
split level 4: [/input.3, 150] 
split level 5: [/input.3, 169] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0073    bound 0.0052    transfer 0.0001    finalize 0.0024    func 0.0151    
Accumulated time: func 0.4531    prepare 0.0221    bound 0.4225    transfer 0.0009    finalize 0.0088    
length of domains: 0
Time: pickout 0.0005    decision 0.0250    set_bounds 0.0115    solve 0.0153    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0736    set_bounds 0.0318    solve 0.4534    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.5672764778137207

Result: safe in 5.6480 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 324, vnnlib ID: 324 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00773726, 0.01444416, 0.03238732, 0.02423386, 0.54502362, 0.01617199,
         0.01315505, 0.04268324, 0.01550667, 0.28839219]], device='cuda:0')
diversed PGD initialization time: 0.1251
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.29292631e-04,  3.33266705e-03,  7.66454637e-03,  4.94788587e-03,
          -9.83265415e-03,  1.02183446e-02,  2.74496898e-03, -1.04566664e-02,
           8.22217017e-03,  9.88127351e-01],
         [-7.29292631e-04,  3.33266705e-03,  7.66454637e-03,  4.94788587e-03,
          -9.83265415e-03,  1.02183446e-02,  2.74496898e-03, -1.04566664e-02,
           8.22217017e-03,  9.88127351e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-9.10336152e-03, -1.31653212e-02, -1.74972005e-02, -1.47805400e-02,
          -2.00509988e-02, -1.25776231e-02,  6.24012202e-04, -1.80548243e-02,
          -9.97960031e-01]]], device='cuda:0')
number of violation:  8
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1841 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 325, vnnlib ID: 325 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.48496810e-03,  8.97563815e-01,  1.21685117e-02,  1.40873343e-03,
         -3.69830802e-03,  1.18748620e-02, -3.61084938e-04,  1.58257335e-02,
          1.26353502e-02,  2.40280777e-02]], device='cuda:0')
diversed PGD initialization time: 0.1257
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03949275,  0.04026525, -0.11302884, -0.15787819,  0.06260533,
          -0.08263528, -0.13470857,  0.52054197,  0.96159959, -0.10659590],
         [-0.03949275,  0.04026525, -0.11302884, -0.15787819,  0.06260533,
          -0.08263528, -0.13470857,  0.52054197,  0.96159959, -0.10659590]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.07975800,  0.15329409,  0.19814344, -0.02234008,  0.12290053,
           0.17497382, -0.48027670, -0.92133433,  0.14686115]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1346 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1969 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 326, vnnlib ID: 326 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.51229480e-03, -1.39018744e-02,  1.94832683e-04, -3.27433497e-02,
          7.05919981e-01,  5.11256605e-02,  2.19718367e-03,  1.82775259e-02,
          1.84536338e-01,  7.58154541e-02]], device='cuda:0')
diversed PGD initialization time: 0.1233
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1321 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1800 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 327, vnnlib ID: 327 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00698631,  0.01478090,  0.04622703,  0.01854680, -0.03044093,
          0.02063420,  0.00841085, -0.02779275,  0.03168522,  0.90544581]],
       device='cuda:0')
diversed PGD initialization time: 0.1244
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2024 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 328, vnnlib ID: 328 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.04413790e-04,  1.74257159e-03,  1.32532269e-02, -1.24357790e-02,
         -3.51757184e-03,  6.23590589e-01,  3.41713130e-01, -3.46013904e-03,
          2.42873840e-02,  1.21890754e-02]], device='cuda:0')
diversed PGD initialization time: 0.1240
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01621599, -0.00237980,  0.00258686,  0.01826391, -0.00141580,
          -0.01196294,  0.98959732, -0.00469013,  0.01116282,  0.00793841],
         [ 0.01621599, -0.00237980,  0.00258686,  0.01826391, -0.00141580,
          -0.01196294,  0.98959732, -0.00469013,  0.01116282,  0.00793841]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02817893, -0.00958314, -0.01454980, -0.03022686, -0.01054714,
          -1.00156021, -0.00727282, -0.02312577, -0.01990135]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1825 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 329, vnnlib ID: 329 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.75514647e-03, -1.49899721e-03, -1.78973377e-03, -1.39513612e-03,
          5.80593571e-03,  7.05277175e-03,  7.95736909e-04,  2.09103525e-03,
          3.95556539e-03,  9.99711096e-01]], device='cuda:0')
diversed PGD initialization time: 0.1261
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1361 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1884 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 330, vnnlib ID: 330 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00334382, -0.00910269,  0.00197403, -0.00613800, -0.00605478,
         -0.00767215, -0.00623274, -0.01183538,  0.00130104, -0.00676799]],
       device='cuda:0')
diversed PGD initialization time: 0.1232
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.76895589,  0.01802254,  0.05457272,  0.02471000,  0.01539889,
           0.02775254, -0.01184230,  0.02930172,  0.02419837,  0.02266623],
         [ 0.76895589,  0.01802254,  0.05457272,  0.02471000,  0.01539889,
           0.02775254, -0.01184230,  0.02930172,  0.02419837,  0.02266623]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.75093335, 0.71438318, 0.74424589, 0.75355697, 0.74120337,
          0.78079820, 0.73965418, 0.74475753, 0.74628967]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4069 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00334382, -0.00910269,  0.00197403, -0.00613800, -0.00605478,
         -0.00767215, -0.00623274, -0.01183538,  0.00130104, -0.00676799]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 53, 1, 10] with unstable size 52 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [52]; unstable size 52; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 52] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.03782997, -0.15748823,  0.04613189,  0.01597288, -0.00284652,
         -0.20679638,  0.00648850, -0.05834547, -0.33833966]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 1.8045198917388916
alpha/beta optimization time: 0.05024313926696777
initial alpha-crown bounds: tensor([[0.26799995, 0.08534332, 0.25106078, 0.28534770, 0.22719592, 0.08078711,
         0.24470188, 0.21288238, 0.14920078]], device='cuda:0')
Worst class: (+ rhs) 0.08078711479902267
verified with init bound!
Result: safe-incomplete in 0.5579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 331, vnnlib ID: 331 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.86971503e-03, -8.36811960e-04,  1.66897476e-03,  5.17676026e-03,
         -3.25254351e-03,  2.98549980e-03,  9.98034596e-01, -2.42967904e-03,
          2.74108350e-03,  5.11915982e-03]], device='cuda:0')
diversed PGD initialization time: 0.1345
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.61112595,  0.03091468,  0.04919873,  0.01922022, -0.02231312,
          -0.02431527,  0.23807479, -0.00914375,  0.00475401,  0.06595513],
         [ 0.61112595,  0.03091468,  0.04919873,  0.01922022, -0.02231312,
          -0.02431527,  0.23807479, -0.00914375,  0.00475401,  0.06595513]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.37305117,  0.20716012,  0.18887606,  0.21885458,  0.26038793,
           0.26239008,  0.24721855,  0.23332079,  0.17211966]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1439 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2090 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 332, vnnlib ID: 332 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00943964, -0.01224200, -0.00777984, -0.03465503, -0.01288519,
         -0.00466504, -0.02057158, -0.03654352,  0.17841727,  0.96383977]],
       device='cuda:0')
diversed PGD initialization time: 0.1296
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1389 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2267 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 333, vnnlib ID: 333 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
         -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851]],
       device='cuda:0')
diversed PGD initialization time: 0.1246
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.58960783, -0.00900965, -0.01360132, -0.00082918, -0.01710326,
           0.51246202, -0.00333933,  0.00224930,  0.11044203, -0.07135980],
         [ 0.58960783, -0.00900965, -0.01360132, -0.00082918, -0.01710326,
           0.51246202, -0.00333933,  0.00224930,  0.11044203, -0.07135980]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.59861749, 0.60320914, 0.59043700, 0.60671109, 0.07714581,
          0.59294719, 0.58735853, 0.47916579, 0.66096765]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4136 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
         -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 108, 1, 14] with unstable size 107 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [107]; unstable size 107; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.86987209, -2.65725327, -2.78801966, -2.35721350, -3.42312574,
         -2.56683016, -2.93785739, -3.48678780, -3.10191488]], device='cuda:0') None
best_l after optimization: -5.06378698348999
alpha/beta optimization time: 1.7197949886322021
initial alpha-crown bounds: tensor([[-0.23938337, -0.46659225, -0.45482939, -0.32615697, -0.89031887,
         -0.50529492, -0.78893381, -0.89020050, -0.50207710]], device='cuda:0')
Worst class: (+ rhs) -0.8903188705444336
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.75458836555481
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.23938337]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.23938337]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 254] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 28] 
split level 4: [/input.3, 155] 
split level 5: [/input, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.440017700195312e-05
Time: prepare 0.0068    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.0143    prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0116    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0116    solve 0.0143    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053429365158081055


Properties batch 1, size 1
Remaining timeout: 117.60401320457458
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.46659225]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.46659225]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 254] 
split level 3: [/input.3, 28] 
split level 4: [/input.3, 170] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.008936405181884766
Time: prepare 0.0035    bound 0.1967    transfer 0.0004    finalize 0.0023    func 0.2030    
Accumulated time: func 0.2030    prepare 0.0040    bound 0.1967    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.28495 (6), -0.08778 (6), -0.00052 (6), 
length of domains: 3
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0109    solve 0.2031    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0232    set_bounds 0.0109    solve 0.2031    add 0.0008    
Current (lb-rhs): -0.2849522829055786
3 domains visited
Cumulative time: 0.24280691146850586

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 93] [/input, 149] 
split level 1: [/input, 149] [/input, 149] [/input, 93] 
split level 2: [/input, 55] [/input, 55] [/input, 55] 
split level 3: [/input, 254] [/input.3, 172] [/input, 254] 
split level 4: [/input, 245] [/input.3, 130] [/input.3, 172] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 8.416175842285156e-05
Time: prepare 0.0110    bound 0.0046    transfer 0.0001    finalize 0.0036    func 0.0194    
Accumulated time: func 0.2224    prepare 0.0155    bound 0.2013    transfer 0.0005    finalize 0.0059    
length of domains: 0
Time: pickout 0.0007    decision 0.0233    set_bounds 0.0157    solve 0.0194    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0465    set_bounds 0.0265    solve 0.2225    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.30220580101013184


Properties batch 2, size 1
Remaining timeout: 117.20655989646912
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45482939]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45482939]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 254] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 236] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008490800857543945
Time: prepare 0.0036    bound 0.1910    transfer 0.0004    finalize 0.0023    func 0.1975    
Accumulated time: func 0.1975    prepare 0.0041    bound 0.1910    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.12452 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.1975    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.1975    add 0.0007    
Current (lb-rhs): -0.12452441453933716
1 domains visited
Cumulative time: 0.23693394660949707

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 149] 
split level 1: [/input, 93] 
split level 2: [/input, 55] 
split level 3: [/input, 254] 
split level 4: [/input, 245] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0074    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0145    
Accumulated time: func 0.2120    prepare 0.0120    bound 0.1956    transfer 0.0005    finalize 0.0048    
length of domains: 0
Time: pickout 0.0006    decision 0.0241    set_bounds 0.0118    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0473    set_bounds 0.0226    solve 0.2121    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2883718013763428


Properties batch 3, size 1
Remaining timeout: 116.8207905292511
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32615697]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32615697]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 28] 
split level 2: [/input.3, 254] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 115] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.008988142013549805
Time: prepare 0.0035    bound 0.1968    transfer 0.0004    finalize 0.0021    func 0.2029    
Accumulated time: func 0.2029    prepare 0.0040    bound 0.1968    transfer 0.0004    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.10337 (6), -0.09762 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0111    solve 0.2030    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0111    solve 0.2030    add 0.0008    
Current (lb-rhs): -0.10337108373641968
2 domains visited
Cumulative time: 0.24240422248840332

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 149] 
split level 1: [/input, 149] [/input, 93] 
split level 2: [/input, 55] [/input, 55] 
split level 3: [/input, 254] [/input, 254] 
split level 4: [/input, 245] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0071    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0145    
Accumulated time: func 0.2174    prepare 0.0116    bound 0.2015    transfer 0.0005    finalize 0.0045    
length of domains: 0
Time: pickout 0.0006    decision 0.0219    set_bounds 0.0099    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0448    set_bounds 0.0210    solve 0.2176    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2898430824279785


Properties batch 4, size 1
Remaining timeout: 116.43496751785278
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.89031887]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.89031887]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 197] 
split level 2: [/input.3, 254] 
split level 3: [/input.3, 236] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 64 = 0.796875
pruning-in-iteration extra time: 0.009283065795898438
Time: prepare 0.0035    bound 0.2009    transfer 0.0003    finalize 0.0022    func 0.2071    
Accumulated time: func 0.2071    prepare 0.0040    bound 0.2009    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.32353 (6), -0.25264 (6), -0.17298 (6), -0.15376 (6), -0.12919 (6), -0.11378 (6), -0.11148 (6), -0.10850 (6), -0.10249 (6), -0.09818 (6), -0.07065 (6), -0.04871 (6), -0.00557 (6), 
length of domains: 13
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0108    solve 0.2072    add 0.0011    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0108    solve 0.2072    add 0.0011    
Current (lb-rhs): -0.3235277533531189
13 domains visited
Cumulative time: 0.2474668025970459

BaB round 2
batch: 13
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 149] [/input, 93] [/input, 149] [/input, 93] [/input, 93] [/input, 93] [/input, 93] [/input, 93] [/input.3, 155] 
split level 1: [/input, 149] [/input, 55] [/input, 149] [/input.3, 195] [/input, 149] [/input, 149] [/input, 149] [/input, 55] [/input, 55] [/input.3, 115] 
pruning_in_iteration open status: True
ratio of positive domain = 42 / 52 = 0.8076923076923077
pruning-in-iteration extra time: 0.00977945327758789
Time: prepare 0.0058    bound 0.2132    transfer 0.0003    finalize 0.0026    func 0.2220    
Accumulated time: func 0.4291    prepare 0.0102    bound 0.4141    transfer 0.0007    finalize 0.0048    
Current worst splitting domains lb-rhs (depth):
-0.10805 (8), -0.08124 (8), -0.06842 (8), -0.05793 (8), -0.03894 (8), -0.03458 (8), -0.03067 (8), -0.01042 (8), -0.00762 (8), -0.00750 (8), 
length of domains: 10
Time: pickout 0.0007    decision 0.0302    set_bounds 0.0068    solve 0.2221    add 0.0010    
Accumulated time: pickout 0.0012    decision 0.0536    set_bounds 0.0176    solve 0.4292    add 0.0021    
Current (lb-rhs): -0.10805109143257141
23 domains visited
Cumulative time: 0.5086743831634521

BaB round 3
batch: 10
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 55] [/input, 93] [/input, 55] [/input.3, 115] [/input, 149] [/input.3, 155] [/input, 55] [/input.3, 155] [/input.3, 155] [/input.3, 155] 
split level 1: [/input, 254] [/input, 254] [/input.3, 170] [/input.3, 155] [/input.3, 170] [/input.3, 115] [/input.3, 195] [/input.3, 115] [/input.3, 195] [/input.3, 170] 
split level 2: [/input, 245] [/input, 245] [/input, 245] [/input.3, 195] [/input.3, 155] [/input.3, 181] [/input.3, 170] [/input.3, 195] [/input.3, 170] [/input.3, 181] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 80 = 0.975
pruning-in-iteration extra time: 0.008805990219116211
Time: prepare 0.0090    bound 0.2004    transfer 0.0004    finalize 0.0043    func 0.2141    
Accumulated time: func 0.6432    prepare 0.0197    bound 0.6145    transfer 0.0010    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.03606 (11), -0.00772 (11), 
length of domains: 2
Time: pickout 0.0007    decision 0.0287    set_bounds 0.0115    solve 0.2142    add 0.0010    
Accumulated time: pickout 0.0019    decision 0.0823    set_bounds 0.0291    solve 0.6434    add 0.0030    
Current (lb-rhs): -0.03606487810611725
25 domains visited
Cumulative time: 0.7654619216918945

BaB round 4
batch: 2
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input.3, 181] 
split level 1: [/input.3, 181] [/input.3, 172] 
split level 2: [/input.3, 172] [/input.3, 162] 
split level 3: [/input.3, 162] [/input.3, 184] 
split level 4: [/input.3, 61] [/input.3, 61] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0077    bound 0.0052    transfer 0.0001    finalize 0.0024    func 0.0157    
Accumulated time: func 0.6589    prepare 0.0279    bound 0.6197    transfer 0.0012    finalize 0.0115    
length of domains: 0
Time: pickout 0.0009    decision 0.0217    set_bounds 0.0113    solve 0.0158    add 0.0001    
Accumulated time: pickout 0.0028    decision 0.1040    set_bounds 0.0403    solve 0.6592    add 0.0031    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
25 domains visited
Cumulative time: 0.8155479431152344


Properties batch 5, size 1
Remaining timeout: 115.52070999145508
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50529492]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50529492]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 244] 
split level 2: [/input.3, 254] 
split level 3: [/input, 55] 
split level 4: [/input.3, 216] 
split level 5: [/input.3, 28] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.273124694824219e-05
Time: prepare 0.0067    bound 0.0049    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.0142    prepare 0.0072    bound 0.0049    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0113    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0113    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05338597297668457


Properties batch 6, size 1
Remaining timeout: 115.37020087242126
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.78893381]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.78893381]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 124] 
split level 2: [/input, 55] 
split level 3: [/input.3, 254] 
split level 4: [/input.3, 133] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 64 = 0.8125
pruning-in-iteration extra time: 0.009777545928955078
Time: prepare 0.0067    bound 0.2097    transfer 0.0004    finalize 0.0034    func 0.2204    
Accumulated time: func 0.2204    prepare 0.0072    bound 0.2097    transfer 0.0004    finalize 0.0034    
Current worst splitting domains lb-rhs (depth):
-0.20250 (6), -0.18160 (6), -0.13640 (6), -0.13226 (6), -0.12900 (6), -0.08766 (6), -0.04496 (6), -0.03834 (6), -0.03823 (6), -0.03689 (6), -0.03512 (6), -0.03458 (6), 
length of domains: 12
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.2205    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.2205    add 0.0011    
Current (lb-rhs): -0.2024993896484375
12 domains visited
Cumulative time: 0.26049184799194336

BaB round 2
batch: 12
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 93] [/input, 93] [/input, 149] [/input, 149] [/input, 93] [/input, 93] [/input, 93] [/input, 93] [/input, 149] 
split level 1: [/input, 149] [/input, 149] [/input, 149] [/input, 254] [/input, 93] [/input, 149] [/input, 149] [/input, 149] [/input.3, 155] [/input.3, 155] 
split level 2: [/input, 254] [/input, 254] [/input, 254] [/input.3, 155] [/input.3, 155] [/input, 254] [/input.3, 155] [/input.3, 155] [/input.3, 13] [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 6.914138793945312e-05
Time: prepare 0.0109    bound 0.0045    transfer 0.0002    finalize 0.0039    func 0.0195    
Accumulated time: func 0.2399    prepare 0.0186    bound 0.2142    transfer 0.0006    finalize 0.0072    
length of domains: 0
Time: pickout 0.0007    decision 0.0297    set_bounds 0.0137    solve 0.0196    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0527    set_bounds 0.0249    solve 0.2400    add 0.0012    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.32454729080200195


Properties batch 7, size 1
Remaining timeout: 114.94859433174133
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.89020050]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.89020050]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 254] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 45 / 64 = 0.703125
pruning-in-iteration extra time: 0.009451866149902344
Time: prepare 0.0036    bound 0.2031    transfer 0.0005    finalize 0.0030    func 0.2105    
Accumulated time: func 0.2105    prepare 0.0041    bound 0.2031    transfer 0.0005    finalize 0.0030    
Current worst splitting domains lb-rhs (depth):
-0.48742 (6), -0.43354 (6), -0.30932 (6), -0.28640 (6), -0.26848 (6), -0.22971 (6), -0.21647 (6), -0.18493 (6), -0.15242 (6), -0.10785 (6), -0.10781 (6), -0.07152 (6), -0.04900 (6), -0.03902 (6), -0.02823 (6), -0.02382 (6), -0.01826 (6), -0.00704 (6), -0.00465 (6), 
length of domains: 19
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.2106    add 0.0012    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.2106    add 0.0012    
Current (lb-rhs): -0.48742222785949707
19 domains visited
Cumulative time: 0.25061869621276855

BaB round 2
batch: 19
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 254] [/input, 254] [/input, 254] [/input, 93] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 254] 
split level 1: [/input, 149] [/input, 245] [/input, 93] [/input, 245] [/input, 254] [/input, 245] [/input, 245] [/input, 245] [/input.3, 181] [/input.3, 181] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 76 = 0.8947368421052632
pruning-in-iteration extra time: 0.009507417678833008
Time: prepare 0.0090    bound 0.2107    transfer 0.0004    finalize 0.0045    func 0.2246    
Accumulated time: func 0.4351    prepare 0.0136    bound 0.4138    transfer 0.0008    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.12505 (8), -0.10158 (8), -0.09500 (8), -0.08082 (8), -0.06998 (8), -0.01724 (8), -0.00930 (8), -0.00073 (8), 
length of domains: 8
Time: pickout 0.0007    decision 0.0334    set_bounds 0.0095    solve 0.2247    add 0.0014    
Accumulated time: pickout 0.0012    decision 0.0567    set_bounds 0.0203    solve 0.4353    add 0.0026    
Current (lb-rhs): -0.1250457763671875
27 domains visited
Cumulative time: 0.521007776260376

BaB round 3
batch: 8
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 55] [/input.3, 132] [/input.3, 132] [/input.3, 181] [/input, 93] [/input.3, 132] [/input.3, 132] [/input.3, 132] 
split level 1: [/input, 245] [/input.3, 71] [/input.3, 71] [/input.3, 132] [/input.3, 132] [/input.3, 181] [/input.3, 181] [/input.3, 71] 
split level 2: [/input, 149] [/input.3, 181] [/input.3, 155] [/input.3, 71] [/input.3, 181] [/input.3, 71] [/input.3, 71] [/input.3, 155] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.009320974349975586
Time: prepare 0.0077    bound 0.2060    transfer 0.0002    finalize 0.0034    func 0.2173    
Accumulated time: func 0.6524    prepare 0.0217    bound 0.6198    transfer 0.0011    finalize 0.0109    
Current worst splitting domains lb-rhs (depth):
-0.02102 (11), -0.01482 (11), -0.00518 (11), 
length of domains: 3
Time: pickout 0.0007    decision 0.0267    set_bounds 0.0091    solve 0.2174    add 0.0009    
Accumulated time: pickout 0.0018    decision 0.0834    set_bounds 0.0295    solve 0.6527    add 0.0035    
Current (lb-rhs): -0.02101820707321167
30 domains visited
Cumulative time: 0.7763838768005371

BaB round 4
batch: 3
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input.3, 155] [/input.3, 155] 
split level 1: [/input.3, 31] [/input.3, 31] [/input.3, 31] 
split level 2: [/input.3, 115] [/input.3, 115] [/input.3, 115] 
split level 3: [/input.3, 172] [/input.3, 172] [/input.3, 172] 
split level 4: [/input.3, 121] [/input.3, 121] [/input.3, 121] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0112    bound 0.0046    transfer 0.0001    finalize 0.0037    func 0.0197    
Accumulated time: func 0.6721    prepare 0.0334    bound 0.6244    transfer 0.0012    finalize 0.0146    
length of domains: 0
Time: pickout 0.0007    decision 0.0237    set_bounds 0.0148    solve 0.0198    add 0.0001    
Accumulated time: pickout 0.0026    decision 0.1071    set_bounds 0.0443    solve 0.6725    add 0.0035    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
30 domains visited
Cumulative time: 0.8357658386230469


Properties batch 8, size 1
Remaining timeout: 114.01709032058716
##### Instance 333 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50207710]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99935126, -0.00562529,  0.01316991,  0.00477341, -0.00333465,
        -0.01621933, -0.00679776, -0.00847407, -0.00515144, -0.00597851],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50207710]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 66
-----------------
# of unstable neurons: 80
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 254] 
split level 2: [/input.3, 80] 
split level 3: [/input, 149] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 170] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009533882141113281
Time: prepare 0.0064    bound 0.2088    transfer 0.0003    finalize 0.0034    func 0.2192    
Accumulated time: func 0.2192    prepare 0.0069    bound 0.2088    transfer 0.0003    finalize 0.0034    
Current worst splitting domains lb-rhs (depth):
-0.06998 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0114    solve 0.2192    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0114    solve 0.2192    add 0.0008    
Current (lb-rhs): -0.06998151540756226
1 domains visited
Cumulative time: 0.2592449188232422

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 26] 
split level 1: [/input, 93] 
split level 2: [/input, 55] 
split level 3: [/input, 254] 
split level 4: [/input, 245] 
split level 5: [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.296966552734375e-05
Time: prepare 0.0076    bound 0.0053    transfer 0.0001    finalize 0.0025    func 0.0156    
Accumulated time: func 0.2348    prepare 0.0151    bound 0.2141    transfer 0.0004    finalize 0.0059    
length of domains: 0
Time: pickout 0.0007    decision 0.0243    set_bounds 0.0127    solve 0.0157    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0473    set_bounds 0.0240    solve 0.2349    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.31302452087402344

Result: safe in 6.3915 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 334, vnnlib ID: 334 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
         -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
         -1.09616667e-03,  2.71792710e-03]], device='cuda:0')
diversed PGD initialization time: 0.1268
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00729351,  0.42898989,  0.03064729, -0.05079493,  0.02361232,
           0.08211289, -0.01061626,  0.06738647,  0.42478669, -0.01044954],
         [-0.00729351,  0.42898989,  0.03064729, -0.05079493,  0.02361232,
           0.08211289, -0.01061626,  0.06738647,  0.42478669, -0.01044954]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.43628341, 0.39834261, 0.47978482, 0.40537757, 0.34687701,
          0.43960613, 0.36160341, 0.00420320, 0.43943942]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4079 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
         -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
         -1.09616667e-03,  2.71792710e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 150, 1, 35] with unstable size 149 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [149]; unstable size 149; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.09488225, -1.78786671, -2.86663818, -1.79467463, -2.28664589,
         -1.58525395, -1.84323192, -2.39447045, -2.38297987]], device='cuda:0') None
best_l after optimization: -9.009611129760742
alpha/beta optimization time: 1.6661162376403809
initial alpha-crown bounds: tensor([[-0.41448930, -0.68868470, -1.88321757, -0.77817935, -1.24560428,
         -0.68708694, -0.79047281, -1.30380142, -1.21807516]], device='cuda:0')
Worst class: (+ rhs) -1.8832175731658936
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.81325817108154
##### Instance 334 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41448930]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41448930]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 43] 
split level 2: [/input.3, 55] 
split level 3: [/input.3, 116] 
split level 4: [/input.3, 126] 
split level 5: [/input.3, 153] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.009098529815673828
Time: prepare 0.0035    bound 0.1980    transfer 0.0003    finalize 0.0021    func 0.2040    
Accumulated time: func 0.2040    prepare 0.0041    bound 0.1980    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.19581 (6), -0.08937 (6), -0.03394 (6), -0.02008 (6), -0.01909 (6), -0.01801 (6), 
length of domains: 6
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.2041    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.2041    add 0.0009    
Current (lb-rhs): -0.19581091403961182
6 domains visited
Cumulative time: 0.2453784942626953

BaB round 2
batch: 6
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 151] [/input, 184] [/input, 184] [/input.3, 151] [/input, 184] [/input, 184] 
split level 1: [/input, 100] [/input, 128] [/input, 128] [/input, 100] [/input.3, 151] [/input, 128] 
split level 2: [/input, 199] [/input.3, 217] [/input, 110] [/input, 199] [/input.3, 30] [/input, 110] 
split level 3: [/input, 209] [/input.3, 30] [/input, 199] [/input, 209] [/input.3, 26] [/input, 100] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 96 = 0.9791666666666666
pruning-in-iteration extra time: 0.009279012680053711
Time: prepare 0.0109    bound 0.2067    transfer 0.0003    finalize 0.0046    func 0.2228    
Accumulated time: func 0.4268    prepare 0.0155    bound 0.4047    transfer 0.0006    finalize 0.0067    
Current worst splitting domains lb-rhs (depth):
-0.03611 (10), -0.00850 (10), 
length of domains: 2
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0144    solve 0.2229    add 0.0008    
Accumulated time: pickout 0.0011    decision 0.0484    set_bounds 0.0252    solve 0.4270    add 0.0016    
Current (lb-rhs): -0.03610503673553467
8 domains visited
Cumulative time: 0.5097854137420654

BaB round 3
batch: 2
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input, 184] 
split level 1: [/input, 110] [/input, 110] 
split level 2: [/input, 227] [/input, 227] 
split level 3: [/input, 154] [/input, 154] 
split level 4: [/input, 171] [/input, 171] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0145    
Accumulated time: func 0.4413    prepare 0.0232    bound 0.4095    transfer 0.0008    finalize 0.0091    
length of domains: 0
Time: pickout 0.0008    decision 0.0216    set_bounds 0.0104    solve 0.0146    add 0.0002    
Accumulated time: pickout 0.0019    decision 0.0700    set_bounds 0.0356    solve 0.4415    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.5574841499328613


Properties batch 1, size 1
Remaining timeout: 117.15454769134521
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.68868470]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.68868470]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 72] 
split level 2: [/input.3, 175] 
split level 3: [/input.3, 121] 
split level 4: [/input.3, 102] 
split level 5: [/input.3, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 64 = 0.8125
pruning-in-iteration extra time: 0.009310483932495117
Time: prepare 0.0035    bound 0.1989    transfer 0.0003    finalize 0.0022    func 0.2051    
Accumulated time: func 0.2051    prepare 0.0040    bound 0.1989    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.34307 (6), -0.33810 (6), -0.22449 (6), -0.13788 (6), -0.12749 (6), -0.11806 (6), -0.11346 (6), -0.10630 (6), -0.08724 (6), -0.07914 (6), -0.03615 (6), -0.00550 (6), 
length of domains: 12
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0107    solve 0.2052    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0107    solve 0.2052    add 0.0010    
Current (lb-rhs): -0.34307289123535156
12 domains visited
Cumulative time: 0.24447917938232422

BaB round 2
batch: 12
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 110] [/input, 110] [/input, 128] [/input, 110] [/input, 154] [/input, 184] [/input, 184] [/input.3, 232] [/input, 128] 
split level 1: [/input, 100] [/input, 100] [/input.3, 232] [/input, 110] [/input.3, 232] [/input, 94] [/input.3, 130] [/input, 100] [/input, 110] [/input.3, 232] 
split level 2: [/input.3, 21] [/input, 209] [/input, 198] [/input, 100] [/input, 198] [/input, 209] [/input.3, 28] [/input, 209] [/input, 198] [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 96 = 0.8541666666666666
pruning-in-iteration extra time: 0.009362936019897461
Time: prepare 0.0110    bound 0.2060    transfer 0.0003    finalize 0.0046    func 0.2222    
Accumulated time: func 0.4273    prepare 0.0155    bound 0.4050    transfer 0.0007    finalize 0.0068    
Current worst splitting domains lb-rhs (depth):
-0.20076 (9), -0.16992 (9), -0.16268 (9), -0.14228 (9), -0.13997 (9), -0.11753 (9), -0.10212 (9), -0.08645 (9), -0.07907 (9), -0.07514 (9), -0.05507 (9), -0.04283 (9), -0.02427 (9), -0.01456 (9), 
length of domains: 14
Time: pickout 0.0006    decision 0.0295    set_bounds 0.0129    solve 0.2223    add 0.0012    
Accumulated time: pickout 0.0011    decision 0.0524    set_bounds 0.0236    solve 0.4275    add 0.0022    
Current (lb-rhs): -0.2007628083229065
26 domains visited
Cumulative time: 0.5116586685180664

BaB round 3
batch: 14
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 128] [/input, 227] [/input, 184] [/input, 128] [/input, 184] [/input, 128] [/input, 227] [/input, 198] [/input.3, 28] [/input, 227] 
split level 1: [/input.3, 232] [/input, 154] [/input.3, 232] [/input.3, 232] [/input.3, 130] [/input.3, 232] [/input, 154] [/input, 209] [/input, 198] [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 46 / 56 = 0.8214285714285714
pruning-in-iteration extra time: 0.0072290897369384766
Time: prepare 0.0068    bound 0.1389    transfer 0.0003    finalize 0.0024    func 0.1484    
Accumulated time: func 0.5758    prepare 0.0227    bound 0.5439    transfer 0.0009    finalize 0.0092    
Current worst splitting domains lb-rhs (depth):
-0.14130 (11), -0.11183 (11), -0.10208 (11), -0.08956 (11), -0.05927 (11), -0.05497 (11), -0.03079 (11), -0.00324 (11), -0.00121 (11), -0.00009 (11), 
length of domains: 10
Time: pickout 0.0008    decision 0.0296    set_bounds 0.0079    solve 0.1485    add 0.0009    
Accumulated time: pickout 0.0019    decision 0.0820    set_bounds 0.0315    solve 0.5760    add 0.0031    
Current (lb-rhs): -0.1412956714630127
36 domains visited
Cumulative time: 0.699815034866333

BaB round 4
batch: 10
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 28] [/input, 100] [/input, 184] [/input.3, 232] [/input, 184] [/input.3, 232] [/input, 184] [/input.3, 28] [/input, 209] [/input.3, 28] 
split level 1: [/input.3, 130] [/input.3, 126] [/input.3, 28] [/input.3, 126] [/input, 199] [/input, 100] [/input.3, 130] [/input, 209] [/input, 154] [/input, 209] 
split level 2: [/input, 199] [/input, 198] [/input, 199] [/input.3, 21] [/input.3, 130] [/input.3, 126] [/input, 209] [/input, 154] [/input.3, 126] [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 80 = 0.9375
pruning-in-iteration extra time: 0.008938312530517578
Time: prepare 0.0098    bound 0.1803    transfer 0.0004    finalize 0.0046    func 0.1951    
Accumulated time: func 0.7709    prepare 0.0330    bound 0.7241    transfer 0.0013    finalize 0.0139    
Current worst splitting domains lb-rhs (depth):
-0.04571 (14), -0.03987 (14), -0.01856 (14), -0.01853 (14), -0.01557 (14), 
length of domains: 5
Time: pickout 0.0006    decision 0.0281    set_bounds 0.0125    solve 0.1952    add 0.0008    
Accumulated time: pickout 0.0025    decision 0.1102    set_bounds 0.0440    solve 0.7712    add 0.0039    
Current (lb-rhs): -0.04570847749710083
41 domains visited
Cumulative time: 0.9376204013824463

BaB round 5
batch: 5
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input.3, 137] [/input.3, 126] [/input, 128] [/input, 209] 
split level 1: [/input.3, 126] [/input, 209] [/input.3, 130] [/input, 209] [/input.3, 126] 
split level 2: [/input, 209] [/input.3, 21] [/input, 198] [/input.3, 126] [/input, 154] 
split level 3: [/input, 198] [/input.3, 150] [/input, 209] [/input.3, 232] [/input.3, 232] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 8.106231689453125e-05
Time: prepare 0.0094    bound 0.0046    transfer 0.0001    finalize 0.0033    func 0.0175    
Accumulated time: func 0.7884    prepare 0.0428    bound 0.7288    transfer 0.0015    finalize 0.0171    
length of domains: 0
Time: pickout 0.0006    decision 0.0242    set_bounds 0.0134    solve 0.0175    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.1344    set_bounds 0.0574    solve 0.7887    add 0.0039    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
41 domains visited
Cumulative time: 0.993844747543335


Properties batch 2, size 1
Remaining timeout: 116.06353878974915
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.88321757]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.88321757]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 236] 
split level 3: [/input.3, 200] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 21 / 64 = 0.328125
pruning-in-iteration extra time: 0.008128881454467773
Time: prepare 0.0036    bound 0.1950    transfer 0.0003    finalize 0.0022    func 0.2013    
Accumulated time: func 0.2013    prepare 0.0041    bound 0.1950    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-1.39148 (6), -0.91522 (6), -0.90780 (6), -0.69568 (6), -0.69359 (6), -0.64914 (6), -0.60171 (6), -0.58703 (6), -0.58451 (6), -0.58292 (6), -0.57238 (6), -0.55118 (6), -0.53116 (6), -0.52696 (6), -0.50046 (6), -0.47157 (6), -0.45580 (6), -0.44006 (6), -0.43466 (6), -0.42815 (6), 
length of domains: 43
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0109    solve 0.2014    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0109    solve 0.2014    add 0.0013    
Current (lb-rhs): -1.3914815187454224
43 domains visited
Cumulative time: 0.24196529388427734

BaB round 2
batch: 43
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] [/input.3, 72] [/input.3, 220] [/input.3, 220] [/input, 128] [/input, 128] [/input.3, 220] [/input.3, 220] [/input.3, 217] [/input.3, 220] 
pruning_in_iteration open status: True
ratio of positive domain = 37 / 86 = 0.43023255813953487
pruning-in-iteration extra time: 0.008565664291381836
Time: prepare 0.0073    bound 0.2052    transfer 0.0004    finalize 0.0034    func 0.2163    
Accumulated time: func 0.4177    prepare 0.0118    bound 0.4002    transfer 0.0007    finalize 0.0057    
Current worst splitting domains lb-rhs (depth):
-1.23853 (7), -0.88952 (7), -0.82253 (7), -0.75336 (7), -0.72341 (7), -0.54562 (7), -0.53559 (7), -0.52024 (7), -0.47883 (7), -0.45186 (7), -0.44252 (7), -0.44233 (7), -0.43395 (7), -0.43074 (7), -0.41258 (7), -0.41146 (7), -0.40838 (7), -0.39091 (7), -0.37666 (7), -0.37007 (7), 
length of domains: 49
Time: pickout 0.0006    decision 0.0456    set_bounds 0.0089    solve 0.2164    add 0.0013    
Accumulated time: pickout 0.0011    decision 0.0691    set_bounds 0.0198    solve 0.4178    add 0.0026    
Current (lb-rhs): -1.2385257482528687
92 domains visited
Cumulative time: 0.5152828693389893

BaB round 3
batch: 49
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] [/input, 184] [/input.3, 217] [/input, 198] [/input.3, 220] [/input, 100] [/input.3, 217] [/input.3, 220] [/input, 184] [/input, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 38 / 98 = 0.3877551020408163
pruning-in-iteration extra time: 0.00962519645690918
Time: prepare 0.0104    bound 0.2156    transfer 0.0003    finalize 0.0046    func 0.2310    
Accumulated time: func 0.6486    prepare 0.0226    bound 0.6158    transfer 0.0010    finalize 0.0103    
Current worst splitting domains lb-rhs (depth):
-1.09774 (8), -1.05126 (8), -0.77372 (8), -0.73946 (8), -0.69006 (8), -0.65047 (8), -0.62356 (8), -0.46034 (8), -0.43546 (8), -0.43450 (8), -0.41662 (8), -0.38118 (8), -0.37108 (8), -0.36354 (8), -0.34001 (8), -0.33596 (8), -0.33549 (8), -0.32751 (8), -0.32621 (8), -0.32502 (8), 
length of domains: 60
Time: pickout 0.0007    decision 0.0485    set_bounds 0.0102    solve 0.2311    add 0.0014    
Accumulated time: pickout 0.0018    decision 0.1176    set_bounds 0.0300    solve 0.6489    add 0.0040    
Current (lb-rhs): -1.0977429151535034
152 domains visited
Cumulative time: 0.8076517581939697

BaB round 4
batch: 60
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 171] [/input, 227] [/input, 184] [/input, 184] [/input, 171] [/input, 175] [/input.3, 217] [/input, 184] [/input.3, 217] [/input, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 43 / 120 = 0.3583333333333333
pruning-in-iteration extra time: 0.00971078872680664
Time: prepare 0.0134    bound 0.2132    transfer 0.0003    finalize 0.0055    func 0.2325    
Accumulated time: func 0.8811    prepare 0.0366    bound 0.8290    transfer 0.0014    finalize 0.0157    
Current worst splitting domains lb-rhs (depth):
-1.01781 (9), -0.96711 (9), -0.92811 (9), -0.88002 (9), -0.71343 (9), -0.64341 (9), -0.58106 (9), -0.56502 (9), -0.54600 (9), -0.51256 (9), -0.50526 (9), -0.50149 (9), -0.45632 (9), -0.40771 (9), -0.37473 (9), -0.35425 (9), -0.34952 (9), -0.34183 (9), -0.30146 (9), -0.29104 (9), 
length of domains: 77
Time: pickout 0.0007    decision 0.0544    set_bounds 0.0123    solve 0.2327    add 0.0014    
Accumulated time: pickout 0.0025    decision 0.1720    set_bounds 0.0423    solve 0.8816    add 0.0053    
Current (lb-rhs): -1.0178077220916748
229 domains visited
Cumulative time: 1.109665870666504

BaB round 5
batch: 77
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 171] [/input, 110] [/input, 171] [/input, 175] [/input, 110] [/input, 171] [/input, 184] [/input, 100] [/input, 209] [/input.3, 217] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 154 = 0.36363636363636365
pruning-in-iteration extra time: 0.009509563446044922
Time: prepare 0.0172    bound 0.2160    transfer 0.0004    finalize 0.0074    func 0.2411    
Accumulated time: func 1.1222    prepare 0.0542    bound 1.0450    transfer 0.0018    finalize 0.0231    
Current worst splitting domains lb-rhs (depth):
-0.90367 (10), -0.84641 (10), -0.82524 (10), -0.81167 (10), -0.78349 (10), -0.75068 (10), -0.73220 (10), -0.69085 (10), -0.58700 (10), -0.57133 (10), -0.53431 (10), -0.51866 (10), -0.50105 (10), -0.46822 (10), -0.42048 (10), -0.37617 (10), -0.34511 (10), -0.33773 (10), -0.33570 (10), -0.32666 (10), 
length of domains: 98
Time: pickout 0.0007    decision 0.0647    set_bounds 0.0157    solve 0.2412    add 0.0015    
Accumulated time: pickout 0.0032    decision 0.2367    set_bounds 0.0580    solve 1.1228    add 0.0068    
Current (lb-rhs): -0.903668999671936
327 domains visited
Cumulative time: 1.4340267181396484

BaB round 6
batch: 98
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 175] [/input, 227] [/input, 175] [/input, 175] [/input, 175] [/input, 175] [/input, 175] [/input, 110] [/input, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 196 = 0.37244897959183676
pruning-in-iteration extra time: 0.009351730346679688
Time: prepare 0.0229    bound 0.2107    transfer 0.0003    finalize 0.0093    func 0.2433    
Accumulated time: func 1.3655    prepare 0.0778    bound 1.2557    transfer 0.0021    finalize 0.0324    
Current worst splitting domains lb-rhs (depth):
-0.83752 (11), -0.77158 (11), -0.75711 (11), -0.74410 (11), -0.69680 (11), -0.67984 (11), -0.63805 (11), -0.59883 (11), -0.53772 (11), -0.50967 (11), -0.49685 (11), -0.46701 (11), -0.44640 (11), -0.35689 (11), -0.31417 (11), -0.31246 (11), -0.30974 (11), -0.30695 (11), -0.30691 (11), -0.29888 (11), 
length of domains: 123
Time: pickout 0.0009    decision 0.0966    set_bounds 0.0209    solve 0.2434    add 0.0013    
Accumulated time: pickout 0.0041    decision 0.3333    set_bounds 0.0789    solve 1.3662    add 0.0081    
Current (lb-rhs): -0.8375205993652344
450 domains visited
Cumulative time: 1.7978034019470215

BaB round 7
batch: 123
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 175] [/input, 138] [/input, 138] [/input, 175] [/input, 138] [/input, 175] [/input, 110] [/input, 100] [/input, 138] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 246 = 0.47560975609756095
pruning-in-iteration extra time: 0.009443521499633789
Time: prepare 0.0284    bound 0.2104    transfer 0.0004    finalize 0.0123    func 0.2516    
Accumulated time: func 1.6171    prepare 0.1067    bound 1.4660    transfer 0.0025    finalize 0.0448    
Current worst splitting domains lb-rhs (depth):
-0.66350 (12), -0.57297 (12), -0.56741 (12), -0.56676 (12), -0.54241 (12), -0.53111 (12), -0.52619 (12), -0.51376 (12), -0.47883 (12), -0.47350 (12), -0.45447 (12), -0.45198 (12), -0.44826 (12), -0.41934 (12), -0.41124 (12), -0.39159 (12), -0.37258 (12), -0.35984 (12), -0.34600 (12), -0.32003 (12), 
length of domains: 129
Time: pickout 0.0007    decision 0.0882    set_bounds 0.0246    solve 0.2517    add 0.0013    
Accumulated time: pickout 0.0048    decision 0.4215    set_bounds 0.1035    solve 1.6179    add 0.0094    
Current (lb-rhs): -0.6634961366653442
579 domains visited
Cumulative time: 2.1651816368103027

BaB round 8
batch: 129
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 110] [/input, 209] [/input, 154] [/input, 133] [/input, 184] [/input, 138] [/input.3, 28] [/input, 184] [/input, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 153 / 258 = 0.5930232558139534
pruning-in-iteration extra time: 0.010085821151733398
Time: prepare 0.0296    bound 0.2206    transfer 0.0004    finalize 0.0131    func 0.2637    
Accumulated time: func 1.8808    prepare 0.1367    bound 1.6866    transfer 0.0029    finalize 0.0578    
Current worst splitting domains lb-rhs (depth):
-0.59963 (13), -0.51092 (13), -0.48983 (13), -0.48912 (13), -0.47719 (13), -0.45476 (13), -0.45037 (13), -0.43897 (13), -0.41941 (13), -0.39825 (13), -0.37285 (13), -0.37183 (13), -0.36273 (13), -0.33638 (13), -0.32682 (13), -0.31747 (13), -0.28115 (13), -0.28018 (13), -0.25384 (13), -0.25294 (13), 
length of domains: 105
Time: pickout 0.0008    decision 0.0906    set_bounds 0.0263    solve 0.2638    add 0.0015    
Accumulated time: pickout 0.0056    decision 0.5121    set_bounds 0.1298    solve 1.8817    add 0.0109    
Current (lb-rhs): -0.599625825881958
684 domains visited
Cumulative time: 2.549375534057617

BaB round 9
batch: 105
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input, 175] [/input, 209] [/input.3, 194] [/input, 184] [/input, 110] [/input, 138] [/input, 100] [/input, 100] [/input.3, 126] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 210 = 0.5619047619047619
pruning-in-iteration extra time: 0.009727239608764648
Time: prepare 0.0248    bound 0.2155    transfer 0.0004    finalize 0.0102    func 0.2511    
Accumulated time: func 2.1318    prepare 0.1621    bound 1.9021    transfer 0.0032    finalize 0.0680    
Current worst splitting domains lb-rhs (depth):
-0.34176 (14), -0.32834 (14), -0.28337 (14), -0.26374 (14), -0.26267 (14), -0.25797 (14), -0.25755 (14), -0.25009 (14), -0.24026 (14), -0.23830 (14), -0.23222 (14), -0.23071 (14), -0.23006 (14), -0.22543 (14), -0.21134 (14), -0.21107 (14), -0.20498 (14), -0.19871 (14), -0.19356 (14), -0.18681 (14), 
length of domains: 92
Time: pickout 0.0008    decision 0.0800    set_bounds 0.0216    solve 0.2512    add 0.0013    
Accumulated time: pickout 0.0064    decision 0.5921    set_bounds 0.1514    solve 2.1329    add 0.0122    
Current (lb-rhs): -0.3417552709579468
776 domains visited
Cumulative time: 2.9051473140716553

BaB round 10
batch: 92
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input, 227] [/input, 133] [/input.3, 220] [/input.3, 220] [/input.3, 220] [/input.3, 220] [/input.3, 220] [/input, 133] [/input.3, 220] [/input.3, 220] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 184 = 0.6413043478260869
pruning-in-iteration extra time: 0.009701251983642578
Time: prepare 0.0212    bound 0.2147    transfer 0.0004    finalize 0.0085    func 0.2449    
Accumulated time: func 2.3767    prepare 0.1838    bound 2.1168    transfer 0.0037    finalize 0.0765    
Current worst splitting domains lb-rhs (depth):
-0.29117 (15), -0.26681 (15), -0.22032 (15), -0.21057 (15), -0.20978 (15), -0.20634 (15), -0.20326 (15), -0.18952 (15), -0.18707 (15), -0.17477 (15), -0.16829 (15), -0.16590 (15), -0.16396 (15), -0.15884 (15), -0.15763 (15), -0.15315 (15), -0.15014 (15), -0.14879 (15), -0.14790 (15), -0.14758 (15), 
length of domains: 66
Time: pickout 0.0008    decision 0.0717    set_bounds 0.0191    solve 0.2450    add 0.0014    
Accumulated time: pickout 0.0072    decision 0.6637    set_bounds 0.1705    solve 2.3779    add 0.0135    
Current (lb-rhs): -0.29117000102996826
842 domains visited
Cumulative time: 3.243849515914917

BaB round 11
batch: 66
Average branched neurons at iteration 11:  1.0000
splitting decisions: 
split level 0: [/input, 87] [/input, 209] [/input, 138] [/input, 227] [/input, 87] [/input, 209] [/input, 138] [/input.3, 126] [/input, 227] [/input, 128] 
pruning_in_iteration open status: True
ratio of positive domain = 97 / 132 = 0.7348484848484849
pruning-in-iteration extra time: 0.009835958480834961
Time: prepare 0.0152    bound 0.2176    transfer 0.0004    finalize 0.0076    func 0.2408    
Accumulated time: func 2.6175    prepare 0.1995    bound 2.3344    transfer 0.0041    finalize 0.0841    
Current worst splitting domains lb-rhs (depth):
-0.12212 (16), -0.11989 (16), -0.11989 (16), -0.11980 (16), -0.09601 (16), -0.06922 (16), -0.06922 (16), -0.06674 (16), -0.06421 (16), -0.06277 (16), -0.05962 (16), -0.04808 (16), -0.04599 (16), -0.04338 (16), -0.03863 (16), -0.03683 (16), -0.03565 (16), -0.03316 (16), -0.03110 (16), -0.03100 (16), 
length of domains: 35
Time: pickout 0.0008    decision 0.0571    set_bounds 0.0137    solve 0.2410    add 0.0012    
Accumulated time: pickout 0.0080    decision 0.7209    set_bounds 0.1841    solve 2.6189    add 0.0147    
Current (lb-rhs): -0.12211817502975464
877 domains visited
Cumulative time: 3.5584821701049805

BaB round 12
batch: 35
Average branched neurons at iteration 12:  1.0000
splitting decisions: 
split level 0: [/input, 133] [/input, 133] [/input, 133] [/input, 154] [/input, 154] [/input, 227] [/input, 154] [/input, 227] [/input, 133] [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 70 = 0.8
pruning-in-iteration extra time: 0.009169340133666992
Time: prepare 0.0085    bound 0.2055    transfer 0.0004    finalize 0.0045    func 0.2190    
Accumulated time: func 2.8366    prepare 0.2085    bound 2.5399    transfer 0.0044    finalize 0.0886    
Current worst splitting domains lb-rhs (depth):
-0.10248 (17), -0.09387 (17), -0.04946 (17), -0.04190 (17), -0.03611 (17), -0.03208 (17), -0.01893 (17), -0.01601 (17), -0.01268 (17), -0.00741 (17), -0.00604 (17), -0.00514 (17), -0.00372 (17), -0.00078 (17), 
length of domains: 14
Time: pickout 0.0007    decision 0.0413    set_bounds 0.0079    solve 0.2191    add 0.0010    
Accumulated time: pickout 0.0087    decision 0.7622    set_bounds 0.1921    solve 2.8380    add 0.0158    
Current (lb-rhs): -0.10247659683227539
891 domains visited
Cumulative time: 3.829157590866089

BaB round 13
batch: 14
Average branched neurons at iteration 13:  1.0000
splitting decisions: 
split level 0: [/input, 154] [/input, 110] [/input, 154] [/input.3, 28] [/input, 110] [/input, 154] [/input, 110] [/input, 150] [/input, 154] [/input.3, 28] 
split level 1: [/input, 150] [/input, 175] [/input, 150] [/input, 150] [/input, 171] [/input, 150] [/input, 175] [/input, 198] [/input, 150] [/input, 245] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 56 = 0.9642857142857143
pruning-in-iteration extra time: 0.009541749954223633
Time: prepare 0.0069    bound 0.2076    transfer 0.0004    finalize 0.0035    func 0.2184    
Accumulated time: func 3.0550    prepare 0.2158    bound 2.7475    transfer 0.0048    finalize 0.0922    
Current worst splitting domains lb-rhs (depth):
-0.04763 (19), -0.03280 (19), 
length of domains: 2
Time: pickout 0.0006    decision 0.0299    set_bounds 0.0077    solve 0.2185    add 0.0010    
Accumulated time: pickout 0.0093    decision 0.7921    set_bounds 0.1997    solve 3.0565    add 0.0168    
Current (lb-rhs): -0.04763305187225342
893 domains visited
Cumulative time: 4.087591171264648

BaB round 14
batch: 2
Average branched neurons at iteration 14:  1.0000
splitting decisions: 
split level 0: [/input, 171] [/input, 135] 
split level 1: [/input, 209] [/input.3, 30] 
split level 2: [/input, 132] [/input, 216] 
split level 3: [/input, 198] [/input, 198] 
split level 4: [/input, 188] [/input, 188] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.414817810058594e-05
Time: prepare 0.0076    bound 0.0051    transfer 0.0001    finalize 0.0025    func 0.0155    
Accumulated time: func 3.0705    prepare 0.2239    bound 2.7526    transfer 0.0050    finalize 0.0947    
length of domains: 0
Time: pickout 0.0009    decision 0.0218    set_bounds 0.0115    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0102    decision 0.8140    set_bounds 0.2112    solve 3.0721    add 0.0169    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
893 domains visited
Cumulative time: 4.13774847984314


Properties batch 3, size 1
Remaining timeout: 111.82982516288757
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.77817935]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.77817935]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 18] 
split level 3: [/input.3, 43] 
split level 4: [/input.3, 110] 
split level 5: [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 46 / 64 = 0.71875
pruning-in-iteration extra time: 0.009229421615600586
Time: prepare 0.0035    bound 0.2030    transfer 0.0004    finalize 0.0023    func 0.2095    
Accumulated time: func 0.2095    prepare 0.0040    bound 0.2030    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.24228 (6), -0.12702 (6), -0.10777 (6), -0.09936 (6), -0.09702 (6), -0.08575 (6), -0.07244 (6), -0.07228 (6), -0.05709 (6), -0.05657 (6), -0.05262 (6), -0.05123 (6), -0.04548 (6), -0.03862 (6), -0.01582 (6), -0.01014 (6), -0.00544 (6), -0.00190 (6), 
length of domains: 18
Time: pickout 0.0005    decision 0.0231    set_bounds 0.0109    solve 0.2096    add 0.0013    
Accumulated time: pickout 0.0005    decision 0.0231    set_bounds 0.0109    solve 0.2096    add 0.0013    
Current (lb-rhs): -0.242279052734375
18 domains visited
Cumulative time: 0.2494819164276123

BaB round 2
batch: 18
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 110] [/input, 242] [/input, 184] [/input, 100] [/input, 242] [/input, 128] [/input, 242] [/input, 128] [/input, 242] 
split level 1: [/input, 100] [/input, 100] [/input, 199] [/input, 100] [/input, 199] [/input, 199] [/input, 100] [/input, 199] [/input, 100] [/input, 199] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 72 = 0.9444444444444444
pruning-in-iteration extra time: 0.00982975959777832
Time: prepare 0.0081    bound 0.2160    transfer 0.0003    finalize 0.0033    func 0.2278    
Accumulated time: func 0.4373    prepare 0.0126    bound 0.4191    transfer 0.0007    finalize 0.0056    
Current worst splitting domains lb-rhs (depth):
-0.11362 (8), -0.07732 (8), -0.01834 (8), -0.00785 (8), 
length of domains: 4
Time: pickout 0.0008    decision 0.0327    set_bounds 0.0083    solve 0.2279    add 0.0009    
Accumulated time: pickout 0.0013    decision 0.0557    set_bounds 0.0192    solve 0.4374    add 0.0023    
Current (lb-rhs): -0.11361801624298096
22 domains visited
Cumulative time: 0.5206565856933594

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input.3, 126] [/input, 184] [/input, 209] 
split level 1: [/input, 209] [/input, 209] [/input, 131] [/input, 227] 
split level 2: [/input, 199] [/input, 198] [/input, 199] [/input, 199] 
split level 3: [/input, 154] [/input.3, 217] [/input.3, 126] [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010919570922851562
Time: prepare 0.0073    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.4519    prepare 0.0204    bound 0.4236    transfer 0.0008    finalize 0.0081    
length of domains: 0
Time: pickout 0.0008    decision 0.0242    set_bounds 0.0103    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0799    set_bounds 0.0295    solve 0.4521    add 0.0023    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
22 domains visited
Cumulative time: 0.5708014965057373


Properties batch 4, size 1
Remaining timeout: 111.15964889526367
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.24560428]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.24560428]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 236] 
split level 2: [/input.3, 193] 
split level 3: [/input.3, 197] 
split level 4: [/input.3, 55] 
split level 5: [/input.3, 217] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 64 = 0.6875
pruning-in-iteration extra time: 0.008951425552368164
Time: prepare 0.0035    bound 0.1963    transfer 0.0003    finalize 0.0021    func 0.2025    
Accumulated time: func 0.2025    prepare 0.0040    bound 0.1963    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.54372 (6), -0.49185 (6), -0.41536 (6), -0.36476 (6), -0.36074 (6), -0.31187 (6), -0.28887 (6), -0.28254 (6), -0.26878 (6), -0.22074 (6), -0.21599 (6), -0.20429 (6), -0.20344 (6), -0.19449 (6), -0.18622 (6), -0.17662 (6), -0.13978 (6), -0.13205 (6), -0.11925 (6), -0.05709 (6), 
length of domains: 20
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0108    solve 0.2025    add 0.0013    
Accumulated time: pickout 0.0005    decision 0.0236    set_bounds 0.0108    solve 0.2025    add 0.0013    
Current (lb-rhs): -0.5437239408493042
20 domains visited
Cumulative time: 0.24290823936462402

BaB round 2
batch: 20
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 28] [/input, 128] [/input, 110] [/input.3, 72] [/input, 128] [/input, 110] [/input, 128] [/input, 128] [/input, 184] [/input, 128] 
split level 1: [/input.3, 72] [/input, 110] [/input, 100] [/input, 100] [/input, 110] [/input, 100] [/input.3, 72] [/input, 184] [/input, 128] [/input.3, 72] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 80 = 0.725
pruning-in-iteration extra time: 0.010080814361572266
Time: prepare 0.0090    bound 0.2180    transfer 0.0003    finalize 0.0051    func 0.2326    
Accumulated time: func 0.4350    prepare 0.0135    bound 0.4143    transfer 0.0007    finalize 0.0072    
Current worst splitting domains lb-rhs (depth):
-0.36774 (8), -0.30864 (8), -0.29962 (8), -0.27517 (8), -0.25984 (8), -0.18992 (8), -0.18571 (8), -0.17613 (8), -0.17451 (8), -0.14866 (8), -0.13671 (8), -0.12055 (8), -0.11153 (8), -0.09861 (8), -0.08172 (8), -0.08053 (8), -0.07904 (8), -0.07831 (8), -0.07730 (8), -0.06691 (8), 
length of domains: 22
Time: pickout 0.0007    decision 0.0349    set_bounds 0.0099    solve 0.2327    add 0.0013    
Accumulated time: pickout 0.0011    decision 0.0585    set_bounds 0.0206    solve 0.4352    add 0.0026    
Current (lb-rhs): -0.3677372932434082
42 domains visited
Cumulative time: 0.522993803024292

BaB round 3
batch: 22
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 128] [/input.3, 28] [/input, 209] [/input, 184] [/input, 184] [/input, 184] [/input, 110] [/input, 184] [/input, 110] [/input, 184] 
split level 1: [/input.3, 195] [/input, 100] [/input, 171] [/input, 128] [/input, 100] [/input, 110] [/input, 132] [/input, 100] [/input, 132] [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 88 = 0.7159090909090908
pruning-in-iteration extra time: 0.010198116302490234
Time: prepare 0.0103    bound 0.2201    transfer 0.0003    finalize 0.0043    func 0.2351    
Accumulated time: func 0.6701    prepare 0.0244    bound 0.6344    transfer 0.0009    finalize 0.0115    
Current worst splitting domains lb-rhs (depth):
-0.21363 (10), -0.18951 (10), -0.17320 (10), -0.16921 (10), -0.12269 (10), -0.10641 (10), -0.10636 (10), -0.09050 (10), -0.08997 (10), -0.07035 (10), -0.06450 (10), -0.04362 (10), -0.04299 (10), -0.04065 (10), -0.03411 (10), -0.02891 (10), -0.02256 (10), -0.01875 (10), -0.01753 (10), -0.01558 (10), 
length of domains: 25
Time: pickout 0.0008    decision 0.0367    set_bounds 0.0117    solve 0.2351    add 0.0014    
Accumulated time: pickout 0.0019    decision 0.0953    set_bounds 0.0324    solve 0.6703    add 0.0039    
Current (lb-rhs): -0.21362906694412231
67 domains visited
Cumulative time: 0.8093409538269043

BaB round 4
batch: 25
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input.3, 195] [/input, 110] [/input, 132] [/input, 132] [/input.3, 28] [/input, 110] [/input, 100] [/input.3, 37] [/input, 100] 
split level 1: [/input, 100] [/input.3, 72] [/input.3, 28] [/input.3, 72] [/input, 199] [/input.3, 72] [/input, 132] [/input.3, 72] [/input, 199] [/input.3, 195] 
pruning_in_iteration open status: True
ratio of positive domain = 89 / 100 = 0.89
pruning-in-iteration extra time: 0.009597063064575195
Time: prepare 0.0115    bound 0.2094    transfer 0.0004    finalize 0.0055    func 0.2268    
Accumulated time: func 0.8969    prepare 0.0364    bound 0.8438    transfer 0.0013    finalize 0.0170    
Current worst splitting domains lb-rhs (depth):
-0.08193 (12), -0.07271 (12), -0.06816 (12), -0.04828 (12), -0.04680 (12), -0.04628 (12), -0.04221 (12), -0.02911 (12), -0.01098 (12), -0.00703 (12), -0.00329 (12), 
length of domains: 11
Time: pickout 0.0008    decision 0.0364    set_bounds 0.0128    solve 0.2270    add 0.0010    
Accumulated time: pickout 0.0027    decision 0.1317    set_bounds 0.0451    solve 0.8974    add 0.0049    
Current (lb-rhs): -0.08192551136016846
78 domains visited
Cumulative time: 1.088007926940918

BaB round 5
batch: 11
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 184] [/input, 135] [/input.3, 28] [/input, 135] [/input, 199] [/input, 184] [/input.3, 28] [/input, 110] [/input, 184] 
split level 1: [/input, 199] [/input, 209] [/input.3, 28] [/input, 199] [/input.3, 28] [/input.3, 195] [/input, 154] [/input, 135] [/input, 199] [/input, 209] 
split level 2: [/input, 198] [/input, 135] [/input.3, 195] [/input, 135] [/input.3, 195] [/input.3, 43] [/input, 135] [/input.3, 195] [/input, 198] [/input, 154] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 88 / 88 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0101    bound 0.0045    transfer 0.0001    finalize 0.0035    func 0.0184    
Accumulated time: func 0.9153    prepare 0.0469    bound 0.8483    transfer 0.0015    finalize 0.0205    
length of domains: 0
Time: pickout 0.0007    decision 0.0287    set_bounds 0.0124    solve 0.0184    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.1604    set_bounds 0.0575    solve 0.9158    add 0.0050    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
78 domains visited
Cumulative time: 1.1485481262207031


Properties batch 5, size 1
Remaining timeout: 109.91372919082642
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.68708694]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.68708694]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 244] 
split level 2: [/input.3, 43] 
split level 3: [/input.3, 153] 
split level 4: [/input.3, 55] 
split level 5: [/input.3, 216] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.008922576904296875
Time: prepare 0.0035    bound 0.1980    transfer 0.0002    finalize 0.0018    func 0.2037    
Accumulated time: func 0.2037    prepare 0.0041    bound 0.1980    transfer 0.0002    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.22839 (6), -0.12995 (6), -0.05267 (6), -0.04685 (6), -0.02961 (6), -0.02838 (6), -0.01661 (6), -0.00424 (6), -0.00400 (6), 
length of domains: 9
Time: pickout 0.0004    decision 0.0242    set_bounds 0.0112    solve 0.2038    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0242    set_bounds 0.0112    solve 0.2038    add 0.0008    
Current (lb-rhs): -0.22839409112930298
9 domains visited
Cumulative time: 0.24481558799743652

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 184] [/input, 110] [/input, 184] [/input, 184] [/input, 184] [/input, 184] [/input, 184] [/input, 184] 
split level 1: [/input, 100] [/input, 211] [/input, 100] [/input, 211] [/input, 128] [/input, 128] [/input, 128] [/input, 128] [/input, 128] 
split level 2: [/input, 199] [/input, 198] [/input, 209] [/input, 100] [/input, 110] [/input, 211] [/input, 110] [/input, 211] [/input, 211] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 72 = 0.9583333333333334
pruning-in-iteration extra time: 0.0069637298583984375
Time: prepare 0.0082    bound 0.1297    transfer 0.0002    finalize 0.0027    func 0.1410    
Accumulated time: func 0.3447    prepare 0.0128    bound 0.3277    transfer 0.0004    finalize 0.0045    
Current worst splitting domains lb-rhs (depth):
-0.04504 (9), -0.01495 (9), -0.01399 (9), 
length of domains: 3
Time: pickout 0.0006    decision 0.0269    set_bounds 0.0095    solve 0.1410    add 0.0007    
Accumulated time: pickout 0.0010    decision 0.0511    set_bounds 0.0207    solve 0.3448    add 0.0015    
Current (lb-rhs): -0.045035719871520996
12 domains visited
Cumulative time: 0.423969030380249

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input, 184] [/input, 184] 
split level 1: [/input, 128] [/input, 199] [/input, 199] 
split level 2: [/input, 209] [/input, 227] [/input, 227] 
split level 3: [/input, 198] [/input, 154] [/input, 154] 
split level 4: [/input, 154] [/input, 171] [/input, 171] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 6.985664367675781e-05
Time: prepare 0.0106    bound 0.0045    transfer 0.0001    finalize 0.0036    func 0.0189    
Accumulated time: func 0.3636    prepare 0.0239    bound 0.3322    transfer 0.0006    finalize 0.0081    
length of domains: 0
Time: pickout 0.0005    decision 0.0221    set_bounds 0.0149    solve 0.0190    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0732    set_bounds 0.0357    solve 0.3638    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.48087620735168457


Properties batch 6, size 1
Remaining timeout: 109.33474040031433
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.79047281]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.79047281]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 13] 
split level 2: [/input.3, 193] 
split level 3: [/input.3, 124] 
split level 4: [/input.3, 43] 
split level 5: [/input.3, 126] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 64 = 0.6875
pruning-in-iteration extra time: 0.007248401641845703
Time: prepare 0.0034    bound 0.1281    transfer 0.0003    finalize 0.0017    func 0.1337    
Accumulated time: func 0.1337    prepare 0.0039    bound 0.1281    transfer 0.0003    finalize 0.0017    
Current worst splitting domains lb-rhs (depth):
-0.28488 (6), -0.27325 (6), -0.25005 (6), -0.21567 (6), -0.18768 (6), -0.18365 (6), -0.16853 (6), -0.16355 (6), -0.15065 (6), -0.14410 (6), -0.14207 (6), -0.14050 (6), -0.13469 (6), -0.12868 (6), -0.10492 (6), -0.07843 (6), -0.07192 (6), -0.06492 (6), -0.03718 (6), -0.03064 (6), 
length of domains: 20
Time: pickout 0.0005    decision 0.0229    set_bounds 0.0109    solve 0.1337    add 0.0010    
Accumulated time: pickout 0.0005    decision 0.0229    set_bounds 0.0109    solve 0.1337    add 0.0010    
Current (lb-rhs): -0.2848803997039795
20 domains visited
Cumulative time: 0.1733400821685791

BaB round 2
batch: 20
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 110] [/input, 110] [/input, 110] [/input, 184] [/input, 140] [/input, 110] [/input, 110] [/input, 184] [/input.3, 217] 
split level 1: [/input.3, 69] [/input, 199] [/input, 100] [/input, 100] [/input, 140] [/input, 110] [/input, 175] [/input, 175] [/input.3, 69] [/input, 100] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 80 = 0.6875
pruning-in-iteration extra time: 0.007169246673583984
Time: prepare 0.0090    bound 0.1301    transfer 0.0003    finalize 0.0030    func 0.1424    
Accumulated time: func 0.2761    prepare 0.0133    bound 0.2582    transfer 0.0005    finalize 0.0047    
Current worst splitting domains lb-rhs (depth):
-0.22395 (8), -0.17513 (8), -0.15716 (8), -0.14196 (8), -0.12847 (8), -0.11807 (8), -0.11719 (8), -0.10223 (8), -0.09503 (8), -0.08783 (8), -0.08508 (8), -0.08475 (8), -0.08159 (8), -0.07996 (8), -0.07473 (8), -0.06700 (8), -0.04530 (8), -0.04459 (8), -0.04428 (8), -0.03088 (8), 
length of domains: 25
Time: pickout 0.0006    decision 0.0328    set_bounds 0.0098    solve 0.1425    add 0.0010    
Accumulated time: pickout 0.0010    decision 0.0556    set_bounds 0.0207    solve 0.2762    add 0.0020    
Current (lb-rhs): -0.2239527702331543
45 domains visited
Cumulative time: 0.36031079292297363

BaB round 3
batch: 25
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] [/input, 100] [/input, 199] [/input, 110] [/input, 209] [/input, 128] [/input, 184] [/input, 110] [/input, 184] [/input, 128] 
split level 1: [/input, 100] [/input.3, 217] [/input, 209] [/input, 209] [/input.3, 69] [/input.3, 217] [/input.3, 69] [/input, 209] [/input, 209] [/input, 110] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 100 = 0.78
pruning-in-iteration extra time: 0.007996559143066406
Time: prepare 0.0171    bound 0.1509    transfer 0.0002    finalize 0.0040    func 0.1724    
Accumulated time: func 0.4485    prepare 0.0311    bound 0.4091    transfer 0.0008    finalize 0.0088    
Current worst splitting domains lb-rhs (depth):
-0.13377 (10), -0.09767 (10), -0.08449 (10), -0.07761 (10), -0.06147 (10), -0.05946 (10), -0.05446 (10), -0.04887 (10), -0.04403 (10), -0.04380 (10), -0.04087 (10), -0.04027 (10), -0.03539 (10), -0.03365 (10), -0.03031 (10), -0.02923 (10), -0.02662 (10), -0.01714 (10), -0.01364 (10), -0.01009 (10), 
length of domains: 22
Time: pickout 0.0006    decision 0.0458    set_bounds 0.0202    solve 0.1726    add 0.0010    
Accumulated time: pickout 0.0016    decision 0.1014    set_bounds 0.0409    solve 0.4488    add 0.0031    
Current (lb-rhs): -0.13376939296722412
67 domains visited
Cumulative time: 0.6011068820953369

BaB round 4
batch: 22
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input, 128] [/input, 227] [/input, 154] [/input, 184] [/input, 100] [/input, 128] [/input.3, 69] [/input, 154] [/input.3, 69] 
split level 1: [/input, 128] [/input, 140] [/input, 154] [/input, 175] [/input, 154] [/input, 198] [/input, 199] [/input, 154] [/input.3, 175] [/input, 199] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 88 = 0.9318181818181819
pruning-in-iteration extra time: 0.007142543792724609
Time: prepare 0.0106    bound 0.1339    transfer 0.0003    finalize 0.0034    func 0.1483    
Accumulated time: func 0.5967    prepare 0.0422    bound 0.5430    transfer 0.0011    finalize 0.0122    
Current worst splitting domains lb-rhs (depth):
-0.10570 (12), -0.06485 (12), -0.05500 (12), -0.03950 (12), -0.02448 (12), -0.00437 (12), 
length of domains: 6
Time: pickout 0.0006    decision 0.0348    set_bounds 0.0120    solve 0.1483    add 0.0008    
Accumulated time: pickout 0.0022    decision 0.1362    set_bounds 0.0528    solve 0.5971    add 0.0038    
Current (lb-rhs): -0.10569828748703003
73 domains visited
Cumulative time: 0.7982070446014404

BaB round 5
batch: 6
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 199] [/input, 184] [/input.3, 175] [/input, 140] [/input.3, 217] [/input, 199] 
split level 1: [/input, 209] [/input.3, 69] [/input.3, 28] [/input, 110] [/input.3, 165] [/input, 209] 
split level 2: [/input, 198] [/input, 209] [/input, 209] [/input, 209] [/input.3, 28] [/input, 198] 
split level 3: [/input, 154] [/input, 154] [/input.3, 165] [/input.3, 28] [/input.3, 181] [/input.3, 165] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 8.368492126464844e-05
Time: prepare 0.0112    bound 0.0048    transfer 0.0001    finalize 0.0037    func 0.0199    
Accumulated time: func 0.6166    prepare 0.0539    bound 0.5478    transfer 0.0012    finalize 0.0159    
length of domains: 0
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0155    solve 0.0200    add 0.0001    
Accumulated time: pickout 0.0028    decision 0.1610    set_bounds 0.0683    solve 0.6171    add 0.0039    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
73 domains visited
Cumulative time: 0.8595154285430908


Properties batch 7, size 1
Remaining timeout: 108.37973809242249
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.30380142]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.30380142]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 43] 
split level 5: [/input.3, 121] 
pruning_in_iteration open status: True
ratio of positive domain = 37 / 64 = 0.578125
pruning-in-iteration extra time: 0.009830713272094727
Time: prepare 0.0036    bound 0.2076    transfer 0.0002    finalize 0.0023    func 0.2139    
Accumulated time: func 0.2139    prepare 0.0041    bound 0.2076    transfer 0.0002    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.87555 (6), -0.60199 (6), -0.53611 (6), -0.52908 (6), -0.34397 (6), -0.26826 (6), -0.26220 (6), -0.24531 (6), -0.23880 (6), -0.19161 (6), -0.16961 (6), -0.16227 (6), -0.16044 (6), -0.14267 (6), -0.13358 (6), -0.11866 (6), -0.11534 (6), -0.11476 (6), -0.05920 (6), -0.05813 (6), 
length of domains: 27
Time: pickout 0.0004    decision 0.0242    set_bounds 0.0110    solve 0.2140    add 0.0012    
Accumulated time: pickout 0.0004    decision 0.0242    set_bounds 0.0110    solve 0.2140    add 0.0012    
Current (lb-rhs): -0.875546932220459
27 domains visited
Cumulative time: 0.2552609443664551

BaB round 2
batch: 27
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 198] [/input, 198] [/input, 198] [/input, 184] [/input, 198] [/input, 198] [/input, 198] [/input, 184] [/input, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 35 / 54 = 0.6481481481481481
pruning-in-iteration extra time: 0.009034156799316406
Time: prepare 0.0066    bound 0.1954    transfer 0.0003    finalize 0.0021    func 0.2047    
Accumulated time: func 0.4186    prepare 0.0112    bound 0.4030    transfer 0.0005    finalize 0.0044    
Current worst splitting domains lb-rhs (depth):
-0.78020 (7), -0.36879 (7), -0.27597 (7), -0.24715 (7), -0.21706 (7), -0.21254 (7), -0.12841 (7), -0.11970 (7), -0.11781 (7), -0.10486 (7), -0.09804 (7), -0.09599 (7), -0.05442 (7), -0.04068 (7), -0.03252 (7), -0.03220 (7), -0.03128 (7), -0.00668 (7), -0.00532 (7), 
length of domains: 19
Time: pickout 0.0007    decision 0.0371    set_bounds 0.0057    solve 0.2047    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0613    set_bounds 0.0167    solve 0.4187    add 0.0022    
Current (lb-rhs): -0.7801971435546875
46 domains visited
Cumulative time: 0.5048573017120361

BaB round 3
batch: 19
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input, 184] [/input, 184] [/input, 188] [/input, 198] [/input, 188] [/input, 188] [/input, 100] [/input, 188] [/input, 198] 
split level 1: [/input, 100] [/input, 188] [/input, 211] [/input, 150] [/input, 188] [/input, 150] [/input, 150] [/input.3, 187] [/input, 150] [/input, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 76 = 0.8157894736842105
pruning-in-iteration extra time: 0.007469654083251953
Time: prepare 0.0087    bound 0.1378    transfer 0.0003    finalize 0.0032    func 0.1500    
Accumulated time: func 0.5686    prepare 0.0204    bound 0.5407    transfer 0.0008    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-0.52808 (9), -0.29890 (9), -0.12965 (9), -0.09089 (9), -0.08269 (9), -0.07783 (9), -0.05799 (9), -0.04357 (9), -0.03315 (9), -0.03262 (9), -0.02775 (9), -0.01688 (9), -0.01380 (9), -0.00966 (9), 
length of domains: 14
Time: pickout 0.0006    decision 0.0323    set_bounds 0.0099    solve 0.1501    add 0.0009    
Accumulated time: pickout 0.0017    decision 0.0936    set_bounds 0.0265    solve 0.5688    add 0.0031    
Current (lb-rhs): -0.5280771255493164
60 domains visited
Cumulative time: 0.6991024017333984

BaB round 4
batch: 14
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 128] [/input, 110] [/input, 110] [/input, 245] [/input, 184] [/input, 245] [/input, 128] [/input.3, 187] [/input, 216] [/input, 188] 
split level 1: [/input, 199] [/input, 150] [/input, 188] [/input, 110] [/input, 245] [/input.3, 187] [/input.3, 181] [/input, 110] [/input, 150] [/input, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 48 / 56 = 0.8571428571428572
pruning-in-iteration extra time: 0.007155179977416992
Time: prepare 0.0068    bound 0.1313    transfer 0.0003    finalize 0.0024    func 0.1408    
Accumulated time: func 0.7094    prepare 0.0277    bound 0.6720    transfer 0.0011    finalize 0.0100    
Current worst splitting domains lb-rhs (depth):
-0.34627 (11), -0.20390 (11), -0.07893 (11), -0.03756 (11), -0.03686 (11), -0.01733 (11), -0.01293 (11), -0.01044 (11), 
length of domains: 8
Time: pickout 0.0006    decision 0.0299    set_bounds 0.0080    solve 0.1409    add 0.0008    
Accumulated time: pickout 0.0023    decision 0.1235    set_bounds 0.0345    solve 0.7097    add 0.0039    
Current (lb-rhs): -0.346268892288208
68 domains visited
Cumulative time: 0.8797149658203125

BaB round 5
batch: 8
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] [/input, 211] [/input, 245] [/input, 245] [/input, 245] [/input.3, 217] [/input.3, 206] [/input, 245] 
split level 1: [/input, 209] [/input, 198] [/input.3, 181] [/input, 184] [/input.3, 187] [/input, 209] [/input.3, 181] [/input.3, 187] 
split level 2: [/input, 227] [/input, 209] [/input.3, 217] [/input.3, 187] [/input.3, 181] [/input, 227] [/input.3, 217] [/input.3, 181] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.007112741470336914
Time: prepare 0.0075    bound 0.1332    transfer 0.0002    finalize 0.0025    func 0.1434    
Accumulated time: func 0.8528    prepare 0.0356    bound 0.8052    transfer 0.0013    finalize 0.0125    
Current worst splitting domains lb-rhs (depth):
-0.22743 (14), -0.21404 (14), -0.16463 (14), -0.15812 (14), -0.14112 (14), -0.08672 (14), 
length of domains: 6
Time: pickout 0.0006    decision 0.0259    set_bounds 0.0097    solve 0.1434    add 0.0008    
Accumulated time: pickout 0.0029    decision 0.1494    set_bounds 0.0442    solve 0.8532    add 0.0047    
Current (lb-rhs): -0.2274305820465088
74 domains visited
Cumulative time: 1.060549020767212

BaB round 6
batch: 6
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] [/input.3, 217] [/input.3, 217] [/input.3, 217] [/input.3, 217] [/input.3, 217] 
split level 1: [/input.3, 181] [/input.3, 206] [/input.3, 55] [/input.3, 181] [/input.3, 55] [/input.3, 55] 
split level 2: [/input.3, 55] [/input.3, 55] [/input.3, 206] [/input.3, 55] [/input.3, 206] [/input.3, 206] 
split level 3: [/input, 110] [/input.3, 21] [/input.3, 21] [/input, 110] [/input.3, 21] [/input.3, 21] 
pruning_in_iteration open status: True
ratio of positive domain = 67 / 96 = 0.6979166666666667
pruning-in-iteration extra time: 0.0076291561126708984
Time: prepare 0.0112    bound 0.1461    transfer 0.0002    finalize 0.0036    func 0.1613    
Accumulated time: func 1.0141    prepare 0.0473    bound 0.9513    transfer 0.0016    finalize 0.0161    
Current worst splitting domains lb-rhs (depth):
-0.16648 (18), -0.16594 (18), -0.15542 (18), -0.15142 (18), -0.14909 (18), -0.14445 (18), -0.13574 (18), -0.13439 (18), -0.10656 (18), -0.07617 (18), -0.07455 (18), -0.07134 (18), -0.05387 (18), -0.04726 (18), -0.04612 (18), -0.04245 (18), -0.04050 (18), -0.03888 (18), -0.03819 (18), -0.03465 (18), 
length of domains: 29
Time: pickout 0.0006    decision 0.0240    set_bounds 0.0144    solve 0.1614    add 0.0010    
Accumulated time: pickout 0.0035    decision 0.1734    set_bounds 0.0586    solve 1.0146    add 0.0056    
Current (lb-rhs): -0.16647827625274658
103 domains visited
Cumulative time: 1.2623331546783447

BaB round 7
batch: 29
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 206] [/input.3, 206] [/input.3, 206] [/input.3, 156] [/input.3, 206] [/input.3, 22] [/input.3, 156] [/input.3, 156] [/input.3, 156] [/input.3, 156] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 58 = 0.5517241379310345
pruning-in-iteration extra time: 0.007660388946533203
Time: prepare 0.0069    bound 0.1428    transfer 0.0002    finalize 0.0022    func 0.1522    
Accumulated time: func 1.1663    prepare 0.0547    bound 1.0941    transfer 0.0018    finalize 0.0183    
Current worst splitting domains lb-rhs (depth):
-0.15396 (19), -0.15336 (19), -0.14275 (19), -0.13885 (19), -0.13627 (19), -0.12778 (19), -0.12270 (19), -0.12135 (19), -0.09368 (19), -0.05704 (19), -0.05460 (19), -0.05409 (19), -0.05101 (19), -0.04952 (19), -0.04707 (19), -0.04043 (19), -0.02657 (19), -0.02418 (19), -0.02352 (19), -0.02324 (19), 
length of domains: 26
Time: pickout 0.0006    decision 0.0364    set_bounds 0.0067    solve 0.1524    add 0.0010    
Accumulated time: pickout 0.0041    decision 0.2098    set_bounds 0.0653    solve 1.1669    add 0.0066    
Current (lb-rhs): -0.1539623737335205
129 domains visited
Cumulative time: 1.4596335887908936

BaB round 8
batch: 26
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] [/input.3, 22] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 52 = 0.6923076923076923
pruning-in-iteration extra time: 0.009385347366333008
Time: prepare 0.0063    bound 0.2060    transfer 0.0003    finalize 0.0032    func 0.2159    
Accumulated time: func 1.3821    prepare 0.0614    bound 1.3001    transfer 0.0021    finalize 0.0216    
Current worst splitting domains lb-rhs (depth):
-0.14221 (20), -0.14151 (20), -0.13048 (20), -0.12716 (20), -0.12412 (20), -0.11550 (20), -0.11055 (20), -0.10917 (20), -0.08093 (20), -0.04183 (20), -0.03670 (20), -0.02224 (20), -0.01196 (20), -0.01017 (20), -0.00813 (20), -0.00363 (20), 
length of domains: 16
Time: pickout 0.0005    decision 0.0364    set_bounds 0.0062    solve 0.2160    add 0.0013    
Accumulated time: pickout 0.0046    decision 0.2461    set_bounds 0.0715    solve 1.3829    add 0.0079    
Current (lb-rhs): -0.14220952987670898
145 domains visited
Cumulative time: 1.7204139232635498

BaB round 9
batch: 16
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input.3, 153] [/input.3, 153] [/input.3, 153] [/input.3, 156] [/input.3, 153] [/input.3, 153] [/input.3, 153] [/input.3, 153] [/input.3, 153] [/input.3, 153] 
split level 1: [/input.3, 28] [/input.3, 28] [/input.3, 28] [/input.3, 21] [/input.3, 28] [/input.3, 28] [/input.3, 28] [/input.3, 28] [/input.3, 28] [/input.3, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 39 / 64 = 0.609375
pruning-in-iteration extra time: 0.009627819061279297
Time: prepare 0.0074    bound 0.2121    transfer 0.0002    finalize 0.0036    func 0.2233    
Accumulated time: func 1.6055    prepare 0.0692    bound 1.5122    transfer 0.0023    finalize 0.0251    
Current worst splitting domains lb-rhs (depth):
-0.11254 (22), -0.11207 (22), -0.10254 (22), -0.09695 (22), -0.09668 (22), -0.08941 (22), -0.08639 (22), -0.08354 (22), -0.08215 (22), -0.08109 (22), -0.08094 (22), -0.05417 (22), -0.05071 (22), -0.04781 (22), -0.04350 (22), -0.03526 (22), -0.03366 (22), -0.01462 (22), -0.01037 (22), -0.00972 (22), 
length of domains: 25
Time: pickout 0.0006    decision 0.0321    set_bounds 0.0082    solve 0.2234    add 0.0013    
Accumulated time: pickout 0.0052    decision 0.2782    set_bounds 0.0798    solve 1.6063    add 0.0092    
Current (lb-rhs): -0.11254048347473145
170 domains visited
Cumulative time: 1.9864883422851562

BaB round 10
batch: 25
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 129] [/input.3, 215] [/input.3, 215] 
split level 1: [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 130] [/input.3, 94] [/input.3, 216] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 100 = 0.78
pruning-in-iteration extra time: 0.009684085845947266
Time: prepare 0.0113    bound 0.2112    transfer 0.0003    finalize 0.0048    func 0.2278    
Accumulated time: func 1.8332    prepare 0.0810    bound 1.7234    transfer 0.0027    finalize 0.0300    
Current worst splitting domains lb-rhs (depth):
-0.09590 (24), -0.09540 (24), -0.08574 (24), -0.08030 (24), -0.07991 (24), -0.07103 (24), -0.06961 (24), -0.06678 (24), -0.06522 (24), -0.06404 (24), -0.04389 (24), -0.04089 (24), -0.04029 (24), -0.03720 (24), -0.03174 (24), -0.02520 (24), -0.02278 (24), -0.01867 (24), -0.01394 (24), -0.00822 (24), 
length of domains: 22
Time: pickout 0.0007    decision 0.0371    set_bounds 0.0124    solve 0.2278    add 0.0012    
Accumulated time: pickout 0.0059    decision 0.3153    set_bounds 0.0922    solve 1.8341    add 0.0104    
Current (lb-rhs): -0.09589660167694092
192 domains visited
Cumulative time: 2.266301393508911

BaB round 11
batch: 22
Average branched neurons at iteration 11:  1.0000
splitting decisions: 
split level 0: [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] [/input.3, 215] 
split level 1: [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] 
pruning_in_iteration open status: True
ratio of positive domain = 64 / 88 = 0.7272727272727273
pruning-in-iteration extra time: 0.009662628173828125
Time: prepare 0.0099    bound 0.2121    transfer 0.0003    finalize 0.0044    func 0.2267    
Accumulated time: func 2.0599    prepare 0.0913    bound 1.9355    transfer 0.0030    finalize 0.0343    
Current worst splitting domains lb-rhs (depth):
-0.07950 (26), -0.07894 (26), -0.06914 (26), -0.06426 (26), -0.06365 (26), -0.06113 (26), -0.05785 (26), -0.05724 (26), -0.05461 (26), -0.05346 (26), -0.05077 (26), -0.04899 (26), -0.04792 (26), -0.04747 (26), -0.03740 (26), -0.03506 (26), -0.03236 (26), -0.03009 (26), -0.02129 (26), -0.02056 (26), 
length of domains: 24
Time: pickout 0.0007    decision 0.0342    set_bounds 0.0107    solve 0.2268    add 0.0013    
Accumulated time: pickout 0.0066    decision 0.3495    set_bounds 0.1029    solve 2.0609    add 0.0118    
Current (lb-rhs): -0.07950270175933838
216 domains visited
Cumulative time: 2.5405080318450928

BaB round 12
batch: 24
Average branched neurons at iteration 12:  1.0000
splitting decisions: 
split level 0: [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] 
split level 1: [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] [/input.3, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 96 = 0.6770833333333333
pruning-in-iteration extra time: 0.010405778884887695
Time: prepare 0.0106    bound 0.2243    transfer 0.0004    finalize 0.0044    func 0.2398    
Accumulated time: func 2.2998    prepare 0.1024    bound 2.1598    transfer 0.0034    finalize 0.0387    
Current worst splitting domains lb-rhs (depth):
-0.06581 (28), -0.06521 (28), -0.05538 (28), -0.05061 (28), -0.04983 (28), -0.04089 (28), -0.03972 (28), -0.03842 (28), -0.03833 (28), -0.03703 (28), -0.03697 (28), -0.03690 (28), -0.03527 (28), -0.03421 (28), -0.03000 (28), -0.02965 (28), -0.02839 (28), -0.02618 (28), -0.02563 (28), -0.01753 (28), 
length of domains: 31
Time: pickout 0.0007    decision 0.0354    set_bounds 0.0124    solve 0.2399    add 0.0012    
Accumulated time: pickout 0.0073    decision 0.3850    set_bounds 0.1153    solve 2.3008    add 0.0130    
Current (lb-rhs): -0.0658118724822998
247 domains visited
Cumulative time: 2.830824136734009

BaB round 13
batch: 31
Average branched neurons at iteration 13:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] [/input.3, 83] 
pruning_in_iteration open status: True
ratio of positive domain = 39 / 62 = 0.6290322580645161
pruning-in-iteration extra time: 0.009375572204589844
Time: prepare 0.0073    bound 0.2121    transfer 0.0004    finalize 0.0033    func 0.2234    
Accumulated time: func 2.5232    prepare 0.1102    bound 2.3720    transfer 0.0038    finalize 0.0420    
Current worst splitting domains lb-rhs (depth):
-0.06077 (29), -0.06016 (29), -0.05024 (29), -0.04558 (29), -0.04467 (29), -0.03593 (29), -0.03463 (29), -0.03285 (29), -0.03211 (29), -0.03188 (29), -0.03016 (29), -0.02921 (29), -0.02376 (29), -0.02364 (29), -0.01619 (29), -0.01534 (29), -0.01096 (29), -0.00825 (29), -0.00507 (29), -0.00390 (29), 
length of domains: 23
Time: pickout 0.0007    decision 0.0394    set_bounds 0.0071    solve 0.2235    add 0.0014    
Accumulated time: pickout 0.0080    decision 0.4244    set_bounds 0.1225    solve 2.5243    add 0.0144    
Current (lb-rhs): -0.06077384948730469
270 domains visited
Cumulative time: 3.1033835411071777

BaB round 14
batch: 23
Average branched neurons at iteration 14:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] [/input.3, 169] [/input.3, 169] [/input.3, 83] [/input.3, 139] [/input.3, 139] [/input.3, 139] [/input.3, 139] [/input.3, 139] [/input.3, 139] 
split level 1: [/input.3, 169] [/input.3, 126] [/input.3, 126] [/input.3, 169] [/input.3, 216] [/input.3, 216] [/input.3, 216] [/input.3, 216] [/input.3, 216] [/input.3, 216] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 92 = 0.7065217391304348
pruning-in-iteration extra time: 0.009703874588012695
Time: prepare 0.0103    bound 0.2125    transfer 0.0004    finalize 0.0046    func 0.2279    
Accumulated time: func 2.7511    prepare 0.1210    bound 2.5844    transfer 0.0042    finalize 0.0467    
Current worst splitting domains lb-rhs (depth):
-0.04732 (31), -0.04682 (31), -0.04027 (31), -0.03923 (31), -0.03621 (31), -0.03413 (31), -0.03141 (31), -0.03136 (31), -0.03046 (31), -0.03031 (31), -0.02304 (31), -0.02037 (31), -0.01988 (31), -0.01887 (31), -0.01862 (31), -0.01837 (31), -0.01681 (31), -0.01589 (31), -0.01484 (31), -0.01458 (31), 
length of domains: 27
Time: pickout 0.0008    decision 0.0350    set_bounds 0.0120    solve 0.2280    add 0.0011    
Accumulated time: pickout 0.0088    decision 0.4593    set_bounds 0.1344    solve 2.7523    add 0.0154    
Current (lb-rhs): -0.047322988510131836
297 domains visited
Cumulative time: 3.380598306655884

BaB round 15
batch: 27
Average branched neurons at iteration 15:  1.0000
splitting decisions: 
split level 0: [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] [/input.3, 169] 
pruning_in_iteration open status: True
ratio of positive domain = 29 / 54 = 0.537037037037037
pruning-in-iteration extra time: 0.008681297302246094
Time: prepare 0.0063    bound 0.2072    transfer 0.0004    finalize 0.0027    func 0.2166    
Accumulated time: func 2.9676    prepare 0.1277    bound 2.7916    transfer 0.0045    finalize 0.0494    
Current worst splitting domains lb-rhs (depth):
-0.04252 (32), -0.04212 (32), -0.03492 (32), -0.03360 (32), -0.03152 (32), -0.02926 (32), -0.02638 (32), -0.02616 (32), -0.02587 (32), -0.02566 (32), -0.01807 (32), -0.01555 (32), -0.01533 (32), -0.01460 (32), -0.01309 (32), -0.01292 (32), -0.01085 (32), -0.01053 (32), -0.00985 (32), -0.00812 (32), 
length of domains: 25
Time: pickout 0.0006    decision 0.0357    set_bounds 0.0061    solve 0.2168    add 0.0011    
Accumulated time: pickout 0.0094    decision 0.4950    set_bounds 0.1406    solve 2.9691    add 0.0165    
Current (lb-rhs): -0.04251718521118164
322 domains visited
Cumulative time: 3.641272783279419

BaB round 16
batch: 25
Average branched neurons at iteration 16:  1.0000
splitting decisions: 
split level 0: [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] [/input.3, 126] 
split level 1: [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] [/input.3, 137] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 100 = 0.74
pruning-in-iteration extra time: 0.009266376495361328
Time: prepare 0.0112    bound 0.2087    transfer 0.0003    finalize 0.0047    func 0.2250    
Accumulated time: func 3.1926    prepare 0.1393    bound 3.0003    transfer 0.0049    finalize 0.0541    
Current worst splitting domains lb-rhs (depth):
-0.03003 (34), -0.02998 (34), -0.02979 (34), -0.02698 (34), -0.02281 (34), -0.02270 (34), -0.02178 (34), -0.02020 (34), -0.01796 (34), -0.01775 (34), -0.01389 (34), -0.01384 (34), -0.01383 (34), -0.01367 (34), -0.01082 (34), -0.01001 (34), -0.00903 (34), -0.00864 (34), -0.00729 (34), -0.00692 (34), 
length of domains: 26
Time: pickout 0.0006    decision 0.0363    set_bounds 0.0124    solve 0.2251    add 0.0015    
Accumulated time: pickout 0.0100    decision 0.5313    set_bounds 0.1530    solve 3.1942    add 0.0180    
Current (lb-rhs): -0.030034303665161133
348 domains visited
Cumulative time: 3.917722702026367

BaB round 17
batch: 26
Average branched neurons at iteration 17:  1.0000
splitting decisions: 
split level 0: [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] [/input.3, 183] 
pruning_in_iteration open status: True
ratio of positive domain = 29 / 52 = 0.5576923076923077
pruning-in-iteration extra time: 0.009712934494018555
Time: prepare 0.0061    bound 0.2122    transfer 0.0003    finalize 0.0031    func 0.2218    
Accumulated time: func 3.4144    prepare 0.1459    bound 3.2125    transfer 0.0052    finalize 0.0572    
Current worst splitting domains lb-rhs (depth):
-0.02716 (35), -0.02711 (35), -0.02689 (35), -0.02130 (35), -0.01991 (35), -0.01982 (35), -0.01886 (35), -0.01724 (35), -0.01500 (35), -0.01159 (35), -0.01102 (35), -0.01098 (35), -0.01088 (35), -0.01073 (35), -0.00695 (35), -0.00643 (35), -0.00559 (35), -0.00538 (35), -0.00192 (35), -0.00137 (35), 
length of domains: 23
Time: pickout 0.0008    decision 0.0350    set_bounds 0.0060    solve 0.2219    add 0.0012    
Accumulated time: pickout 0.0108    decision 0.5664    set_bounds 0.1589    solve 3.4161    add 0.0192    
Current (lb-rhs): -0.02715611457824707
371 domains visited
Cumulative time: 4.182913541793823

BaB round 18
batch: 23
Average branched neurons at iteration 18:  1.0000
splitting decisions: 
split level 0: [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] [/input.3, 72] 
split level 1: [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 92 = 0.8369565217391304
pruning-in-iteration extra time: 0.009715080261230469
Time: prepare 0.0103    bound 0.2117    transfer 0.0004    finalize 0.0041    func 0.2266    
Accumulated time: func 3.6410    prepare 0.1566    bound 3.4242    transfer 0.0055    finalize 0.0614    
Current worst splitting domains lb-rhs (depth):
-0.02066 (37), -0.02062 (37), -0.02039 (37), -0.01344 (37), -0.01334 (37), -0.01237 (37), -0.01210 (37), -0.01073 (37), -0.00850 (37), -0.00505 (37), -0.00454 (37), -0.00441 (37), -0.00430 (37), -0.00423 (37), -0.00016 (37), 
length of domains: 15
Time: pickout 0.0006    decision 0.0347    set_bounds 0.0114    solve 0.2266    add 0.0010    
Accumulated time: pickout 0.0113    decision 0.6011    set_bounds 0.1703    solve 3.6427    add 0.0202    
Current (lb-rhs): -0.020664691925048828
386 domains visited
Cumulative time: 4.457746267318726

BaB round 19
batch: 15
Average branched neurons at iteration 19:  1.0000
splitting decisions: 
split level 0: [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] [/input.3, 124] 
split level 1: [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] [/input.3, 95] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 60 = 0.85
pruning-in-iteration extra time: 0.009114503860473633
Time: prepare 0.0067    bound 0.2010    transfer 0.0003    finalize 0.0033    func 0.2113    
Accumulated time: func 3.8523    prepare 0.1638    bound 3.6252    transfer 0.0058    finalize 0.0646    
Current worst splitting domains lb-rhs (depth):
-0.01423 (39), -0.01419 (39), -0.01396 (39), -0.00700 (39), -0.00690 (39), -0.00591 (39), -0.00528 (39), -0.00427 (39), -0.00203 (39), 
length of domains: 9
Time: pickout 0.0006    decision 0.0311    set_bounds 0.0078    solve 0.2114    add 0.0011    
Accumulated time: pickout 0.0120    decision 0.6322    set_bounds 0.1781    solve 3.8541    add 0.0213    
Current (lb-rhs): -0.014234066009521484
395 domains visited
Cumulative time: 4.71022367477417

BaB round 20
batch: 9
Average branched neurons at iteration 20:  1.0000
splitting decisions: 
split level 0: [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] [/input.3, 198] 
split level 1: [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] [/input.3, 18] 
split level 2: [/input.3, 194] [/input.3, 26] [/input.3, 194] [/input.3, 194] [/input.3, 194] [/input.3, 194] [/input.3, 194] [/input.3, 194] [/input.3, 194] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 72 = 0.9166666666666666
pruning-in-iteration extra time: 0.009181022644042969
Time: prepare 0.0081    bound 0.2075    transfer 0.0004    finalize 0.0034    func 0.2195    
Accumulated time: func 4.0718    prepare 0.1724    bound 3.8328    transfer 0.0062    finalize 0.0680    
Current worst splitting domains lb-rhs (depth):
-0.00798 (42), -0.00768 (42), -0.00731 (42), -0.00327 (42), -0.00072 (42), -0.00063 (42), 
length of domains: 6
Time: pickout 0.0007    decision 0.0276    set_bounds 0.0101    solve 0.2196    add 0.0008    
Accumulated time: pickout 0.0127    decision 0.6598    set_bounds 0.1882    solve 4.0737    add 0.0221    
Current (lb-rhs): -0.007983684539794922
401 domains visited
Cumulative time: 4.9695611000061035

BaB round 21
batch: 6
Average branched neurons at iteration 21:  1.0000
splitting decisions: 
split level 0: [/input.3, 23] [/input.3, 23] [/input.3, 23] [/input.3, 23] [/input.3, 23] [/input.3, 23] 
split level 1: [/input.3, 26] [/input.3, 194] [/input.3, 26] [/input.3, 26] [/input.3, 26] [/input.3, 194] 
split level 2: [/input.3, 99] [/input.3, 3] [/input.3, 3] [/input.3, 3] [/input.3, 99] [/input.3, 3] 
split level 3: [/input.3, 116] [/input.3, 99] [/input.3, 99] [/input.3, 99] [/input.3, 3] [/input.3, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 96 = 0.9791666666666666
pruning-in-iteration extra time: 0.0057523250579833984
Time: prepare 0.0106    bound 0.1285    transfer 0.0003    finalize 0.0052    func 0.1448    
Accumulated time: func 4.2166    prepare 0.1835    bound 3.9613    transfer 0.0065    finalize 0.0733    
Current worst splitting domains lb-rhs (depth):
-0.00022 (46), -0.00020 (46), 
length of domains: 2
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0140    solve 0.1449    add 0.0010    
Accumulated time: pickout 0.0134    decision 0.6852    set_bounds 0.2022    solve 4.2186    add 0.0231    
Current (lb-rhs): -0.0002231597900390625
403 domains visited
Cumulative time: 5.156144618988037

BaB round 22
batch: 2
Average branched neurons at iteration 22:  1.0000
splitting decisions: 
split level 0: [/input.3, 86] [/input.3, 86] 
split level 1: [/input.3, 49] [/input.3, 49] 
split level 2: [/input.3, 116] [/input.3, 116] 
split level 3: [/input.3, 232] [/input.3, 232] 
split level 4: [/input.3, 159] [/input.3, 159] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.000125885009765625
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 4.2309    prepare 0.1912    bound 3.9659    transfer 0.0066    finalize 0.0756    
length of domains: 0
Time: pickout 0.0007    decision 0.0212    set_bounds 0.0106    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0141    decision 0.7064    set_bounds 0.2128    solve 4.2330    add 0.0232    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
403 domains visited
Cumulative time: 5.203387022018433


Properties batch 8, size 1
Remaining timeout: 103.0752055644989
##### Instance 334 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.21807516]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.01035964e-05,  9.61650133e-01,  4.51670587e-03, -1.95077062e-03,
        -3.98626924e-03,  1.06371939e-04,  2.28796154e-04,  5.85524738e-03,
        -1.09616667e-03,  2.71792710e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.21807516]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 35
Node /17 input 0: size torch.Size([256]) unstable 98
-----------------
# of unstable neurons: 133
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 63] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 26] 
split level 3: [/input.3, 159] 
split level 4: [/input, 100] 
split level 5: [/input.3, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 29 / 64 = 0.453125
pruning-in-iteration extra time: 0.009778499603271484
Time: prepare 0.0066    bound 0.2147    transfer 0.0002    finalize 0.0030    func 0.2248    
Accumulated time: func 0.2248    prepare 0.0071    bound 0.2147    transfer 0.0002    finalize 0.0030    
Current worst splitting domains lb-rhs (depth):
-0.43347 (6), -0.41841 (6), -0.31278 (6), -0.30419 (6), -0.27841 (6), -0.23437 (6), -0.22382 (6), -0.21881 (6), -0.20910 (6), -0.18424 (6), -0.16536 (6), -0.16225 (6), -0.16098 (6), -0.15825 (6), -0.15735 (6), -0.15277 (6), -0.15123 (6), -0.14178 (6), -0.12706 (6), -0.12250 (6), 
length of domains: 35
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0112    solve 0.2249    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0112    solve 0.2249    add 0.0013    
Current (lb-rhs): -0.4334731101989746
35 domains visited
Cumulative time: 0.26468372344970703

BaB round 2
batch: 35
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 184] [/input, 184] [/input, 110] [/input, 110] [/input, 184] [/input, 110] [/input, 110] [/input, 110] [/input, 110] [/input, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 42 / 70 = 0.6
pruning-in-iteration extra time: 0.009360313415527344
Time: prepare 0.0080    bound 0.2080    transfer 0.0003    finalize 0.0032    func 0.2196    
Accumulated time: func 0.4444    prepare 0.0155    bound 0.4227    transfer 0.0006    finalize 0.0062    
Current worst splitting domains lb-rhs (depth):
-0.32925 (7), -0.26336 (7), -0.25214 (7), -0.20903 (7), -0.20704 (7), -0.18150 (7), -0.17844 (7), -0.16411 (7), -0.14168 (7), -0.13121 (7), -0.12768 (7), -0.10404 (7), -0.09633 (7), -0.07474 (7), -0.07380 (7), -0.07132 (7), -0.07010 (7), -0.06837 (7), -0.06383 (7), -0.05687 (7), 
length of domains: 28
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0076    solve 0.2197    add 0.0011    
Accumulated time: pickout 0.0011    decision 0.0638    set_bounds 0.0188    solve 0.4445    add 0.0023    
Current (lb-rhs): -0.32924795150756836
63 domains visited
Cumulative time: 0.5352156162261963

BaB round 3
batch: 28
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 110] [/input, 110] [/input, 184] [/input, 184] [/input, 110] [/input, 184] [/input, 131] [/input, 131] [/input, 131] [/input, 110] 
pruning_in_iteration open status: True
ratio of positive domain = 33 / 56 = 0.5892857142857143
pruning-in-iteration extra time: 0.009387731552124023
Time: prepare 0.0068    bound 0.2096    transfer 0.0004    finalize 0.0031    func 0.2199    
Accumulated time: func 0.6643    prepare 0.0227    bound 0.6323    transfer 0.0010    finalize 0.0093    
Current worst splitting domains lb-rhs (depth):
-0.22630 (8), -0.21574 (8), -0.17300 (8), -0.16096 (8), -0.16070 (8), -0.13670 (8), -0.11303 (8), -0.11241 (8), -0.10175 (8), -0.09777 (8), -0.08981 (8), -0.07299 (8), -0.07082 (8), -0.05596 (8), -0.03242 (8), -0.03065 (8), -0.02898 (8), -0.02545 (8), -0.02243 (8), -0.01730 (8), 
length of domains: 23
Time: pickout 0.0006    decision 0.0361    set_bounds 0.0065    solve 0.2201    add 0.0014    
Accumulated time: pickout 0.0017    decision 0.0999    set_bounds 0.0253    solve 0.6647    add 0.0037    
Current (lb-rhs): -0.22629988193511963
86 domains visited
Cumulative time: 0.8003523349761963

BaB round 4
batch: 23
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 128] [/input, 128] [/input, 131] [/input, 131] [/input, 135] [/input, 184] [/input, 128] [/input, 128] [/input, 131] [/input, 135] 
split level 1: [/input.3, 217] [/input, 199] [/input, 128] [/input, 135] [/input.3, 217] [/input, 135] [/input.3, 217] [/input, 199] [/input, 128] [/input, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 92 = 0.8586956521739131
pruning-in-iteration extra time: 0.009474754333496094
Time: prepare 0.0106    bound 0.2076    transfer 0.0003    finalize 0.0048    func 0.2234    
Accumulated time: func 0.8876    prepare 0.0338    bound 0.8398    transfer 0.0013    finalize 0.0141    
Current worst splitting domains lb-rhs (depth):
-0.16729 (10), -0.12449 (10), -0.08791 (10), -0.07692 (10), -0.07259 (10), -0.06654 (10), -0.06506 (10), -0.05820 (10), -0.02880 (10), -0.02264 (10), -0.01457 (10), -0.00941 (10), -0.00527 (10), 
length of domains: 13
Time: pickout 0.0008    decision 0.0340    set_bounds 0.0115    solve 0.2234    add 0.0012    
Accumulated time: pickout 0.0025    decision 0.1339    set_bounds 0.0368    solve 0.8881    add 0.0049    
Current (lb-rhs): -0.1672877073287964
99 domains visited
Cumulative time: 1.0718960762023926

BaB round 5
batch: 13
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input, 135] [/input, 135] [/input, 199] [/input, 128] [/input, 135] [/input, 128] [/input, 184] [/input, 128] [/input.3, 22] 
split level 1: [/input, 199] [/input, 150] [/input, 150] [/input, 209] [/input.3, 217] [/input.3, 22] [/input.3, 217] [/input.3, 217] [/input, 198] [/input.3, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 41 / 52 = 0.7884615384615384
pruning-in-iteration extra time: 0.009438037872314453
Time: prepare 0.0061    bound 0.2069    transfer 0.0004    finalize 0.0033    func 0.2170    
Accumulated time: func 1.1047    prepare 0.0404    bound 1.0467    transfer 0.0016    finalize 0.0175    
Current worst splitting domains lb-rhs (depth):
-0.08489 (12), -0.04633 (12), -0.03958 (12), -0.03030 (12), -0.02034 (12), -0.01798 (12), -0.01587 (12), -0.01566 (12), -0.01228 (12), -0.01104 (12), -0.00380 (12), 
length of domains: 11
Time: pickout 0.0007    decision 0.0285    set_bounds 0.0072    solve 0.2171    add 0.0009    
Accumulated time: pickout 0.0033    decision 0.1624    set_bounds 0.0440    solve 1.1052    add 0.0058    
Current (lb-rhs): -0.08488571643829346
110 domains visited
Cumulative time: 1.3268475532531738

BaB round 6
batch: 11
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 22] [/input.3, 22] [/input.3, 113] [/input, 128] [/input.3, 113] [/input.3, 22] [/input.3, 22] [/input.3, 113] [/input, 128] [/input.3, 113] 
split level 1: [/input.3, 126] [/input.3, 126] [/input.3, 3] [/input.3, 217] [/input.3, 3] [/input.3, 126] [/input.3, 126] [/input.3, 3] [/input.3, 217] [/input.3, 22] 
split level 2: [/input, 227] [/input, 227] [/input, 209] [/input.3, 99] [/input.3, 126] [/input, 227] [/input, 227] [/input, 198] [/input.3, 99] [/input.3, 126] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 88 = 0.9886363636363636
pruning-in-iteration extra time: 0.009611845016479492
Time: prepare 0.0105    bound 0.2150    transfer 0.0004    finalize 0.0044    func 0.2304    
Accumulated time: func 1.3350    prepare 0.0514    bound 1.2617    transfer 0.0020    finalize 0.0219    
Current worst splitting domains lb-rhs (depth):
-0.01278 (15), 
length of domains: 1
Time: pickout 0.0006    decision 0.0286    set_bounds 0.0132    solve 0.2304    add 0.0007    
Accumulated time: pickout 0.0038    decision 0.1910    set_bounds 0.0572    solve 1.3357    add 0.0065    
Current (lb-rhs): -0.012782692909240723
111 domains visited
Cumulative time: 1.6009547710418701

BaB round 7
batch: 1
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 99] 
split level 1: [/input, 198] 
split level 2: [/input, 154] 
split level 3: [/input, 150] 
split level 4: [/input, 135] 
split level 5: [/input, 171] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.939338684082031e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 1.3496    prepare 0.0592    bound 1.2664    transfer 0.0021    finalize 0.0244    
length of domains: 0
Time: pickout 0.0007    decision 0.0241    set_bounds 0.0128    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0045    decision 0.2151    set_bounds 0.0700    solve 1.3503    add 0.0065    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
111 domains visited
Cumulative time: 1.653531551361084

Result: safe in 18.6737 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 335, vnnlib ID: 335 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
         -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
         -9.06538963e-03, -6.77727163e-04]], device='cuda:0')
diversed PGD initialization time: 0.1280
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00505664, -0.02475470, -0.02900702, -0.06493410, -0.01924677,
           0.85030746, -0.05733970, -0.04379259,  0.38026050, -0.01444368],
         [-0.00505664, -0.02475470, -0.02900702, -0.06493410, -0.01924677,
           0.85030746, -0.05733970, -0.04379259,  0.38026050, -0.01444368]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.85536408, 0.87506217, 0.87931448, 0.91524160, 0.86955422,
          0.90764713, 0.89410007, 0.47004697, 0.86475116]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4077 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
         -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
         -9.06538963e-03, -6.77727163e-04]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 62, 1, 20] with unstable size 61 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [61]; unstable size 61; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 61] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.10712695, -1.45164490, -1.39567161, -2.40851426, -1.21920085,
         -2.15823221, -1.62384653, -2.80419445, -1.37147343]], device='cuda:0') None
best_l after optimization: -4.798766136169434
alpha/beta optimization time: 1.6411426067352295
initial alpha-crown bounds: tensor([[-0.34087640, -0.35306072, -0.39557174, -1.34181273, -0.33361465,
         -0.29855144, -0.35557371, -0.98072821, -0.39897627]], device='cuda:0')
Worst class: (+ rhs) -1.3418127298355103
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.81780767440796
##### Instance 335 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34087640]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34087640]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00914144515991211
Time: prepare 0.0035    bound 0.2016    transfer 0.0004    finalize 0.0026    func 0.2082    
Accumulated time: func 0.2082    prepare 0.0041    bound 0.2016    transfer 0.0004    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.08096 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0107    solve 0.2083    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0107    solve 0.2083    add 0.0009    
Current (lb-rhs): -0.08096349239349365
1 domains visited
Cumulative time: 0.24712419509887695

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 222] 
split level 4: [/input, 209] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0025    func 0.0146    
Accumulated time: func 0.2228    prepare 0.0119    bound 0.2062    transfer 0.0006    finalize 0.0051    
length of domains: 0
Time: pickout 0.0007    decision 0.0235    set_bounds 0.0105    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0461    set_bounds 0.0212    solve 0.2231    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2969515323638916


Properties batch 1, size 1
Remaining timeout: 117.42471408843994
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35306072]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35306072]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008398771286010742
Time: prepare 0.0038    bound 0.1895    transfer 0.0003    finalize 0.0021    func 0.1960    
Accumulated time: func 0.1960    prepare 0.0043    bound 0.1895    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.09387 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0249    set_bounds 0.0116    solve 0.1960    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0249    set_bounds 0.0116    solve 0.1960    add 0.0007    
Current (lb-rhs): -0.09387147426605225
1 domains visited
Cumulative time: 0.23786664009094238

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 222] 
split level 4: [/input, 209] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.2103    prepare 0.0121    bound 0.1941    transfer 0.0004    finalize 0.0045    
length of domains: 0
Time: pickout 0.0006    decision 0.0239    set_bounds 0.0108    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0488    set_bounds 0.0224    solve 0.2105    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2879674434661865


Properties batch 2, size 1
Remaining timeout: 117.03846526145935
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39557174]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39557174]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 150] 
split level 5: [/input.3, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009179830551147461
Time: prepare 0.0035    bound 0.2003    transfer 0.0003    finalize 0.0022    func 0.2065    
Accumulated time: func 0.2065    prepare 0.0040    bound 0.2003    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.09266 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0230    set_bounds 0.0110    solve 0.2065    add 0.0006    
Accumulated time: pickout 0.0005    decision 0.0230    set_bounds 0.0110    solve 0.2065    add 0.0006    
Current (lb-rhs): -0.09266424179077148
1 domains visited
Cumulative time: 0.24571514129638672

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 209] 
split level 4: [/input, 222] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.818771362304688e-05
Time: prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.2205    prepare 0.0117    bound 0.2048    transfer 0.0004    finalize 0.0045    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0107    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0466    set_bounds 0.0217    solve 0.2207    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2950022220611572


Properties batch 3, size 1
Remaining timeout: 116.64923596382141
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.34181273]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.34181273]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 220] 
split level 5: [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.00950479507446289
Time: prepare 0.0035    bound 0.2041    transfer 0.0003    finalize 0.0022    func 0.2102    
Accumulated time: func 0.2102    prepare 0.0040    bound 0.2041    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-1.05400 (6), -0.66162 (6), -0.62061 (6), -0.45614 (6), -0.15937 (6), -0.15257 (6), -0.09416 (6), -0.02112 (6), 
length of domains: 8
Time: pickout 0.0005    decision 0.0226    set_bounds 0.0106    solve 0.2103    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0226    set_bounds 0.0106    solve 0.2103    add 0.0008    
Current (lb-rhs): -1.0539956092834473
8 domains visited
Cumulative time: 0.24871277809143066

BaB round 2
batch: 8
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 17] [/input, 175] [/input, 17] [/input, 175] [/input, 17] [/input, 17] [/input, 12] [/input, 17] 
split level 1: [/input, 209] [/input, 17] [/input, 209] [/input, 17] [/input, 87] [/input, 87] [/input, 87] [/input, 87] 
split level 2: [/input, 87] [/input, 209] [/input.3, 144] [/input, 222] [/input, 209] [/input, 209] [/input, 209] [/input, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.009158134460449219
Time: prepare 0.0075    bound 0.2059    transfer 0.0003    finalize 0.0030    func 0.2168    
Accumulated time: func 0.4270    prepare 0.0119    bound 0.4100    transfer 0.0006    finalize 0.0052    
Current worst splitting domains lb-rhs (depth):
-0.21699 (9), -0.05656 (9), -0.01586 (9), 
length of domains: 3
Time: pickout 0.0005    decision 0.0261    set_bounds 0.0087    solve 0.2169    add 0.0008    
Accumulated time: pickout 0.0010    decision 0.0487    set_bounds 0.0193    solve 0.4271    add 0.0016    
Current (lb-rhs): -0.21699309349060059
11 domains visited
Cumulative time: 0.5022299289703369

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 12] [/input, 175] [/input, 175] 
split level 1: [/input, 87] [/input, 12] [/input, 12] 
split level 2: [/input, 227] [/input, 222] [/input, 222] 
split level 3: [/input, 209] [/input, 209] [/input, 209] 
split level 4: [/input, 254] [/input, 100] [/input, 100] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 8.845329284667969e-05
Time: prepare 0.0108    bound 0.0046    transfer 0.0001    finalize 0.0036    func 0.0191    
Accumulated time: func 0.4461    prepare 0.0232    bound 0.4145    transfer 0.0007    finalize 0.0088    
length of domains: 0
Time: pickout 0.0007    decision 0.0230    set_bounds 0.0153    solve 0.0192    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0717    set_bounds 0.0346    solve 0.4463    add 0.0017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
11 domains visited
Cumulative time: 0.5608656406402588


Properties batch 4, size 1
Remaining timeout: 115.99481153488159
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.33361465]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.33361465]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008594989776611328
Time: prepare 0.0035    bound 0.1921    transfer 0.0004    finalize 0.0023    func 0.1985    
Accumulated time: func 0.1985    prepare 0.0040    bound 0.1921    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.07401 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.1986    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0110    solve 0.1986    add 0.0008    
Current (lb-rhs): -0.07400768995285034
1 domains visited
Cumulative time: 0.23836398124694824

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 222] 
split level 4: [/input, 227] 
split level 5: [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0142    
Accumulated time: func 0.2127    prepare 0.0117    bound 0.1967    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0238    set_bounds 0.0106    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0471    set_bounds 0.0216    solve 0.2129    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2880105972290039


Properties batch 5, size 1
Remaining timeout: 115.61138463020325
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.29855144]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.29855144]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 248] 
split level 3: [/input.3, 216] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008790016174316406
Time: prepare 0.0037    bound 0.1971    transfer 0.0004    finalize 0.0022    func 0.2035    
Accumulated time: func 0.2035    prepare 0.0042    bound 0.1971    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.03632 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.2036    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0115    solve 0.2036    add 0.0006    
Current (lb-rhs): -0.03632158041000366
1 domains visited
Cumulative time: 0.244035005569458

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 222] 
split level 4: [/input, 209] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0145    
Accumulated time: func 0.2180    prepare 0.0119    bound 0.2018    transfer 0.0005    finalize 0.0046    
length of domains: 0
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0106    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0471    set_bounds 0.0221    solve 0.2182    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29349827766418457


Properties batch 6, size 1
Remaining timeout: 115.22349119186401
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35557371]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35557371]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008326530456542969
Time: prepare 0.0034    bound 0.1830    transfer 0.0003    finalize 0.0022    func 0.1890    
Accumulated time: func 0.1890    prepare 0.0039    bound 0.1830    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.09419 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0109    solve 0.1891    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0109    solve 0.1891    add 0.0006    
Current (lb-rhs): -0.09418666362762451
1 domains visited
Cumulative time: 0.228302001953125

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 87] 
split level 3: [/input, 222] 
split level 4: [/input, 209] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.794929504394531e-05
Time: prepare 0.0072    bound 0.0044    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.2031    prepare 0.0117    bound 0.1873    transfer 0.0004    finalize 0.0045    
length of domains: 0
Time: pickout 0.0005    decision 0.0240    set_bounds 0.0105    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0471    set_bounds 0.0214    solve 0.2033    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.27779674530029297


Properties batch 7, size 1
Remaining timeout: 114.8508927822113
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.98072821]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.98072821]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 153] 
split level 4: [/input.3, 162] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.008616209030151367
Time: prepare 0.0035    bound 0.1849    transfer 0.0003    finalize 0.0018    func 0.1907    
Accumulated time: func 0.1907    prepare 0.0040    bound 0.1849    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.22972 (6), -0.21622 (6), -0.18161 (6), -0.05343 (6), -0.03140 (6), -0.02660 (6), 
length of domains: 6
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.1908    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0110    solve 0.1908    add 0.0008    
Current (lb-rhs): -0.22972476482391357
6 domains visited
Cumulative time: 0.230149507522583

BaB round 2
batch: 6
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 254] [/input, 17] [/input, 17] [/input, 254] [/input, 254] [/input, 254] 
split level 1: [/input, 150] [/input.3, 248] [/input, 254] [/input, 164] [/input, 17] [/input, 164] 
split level 2: [/input, 17] [/input, 209] [/input, 150] [/input, 150] [/input, 175] [/input, 150] 
split level 3: [/input.3, 248] [/input, 222] [/input, 227] [/input.3, 248] [/input.3, 248] [/input.3, 248] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 9.870529174804688e-05
Time: prepare 0.0116    bound 0.0054    transfer 0.0001    finalize 0.0037    func 0.0209    
Accumulated time: func 0.2116    prepare 0.0161    bound 0.1903    transfer 0.0004    finalize 0.0055    
length of domains: 0
Time: pickout 0.0006    decision 0.0244    set_bounds 0.0150    solve 0.0211    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0476    set_bounds 0.0259    solve 0.2119    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.29169201850891113


Properties batch 8, size 1
Remaining timeout: 114.46438193321228
##### Instance 335 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39897627]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.83637303e-03, -1.23319626e-02, -2.13204324e-03, -1.01338029e-02,
        -2.70576961e-02,  1.02879846e+00, -1.03579834e-03, -3.07089537e-02,
        -9.06538963e-03, -6.77727163e-04], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39897627]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 20
Node /17 input 0: size torch.Size([256]) unstable 34
-----------------
# of unstable neurons: 54
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 80] 
split level 4: [/input.3, 248] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008383989334106445
Time: prepare 0.0036    bound 0.1864    transfer 0.0004    finalize 0.0024    func 0.1930    
Accumulated time: func 0.1930    prepare 0.0041    bound 0.1864    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.13298 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0108    solve 0.1931    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0108    solve 0.1931    add 0.0008    
Current (lb-rhs): -0.1329849362373352
1 domains visited
Cumulative time: 0.23271775245666504

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 175] 
split level 1: [/input, 17] 
split level 2: [/input, 209] 
split level 3: [/input, 87] 
split level 4: [/input, 222] 
split level 5: [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.082389831542969e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0142    
Accumulated time: func 0.2072    prepare 0.0119    bound 0.1909    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0241    set_bounds 0.0106    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0476    set_bounds 0.0214    solve 0.2074    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2827017307281494

Result: safe in 5.9155 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 336, vnnlib ID: 336 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.15200707e-03,  4.14963067e-03,  4.30054963e-03,  4.92076576e-03,
         -6.89399615e-03,  8.82823020e-03,  1.75944716e-03, -4.58806753e-05,
          6.78259134e-03,  9.80950356e-01]], device='cuda:0')
diversed PGD initialization time: 0.1386
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.01031911, 0.00986486, 0.06458662, 0.02441756, 0.55420619,
          0.01413488, 0.01340015, 0.03269808, 0.01228050, 0.26834720],
         [0.01031911, 0.00986486, 0.06458662, 0.02441756, 0.55420619,
          0.01413488, 0.01340015, 0.03269808, 0.01228050, 0.26834720]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25802809,  0.25848234,  0.20376059,  0.24392965, -0.28585899,
           0.25421232,  0.25494707,  0.23564912,  0.25606671]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1474 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2419 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 337, vnnlib ID: 337 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01092397, 0.01977258, 0.05375695, 0.04748379, 0.02384667, 0.04220488,
         0.01808968, 0.67716426, 0.03469222, 0.04334418]], device='cuda:0')
diversed PGD initialization time: 0.1277
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.43067874e-02,  7.51619041e-03, -3.17890346e-02,  6.46239519e-03,
          -3.20140272e-04, -4.22064215e-03, -9.71672684e-03, -1.00114858e+00,
          -1.11516565e-03]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1358 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2051 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 338, vnnlib ID: 338 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00692164, -0.02870382,  0.03040904,  0.45243201, -0.01871385,
          0.07513757,  0.01006693, -0.07024319,  0.02843548,  0.51824319]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00692164, -0.02870381,  0.03040905,  0.45243207, -0.01871383,
           0.07513756,  0.01006693, -0.07024319,  0.02843538,  0.51824319],
         [-0.00692164, -0.02870381,  0.03040905,  0.45243207, -0.01871383,
           0.07513756,  0.01006693, -0.07024319,  0.02843538,  0.51824319]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.45935372,  0.48113587,  0.42202300,  0.47114590,  0.37729451,
           0.44236514,  0.52267528,  0.42399669, -0.06581113]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 339, vnnlib ID: 339 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00632686, -0.00144151,  0.01090591,  0.00892238,  0.81905973,
          0.03395321,  0.01430540,  0.01916728,  0.01074479,  0.07150456]],
       device='cuda:0')
diversed PGD initialization time: 0.1253
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1342 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2171 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 340, vnnlib ID: 340 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.91471353e-03,  3.60213220e-04,  2.44322419e-03,  2.17095017e-04,
          4.69480082e-03,  8.92016292e-03,  1.29350275e-03, -8.43665004e-03,
          4.69879061e-03,  9.98072982e-01]], device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1327 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2028 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 341, vnnlib ID: 341 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01490998, -0.00848682,  0.00578061,  0.01119713, -0.03607420,
          0.06938139,  0.99398136, -0.04309197, -0.00531367,  0.05780523]],
       device='cuda:0')
diversed PGD initialization time: 0.1160
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1238 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2246 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 342, vnnlib ID: 342 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.59961593e-05,  2.01024115e-04,  7.71787763e-03,  1.08749717e-02,
         -3.36946920e-03, -2.72686779e-03,  1.00260246e+00, -3.08413804e-03,
          7.72115588e-03,  7.14357942e-03]], device='cuda:0')
diversed PGD initialization time: 0.1254
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.84374285e-02, -4.27190959e-03, -1.51571184e-02,  4.43810225e-03,
          -7.27427378e-03, -1.98575780e-02,  9.72835481e-01, -6.22420013e-03,
          -1.64606422e-03, -7.87168741e-04],
         [ 9.84374285e-02, -4.27190959e-03, -1.51571184e-02,  4.43810225e-03,
          -7.27427378e-03, -1.98575780e-02,  9.72835481e-01, -6.22420013e-03,
          -1.64606422e-03, -7.87168741e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.87439805, 0.97710741, 0.98799258, 0.96839738, 0.98010975,
          0.99269307, 0.97905970, 0.97448152, 0.97362268]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3857 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.59961593e-05,  2.01024115e-04,  7.71787763e-03,  1.08749717e-02,
         -3.36946920e-03, -2.72686779e-03,  1.00260246e+00, -3.08413804e-03,
          7.72115588e-03,  7.14357942e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 27, 1, 17] with unstable size 26 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [26]; unstable size 26; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30384257, -0.01592940, -0.17644867, -0.21725255, -0.29883343,
         -0.23779660, -0.44456890, -0.45439497, -0.12495896]], device='cuda:0') None
best_l after optimization: 1.2601091861724854
alpha/beta optimization time: 1.5396084785461426
initial alpha-crown bounds: tensor([[ 0.12560326,  0.22448084,  0.14829534,  0.18586132, -0.02016822,
          0.13024621,  0.07845289,  0.20101246,  0.18632504]], device='cuda:0')
Worst class: (+ rhs) -0.020168215036392212
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.99088907241821
##### Instance 342 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12560325860977173.

Properties batch 1, size 1
Remaining timeout: 117.91887736320496
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22448083758354187.

Properties batch 2, size 1
Remaining timeout: 117.85249829292297
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1482953429222107.

Properties batch 3, size 1
Remaining timeout: 117.78635239601135
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.18586131930351257.

Properties batch 4, size 1
Remaining timeout: 117.71740794181824
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02016822]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.59961593e-05,  2.01024115e-04,  7.71787763e-03,  1.08749717e-02,
        -3.36946920e-03, -2.72686779e-03,  1.00260246e+00, -3.08413804e-03,
         7.72115588e-03,  7.14357942e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02016822]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 17
Node /17 input 0: size torch.Size([256]) unstable 21
-----------------
# of unstable neurons: 38
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 18] 
split level 2: [/input.3, 123] 
split level 3: [/input, 149] 
split level 4: [/input, 178] 
split level 5: [/input, 174] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.511543273925781e-05
Time: prepare 0.0066    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0249    set_bounds 0.0117    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0249    set_bounds 0.0117    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05579805374145508


Properties batch 5, size 1
Remaining timeout: 117.56334567070007
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13024620711803436.

Properties batch 6, size 1
Remaining timeout: 117.49154663085938
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.07845288515090942.

Properties batch 7, size 1
Remaining timeout: 117.42522811889648
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20101246237754822.

Properties batch 8, size 1
Remaining timeout: 117.35839629173279
##### Instance 342 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1863250434398651.
Result: safe in 2.7082 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 343, vnnlib ID: 343 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00375218, -0.01279536, -0.00232340, -0.00276483, -0.02597495,
          1.02960753, -0.00126058, -0.03042883, -0.00902732, -0.00184795]],
       device='cuda:0')
diversed PGD initialization time: 0.1267
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.08790806,  0.02647819,  0.01476742, -0.05029799, -0.00664241,
           0.47320530,  0.02475287, -0.03105956,  0.47550032,  0.12920490],
         [-0.08790806,  0.02647819,  0.01476742, -0.05029799, -0.00664241,
           0.47320530,  0.02475287, -0.03105956,  0.47550032,  0.12920490]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.56111336,  0.44672710,  0.45843786,  0.52350330,  0.47984770,
           0.44845241,  0.50426483, -0.00229502,  0.34400040]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1349 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2076 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 344, vnnlib ID: 344 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00678844, 0.00503098, 0.03749841, 0.02201515, 0.44718045, 0.02958105,
         0.00963221, 0.08269802, 0.02285746, 0.33939570]], device='cuda:0')
diversed PGD initialization time: 0.1279
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1364 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2051 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 345, vnnlib ID: 345 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00128126e+00, -6.40821457e-03,  2.80454755e-04, -9.46666300e-03,
         -1.21829286e-03,  8.07827711e-03, -2.81956419e-03, -1.05350763e-02,
          6.44832850e-04, -6.25157356e-03]], device='cuda:0')
diversed PGD initialization time: 0.1424
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.56538975, -0.01518393,  0.01042917,  0.01436675, -0.00848543,
           0.04531644,  0.01479089, -0.01387665,  0.35193777, -0.00188463],
         [ 0.56538975, -0.01518393,  0.01042917,  0.01436675, -0.00848543,
           0.04531644,  0.01479089, -0.01387665,  0.35193777, -0.00188463]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.58057368, 0.55496061, 0.55102301, 0.57387519, 0.52007329,
          0.55059886, 0.57926643, 0.21345198, 0.56727439]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4270 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00128126e+00, -6.40821457e-03,  2.80454755e-04, -9.46666300e-03,
         -1.21829286e-03,  8.07827711e-03, -2.81956419e-03, -1.05350763e-02,
          6.44832850e-04, -6.25157356e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 48, 1, 9] with unstable size 47 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [47]; unstable size 47; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.42334807, 0.21544586, 0.18160853, 0.31995615, 0.16007066, 0.13068385,
         0.34306452, 0.07780035, 0.12395195]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.5081 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 346, vnnlib ID: 346 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.04389303, 0.02183656, 0.03355321, 0.02421123, 0.01943567, 0.05354988,
         0.02526522, 0.68133646, 0.03028027, 0.03720002]], device='cuda:0')
diversed PGD initialization time: 0.1308
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00110893,  0.00391783,  0.00562224, -0.00648390,  0.00581465,
           0.00145017,  0.00118430,  0.02803555,  0.00157653,  0.96245468],
         [-0.00110893,  0.00391783,  0.00562224, -0.00648390,  0.00581465,
           0.00145017,  0.00118430,  0.02803555,  0.00157653,  0.96245468]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02914448,  0.02411772,  0.02241331,  0.03451945,  0.02222090,
           0.02658538,  0.02685125,  0.02645902, -0.93441916]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1390 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1975 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 347, vnnlib ID: 347 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00573317, 0.00841337, 0.02817312, 0.02653418, 0.75975865, 0.02097148,
         0.01080123, 0.01693879, 0.01547334, 0.10219809]], device='cuda:0')
diversed PGD initialization time: 0.1273
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00593146, -0.00433846,  0.00181842, -0.02172872, -0.01146046,
           0.00135276, -0.01321727, -0.02190639,  0.12936530,  0.94852740],
         [-0.00593146, -0.00433846,  0.00181842, -0.02172872, -0.01146046,
           0.00135276, -0.01321727, -0.02190639,  0.12936530,  0.94852740]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00552899, -0.00712200, -0.01327888,  0.01026827, -0.01281321,
           0.00175681,  0.01044593, -0.14082575, -0.95998788]]],
       device='cuda:0')
number of violation:  6
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3138 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 348, vnnlib ID: 348 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00204623e+00, -2.30937377e-02,  4.35672700e-03, -1.65179372e-02,
         -1.45806260e-02,  5.08770347e-04,  1.10480189e-02, -1.59775615e-02,
         -3.34231555e-03, -1.51886642e-02]], device='cuda:0')
diversed PGD initialization time: 0.1358
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.96162397, -0.07891896,  0.30445278, -0.07888423, -0.02786056,
          -0.02995782, -0.01369977,  0.02414827, -0.03978675, -0.05732103],
         [ 0.96162397, -0.07891896,  0.30445278, -0.07888423, -0.02786056,
          -0.02995782, -0.01369977,  0.02414827, -0.03978675, -0.05732103]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.04054296, 0.65717119, 1.04050815, 0.98948455, 0.99158180,
          0.97532374, 0.93747568, 1.00141072, 1.01894498]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4142 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00204623e+00, -2.30937377e-02,  4.35672700e-03, -1.65179372e-02,
         -1.45806260e-02,  5.08770347e-04,  1.10480189e-02, -1.59775615e-02,
         -3.34231555e-03, -1.51886642e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 47, 1, 13] with unstable size 46 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [46]; unstable size 46; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.21551763, -0.45125973,  0.15460281,  0.16335526,  0.12127055,
          0.19531138, -0.17282432,  0.23547047, -0.07794186]], device='cuda:0') None
best_l after optimization: 3.130362033843994
alpha/beta optimization time: 1.6652309894561768
initial alpha-crown bounds: tensor([[ 0.47306874, -0.11662492,  0.44991112,  0.44744018,  0.36890188,
          0.45945263,  0.18418394,  0.45136952,  0.41265917]], device='cuda:0')
Worst class: (+ rhs) -0.11662492156028748
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.80797243118286
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4730687439441681.

Properties batch 1, size 1
Remaining timeout: 117.73096060752869
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11662492]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00204623e+00, -2.30937377e-02,  4.35672700e-03, -1.65179372e-02,
        -1.45806260e-02,  5.08770347e-04,  1.10480189e-02, -1.59775615e-02,
        -3.34231555e-03, -1.51886642e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11662492]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 27
-----------------
# of unstable neurons: 40
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input, 158] 
split level 3: [/input, 154] 
split level 4: [/input.3, 130] 
split level 5: [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0067    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0143    
Accumulated time: func 0.0143    prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0025    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0115    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0236    set_bounds 0.0115    solve 0.0143    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05395960807800293


Properties batch 2, size 1
Remaining timeout: 117.58165788650513
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.44991111755371094.

Properties batch 3, size 1
Remaining timeout: 117.50532579421997
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.44744017720222473.

Properties batch 4, size 1
Remaining timeout: 117.43371057510376
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3689018785953522.

Properties batch 5, size 1
Remaining timeout: 117.36385369300842
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.45945262908935547.

Properties batch 6, size 1
Remaining timeout: 117.29305052757263
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.18418394029140472.

Properties batch 7, size 1
Remaining timeout: 117.21802163124084
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4513695240020752.

Properties batch 8, size 1
Remaining timeout: 117.14382457733154
##### Instance 348 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4126591682434082.
Result: safe in 2.9269 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 349, vnnlib ID: 349 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00321301,  0.89051545, -0.00285897,  0.01331714,  0.00588851,
          0.01264536,  0.01242076,  0.03393070,  0.01527396,  0.00804184]],
       device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01305311,  0.05222504, -0.00977020, -0.04696353, -0.00297760,
           0.02782075, -0.02370191, -0.01786689,  1.02928960, -0.03488584],
         [-0.01305311,  0.05222504, -0.00977020, -0.04696353, -0.00297760,
           0.02782075, -0.02370191, -0.01786689,  1.02928960, -0.03488584]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.06527815,  0.06199524,  0.09918857,  0.05520264,  0.02440429,
           0.07592694,  0.07009193, -0.97706455,  0.08711088]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1335 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1981 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 350, vnnlib ID: 350 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.03687197e-02, -8.43159109e-03,  6.69118762e-03,  9.76287961e-01,
         -2.80634351e-02,  3.12889591e-02, -4.29861620e-03, -2.04187483e-02,
         -5.13352454e-04,  1.51622295e-03]], device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02890996,  0.02227966, -0.04806738,  0.62419939, -0.02072637,
          -0.15539280, -0.02167129, -0.03840642,  0.66866469, -0.03156443],
         [-0.02890996,  0.02227966, -0.04806738,  0.62419939, -0.02072637,
          -0.15539280, -0.02167129, -0.03840642,  0.66866469, -0.03156443]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.65310937,  0.60191971,  0.67226678,  0.64492577,  0.77959216,
           0.64587069,  0.66260582, -0.04446530,  0.65576380]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1334 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1830 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 351, vnnlib ID: 351 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02269415,  0.65827066,  0.02892794, -0.04566084,  0.01305325,
          0.16373065,  0.02557037,  0.07629899,  0.06770724,  0.01854347]],
       device='cuda:0')
diversed PGD initialization time: 0.1409
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00422123, -0.02876776,  0.00390752, -0.00581084, -0.00453377,
           0.00977245, -0.00257846, -0.03208074,  0.99889857,  0.02140176],
         [-0.00422123, -0.02876776,  0.00390752, -0.00581084, -0.00453377,
           0.00977245, -0.00257846, -0.03208074,  0.99889857,  0.02140176]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02454653, -0.03267527, -0.02295692, -0.02423399, -0.03854021,
          -0.02618930,  0.00331298, -1.02766633, -0.05016952]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1493 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2332 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 352, vnnlib ID: 352 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.27152824e-03, -7.14778155e-03,  3.41172516e-03,  9.86116171e-01,
         -2.27786712e-02,  1.84946358e-02, -4.19199094e-03, -1.81074739e-02,
         -2.46621668e-04,  1.74060464e-03]], device='cuda:0')
diversed PGD initialization time: 0.1279
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.77323478e-03,  3.34419310e-04,  8.67831707e-03,  2.25338966e-01,
          -9.85838845e-03,  7.55824685e-01, -5.28549403e-03,  1.79773569e-03,
          -3.66646051e-03,  6.21174276e-03],
         [-3.77323478e-03,  3.34419310e-04,  8.67831707e-03,  2.25338966e-01,
          -9.85838845e-03,  7.55824685e-01, -5.28549403e-03,  1.79773569e-03,
          -3.66646051e-03,  6.21174276e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.22911221,  0.22500455,  0.21666065,  0.23519735, -0.53048575,
           0.23062447,  0.22354123,  0.22900543,  0.21912722]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2203 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 353, vnnlib ID: 353 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00305578,  0.00221670,  0.01256683,  0.00445785,  0.95402783,
          0.00393176,  0.00311682, -0.02042361,  0.00389242, -0.00281107]],
       device='cuda:0')
diversed PGD initialization time: 0.1261
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.65822911,  0.02213293,  0.00706302,  0.03138635,  0.37483117,
          -0.03692556, -0.09392312,  0.04571924,  0.00607201, -0.05592008],
         [ 0.65822911,  0.02213293,  0.00706302,  0.03138635,  0.37483117,
          -0.03692556, -0.09392312,  0.04571924,  0.00607201, -0.05592008]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.28339794,  0.35269824,  0.36776817,  0.34344482,  0.41175672,
           0.46875429,  0.32911193,  0.36875916,  0.43075126]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2095 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 354, vnnlib ID: 354 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01642906, -0.03081968,  0.30389756, -0.01392698, -0.01779477,
         -0.02860933, -0.01550199,  0.85395467, -0.02057558, -0.05143641]],
       device='cuda:0')
diversed PGD initialization time: 0.1243
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03615433, -0.05536847,  0.78915751,  0.15016386, -0.02949163,
          -0.07936601,  0.00157696,  0.30214319, -0.03008554, -0.05371115],
         [-0.03615433, -0.05536847,  0.78915751,  0.15016386, -0.02949163,
          -0.07936601,  0.00157696,  0.30214319, -0.03008554, -0.05371115]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33829752,  0.35751164, -0.48701432,  0.15197933,  0.33163482,
           0.38150918,  0.30056623,  0.33222872,  0.35585433]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1337 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2099 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 355, vnnlib ID: 355 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.23413208e-03, -2.18249559e-02,  1.01728642e+00, -8.61911476e-03,
          1.36949122e-04,  2.30564177e-03, -9.72027332e-03, -1.80626959e-02,
         -1.42422318e-03, -7.87376612e-03]], device='cuda:0')
diversed PGD initialization time: 0.1355
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02435965, -0.02280151,  0.15033492, -0.00944144, -0.00984816,
           0.00832916,  0.00293577, -0.03277285,  0.92499214, -0.01756484],
         [-0.02435965, -0.02280151,  0.15033492, -0.00944144, -0.00984816,
           0.00832916,  0.00293577, -0.03277285,  0.92499214, -0.01756484]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.17469457,  0.17313644,  0.15977636,  0.16018309,  0.14200577,
           0.14739916,  0.18310778, -0.77465725,  0.16789976]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1447 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2138 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 356, vnnlib ID: 356 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.30732220e-03,  1.37053058e-02,  1.87934577e-01,  8.84765387e-03,
         -5.72754070e-03,  1.48483589e-02,  4.10425290e-03,  7.53135085e-01,
         -3.98337841e-04, -1.29641145e-02]], device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.06971616,  0.03572378,  0.76030707, -0.03719121, -0.03431096,
           0.00613807, -0.01054959,  0.32371604, -0.06044520, -0.02391796],
         [-0.06971616,  0.03572378,  0.76030707, -0.03719121, -0.03431096,
           0.00613807, -0.01054959,  0.32371604, -0.06044520, -0.02391796]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39343220,  0.28799227, -0.43659103,  0.36090726,  0.35802701,
           0.31757796,  0.33426565,  0.38416123,  0.34763402]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1341 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 357, vnnlib ID: 357 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.64648649e-03,  8.64509284e-01,  5.28454781e-04, -1.59823745e-02,
          8.13144445e-03,  6.74511194e-02,  8.82427394e-03,  4.81833220e-02,
          8.58386606e-03,  7.50293583e-03]], device='cuda:0')
diversed PGD initialization time: 0.1389
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00735611,  0.21532294, -0.02296674, -0.04611300, -0.00142844,
           0.00125100, -0.03022970, -0.00720717,  0.89778757, -0.02565127],
         [-0.00735611,  0.21532294, -0.02296674, -0.04611300, -0.00142844,
           0.00125100, -0.03022970, -0.00720717,  0.89778757, -0.02565127]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.22267905,  0.23828968,  0.26143593,  0.21675138,  0.21407194,
           0.24555263,  0.22253011, -0.68246460,  0.24097422]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1471 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2593 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 358, vnnlib ID: 358 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00121422,  0.15771145,  0.59774953,  0.06376716,  0.01333673,
          0.05593844, -0.00952263,  0.02509952,  0.02723744,  0.02744846]],
       device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02454108,  0.05858095, -0.04377206,  0.21284151, -0.01732358,
          -0.06061297, -0.02693422, -0.03082849,  0.91679788, -0.01560319],
         [-0.02454108,  0.05858095, -0.04377206,  0.21284151, -0.01732358,
          -0.06061297, -0.02693422, -0.03082849,  0.91679788, -0.01560319]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01923098, -0.10235301, -0.25661355, -0.02644848,  0.01684091,
          -0.01683784, -0.01294357, -0.96056992, -0.02816886]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 359, vnnlib ID: 359 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.04575350.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01143837720155716, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 6.45708293e-04,  9.59718227e-01,  5.41843474e-03, -3.86014581e-04,
         -3.02741304e-03,  2.13221461e-03, -1.61090121e-03,  8.24700296e-03,
         -1.02067739e-03,  3.61469388e-03]], device='cuda:0')
diversed PGD initialization time: 0.1242
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01938878,  0.22918841, -0.05723867, -0.04887997, -0.01406394,
          -0.04530530, -0.04518886, -0.02973291,  1.03068435, -0.03000939],
         [-0.01938878,  0.22918841, -0.05723867, -0.04887997, -0.01406394,
          -0.04530530, -0.04518886, -0.02973291,  1.03068435, -0.03000939]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.24857719,  0.28642708,  0.27806836,  0.24325235,  0.27449372,
           0.27437729,  0.25892133, -0.80149591,  0.25919780]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1330 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1979 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 360, vnnlib ID: 360 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.27541535e-02,  3.03697735e-02,  3.03342462e-01,  2.87448689e-02,
         -4.15630639e-05,  2.85707563e-02,  3.49251553e-03,  1.34301320e-01,
          4.53169942e-01, -3.11505049e-03]], device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.27541758e-02,  3.03697772e-02,  3.03342462e-01,  2.87449062e-02,
          -4.15556133e-05,  2.85707712e-02,  3.49250436e-03,  1.34301305e-01,
           4.53169972e-01, -3.11506540e-03],
         [-1.27541758e-02,  3.03697772e-02,  3.03342462e-01,  2.87449062e-02,
          -4.15556133e-05,  2.85707712e-02,  3.49250436e-03,  1.34301305e-01,
           4.53169972e-01, -3.11506540e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.14705548,  0.10393153, -0.16904116,  0.10555640,  0.13434286,
           0.10573053,  0.13080880, -0.31886867,  0.13741636]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 361, vnnlib ID: 361 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.02990016e-03, -3.15042064e-02,  9.86421824e-01,  9.69066694e-02,
          2.67196447e-04, -5.24434671e-02, -5.84816188e-03, -2.47515440e-02,
         -2.83186138e-03, -1.05093494e-02]], device='cuda:0')
diversed PGD initialization time: 0.1266
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02253138, -0.04276310,  0.09219626, -0.01196292, -0.01123155,
           0.00541400,  0.00978358, -0.03114422,  0.97628105, -0.00494026],
         [-0.02253138, -0.04276310,  0.09219626, -0.01196292, -0.01123155,
           0.00541400,  0.00978358, -0.03114422,  0.97628105, -0.00494026]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.11472765,  0.13495937,  0.10415918,  0.10342781,  0.08678226,
           0.08241269,  0.12334048, -0.88408476,  0.09713652]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1932 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 362, vnnlib ID: 362 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01207226,  0.60258681, -0.00126563, -0.03522293, -0.00646982,
          0.00900577, -0.02921297, -0.00398497,  0.45105201,  0.00086199]],
       device='cuda:0')
diversed PGD initialization time: 0.1342
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03237752, -0.01649164,  0.10377899, -0.01350874, -0.01580911,
          -0.03801749, -0.01495067, -0.02938755,  1.06461906, -0.03590177],
         [-0.03237752, -0.01649164,  0.10377899, -0.01350874, -0.01580911,
          -0.03801749, -0.01495067, -0.02938755,  1.06461906, -0.03590177]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.58858858e-02, -1.20270625e-01, -2.98289955e-03, -6.82529062e-04,
           2.15258524e-02, -1.54096633e-03,  1.28959119e-02, -1.08111072e+00,
           1.94101334e-02]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1445 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2785 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 363, vnnlib ID: 363 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00003421e+00, -5.36970794e-03,  5.83064556e-03, -9.75430012e-03,
         -5.44025749e-03,  6.91910088e-03,  1.86882168e-03, -1.87996328e-02,
          9.01326537e-04, -9.50831175e-03]], device='cuda:0')
diversed PGD initialization time: 0.1267
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.39192292, -0.02530229, -0.00955273, -0.00724280, -0.01848245,
           0.03147639, -0.01548108, -0.05617332,  0.58689213,  0.05216302],
         [ 0.39192292, -0.02530229, -0.00955273, -0.00724280, -0.01848245,
           0.03147639, -0.01548108, -0.05617332,  0.58689213,  0.05216302]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.41722521,  0.40147567,  0.39916572,  0.41040537,  0.36044654,
           0.40740401,  0.44809625, -0.19496921,  0.33975989]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1363 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2070 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 364, vnnlib ID: 364 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00652808, 0.01303827, 0.02951904, 0.01866048, 0.43183714, 0.01402596,
         0.01166758, 0.01616621, 0.01376201, 0.44480485]], device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00652808, 0.01303829, 0.02951902, 0.01866047, 0.43183708,
          0.01402596, 0.01166758, 0.01616623, 0.01376201, 0.44480485],
         [0.00652808, 0.01303829, 0.02951902, 0.01866047, 0.43183708,
          0.01402596, 0.01166758, 0.01616623, 0.01376201, 0.44480485]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42530900,  0.41879880,  0.40231806,  0.41317660,  0.41781113,
           0.42016950,  0.41567087,  0.41807508, -0.01296777]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0887 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 365, vnnlib ID: 365 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.65956023e-03,  8.03853214e-01,  2.74137110e-02,  1.13385767e-02,
         -3.68807465e-04,  2.11200416e-02,  6.29048049e-03,  3.56512889e-02,
          2.22525299e-02,  3.35167274e-02]], device='cuda:0')
diversed PGD initialization time: 0.1360
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05386931, -0.01256748, -0.13335632, -0.15151402,  0.76192969,
          -0.07545044, -0.03624279,  0.67352664, -0.01936353, -0.07246377],
         [-0.05386931, -0.01256748, -0.13335632, -0.15151402,  0.76192969,
          -0.07545044, -0.03624279,  0.67352664, -0.01936353, -0.07246377]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.04130184,  0.12078884,  0.13894655, -0.77449715,  0.06288297,
           0.02367532, -0.68609411,  0.00679605,  0.05989629]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1450 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2184 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 366, vnnlib ID: 366 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01548297, -0.02317647, -0.00245842, -0.06166013,  0.60211176,
          0.04922927, -0.00717086,  0.01324540,  0.33414418,  0.07101680]],
       device='cuda:0')
diversed PGD initialization time: 0.1356
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1479 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 367, vnnlib ID: 367 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00508301,  0.00761224,  0.03265403, -0.00811681, -0.01841776,
          0.01645885, -0.00544311, -0.03351927,  0.20902678,  0.79691434]],
       device='cuda:0')
diversed PGD initialization time: 0.1244
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01970560, -0.02528366,  0.03000735, -0.02505940, -0.00210934,
          -0.00322021,  0.01353322, -0.01218359,  1.01307809, -0.00871651],
         [-0.01970560, -0.02528366,  0.03000735, -0.02505940, -0.00210934,
          -0.00322021,  0.01353322, -0.01218359,  1.01307809, -0.00871651]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01098909,  0.01656716, -0.03872386,  0.01634289, -0.00660717,
          -0.00549630, -0.02224973,  0.00346708, -1.02179456]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1344 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 368, vnnlib ID: 368 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00406522, -0.00086342,  0.00884001, -0.01194793, -0.00549849,
          0.59867775,  0.39283866, -0.00821105,  0.01957681,  0.00999775]],
       device='cuda:0')
diversed PGD initialization time: 0.1247
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01197228, -0.00251410,  0.00406368,  0.01624659, -0.00262797,
          -0.00533525,  0.99741608, -0.00750352,  0.00862470,  0.00657972],
         [ 0.01197228, -0.00251410,  0.00406368,  0.01624659, -0.00262797,
          -0.00533525,  0.99741608, -0.00750352,  0.00862470,  0.00657972]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01730753, -0.00282115, -0.00939893, -0.02158184, -0.00270728,
          -1.00275135,  0.00216828, -0.01395994, -0.01191497]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1346 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1878 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 369, vnnlib ID: 369 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.86173075e-03, -1.84793025e-03,  9.73045826e-06, -1.51421130e-03,
          4.37469408e-03,  7.95664638e-03,  9.83968377e-04,  1.07848644e-03,
          4.53040749e-03,  9.98813629e-01]], device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1358 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3199 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 370, vnnlib ID: 370 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00316060, -0.00825960,  0.00214376, -0.00613329, -0.00481467,
         -0.00668646, -0.00579329, -0.01113445,  0.00135201, -0.00633052]],
       device='cuda:0')
diversed PGD initialization time: 0.1335
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.61821496, 0.02016366, 0.06673320, 0.03721803, 0.01974034,
          0.04600182, 0.01642300, 0.03404203, 0.08365972, 0.03607513],
         [0.61821496, 0.02016366, 0.06673320, 0.03721803, 0.01974034,
          0.04600182, 0.01642300, 0.03404203, 0.08365972, 0.03607513]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.59805131, 0.55148178, 0.58099693, 0.59847462, 0.57221317,
          0.60179198, 0.58417296, 0.53455526, 0.58213985]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4228 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00316060, -0.00825960,  0.00214376, -0.00613329, -0.00481467,
         -0.00668646, -0.00579329, -0.01113445,  0.00135201, -0.00633052]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 101, 1, 13] with unstable size 100 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [100]; unstable size 100; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 100] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.09158051, -1.39017189, -1.31015074, -1.20405507, -1.32708621,
         -1.48436832, -1.27670145, -1.72662210, -2.12171268]], device='cuda:0') None
best_l after optimization: 0.6520000696182251
alpha/beta optimization time: 1.5705747604370117
initial alpha-crown bounds: tensor([[ 0.15561065, -0.07120177,  0.15902205,  0.18792170,  0.12588197,
         -0.00528303,  0.11900195, -0.05451836,  0.03556493]], device='cuda:0')
Worst class: (+ rhs) -0.07120177149772644
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.87982702255249
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15561065077781677.

Properties batch 1, size 1
Remaining timeout: 117.80545902252197
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07120177]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00316060, -0.00825960,  0.00214376, -0.00613329, -0.00481467,
        -0.00668646, -0.00579329, -0.01113445,  0.00135201, -0.00633052],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07120177]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 48
-----------------
# of unstable neurons: 61
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 102] 
split level 3: [/input, 209] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 206] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.034706115722656e-05
Time: prepare 0.0066    bound 0.0047    transfer 0.0001    finalize 0.0023    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0071    bound 0.0047    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0115    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.054375410079956055


Properties batch 2, size 1
Remaining timeout: 117.6539626121521
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15902204811573029.

Properties batch 3, size 1
Remaining timeout: 117.58051323890686
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1879217028617859.

Properties batch 4, size 1
Remaining timeout: 117.51211047172546
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12588196992874146.

Properties batch 5, size 1
Remaining timeout: 117.44435667991638
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00528303]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00316060, -0.00825960,  0.00214376, -0.00613329, -0.00481467,
        -0.00668646, -0.00579329, -0.01113445,  0.00135201, -0.00633052],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00528303]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 48
-----------------
# of unstable neurons: 61
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 244] 
split level 2: [/input, 112] 
split level 3: [/input.3, 216] 
split level 4: [/input.3, 155] 
split level 5: [/input.3, 206] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.937980651855469e-05
Time: prepare 0.0066    bound 0.0046    transfer 0.0001    finalize 0.0024    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0071    bound 0.0046    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0231    set_bounds 0.0112    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0231    set_bounds 0.0112    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05277562141418457


Properties batch 6, size 1
Remaining timeout: 117.30001282691956
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.11900195479393005.

Properties batch 7, size 1
Remaining timeout: 117.22963261604309
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05451836]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00316060, -0.00825960,  0.00214376, -0.00613329, -0.00481467,
        -0.00668646, -0.00579329, -0.01113445,  0.00135201, -0.00633052],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05451836]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 48
-----------------
# of unstable neurons: 61
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 162] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 206] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 150] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 6.961822509765625e-05
Time: prepare 0.0035    bound 0.0045    transfer 0.0001    finalize 0.0017    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0041    bound 0.0045    transfer 0.0001    finalize 0.0017    
length of domains: 0
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0106    solve 0.0099    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0106    solve 0.0099    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.04762911796569824


Properties batch 8, size 1
Remaining timeout: 117.09354496002197
##### Instance 370 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.035564929246902466.
Result: safe in 2.9783 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 371, vnnlib ID: 371 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.07685179e-02,  2.61440873e-05,  1.24812126e-03,  4.94448841e-03,
         -3.08575854e-03,  4.72186506e-03,  9.89570022e-01, -9.40442085e-04,
          3.48459929e-03,  5.90976328e-03]], device='cuda:0')
diversed PGD initialization time: 0.1314
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.67628962,  0.02656361,  0.04538874,  0.01139595,  0.07301122,
          -0.02938252,  0.11160174, -0.03610840,  0.00168170,  0.07897876],
         [ 0.67628962,  0.02656361,  0.04538874,  0.01139595,  0.07301122,
          -0.02938252,  0.11160174, -0.03610840,  0.00168170,  0.07897876]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.56468785,  0.08503813,  0.06621300,  0.10020579,  0.03859052,
           0.14098427,  0.14771014,  0.10992004,  0.03262298]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1406 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2195 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 372, vnnlib ID: 372 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02236122, -0.04310961, -0.02379726, -0.06483977, -0.03135316,
         -0.00972593, -0.01719782, -0.07053892,  0.37813154,  0.89942688]],
       device='cuda:0')
diversed PGD initialization time: 0.1242
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1336 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1836 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 373, vnnlib ID: 373 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99571329, -0.00523278,  0.00964940, -0.00381429, -0.00264949,
          0.00499361, -0.00821656, -0.00857130, -0.00599287, -0.00645674]],
       device='cuda:0')
diversed PGD initialization time: 0.1234
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.41574040, -0.00654940, -0.04049440, -0.06642590,  0.03399703,
           0.37230372, -0.04882194,  0.00237063,  0.48785457, -0.13134553],
         [ 0.41574040, -0.00654940, -0.04049440, -0.06642590,  0.03399703,
           0.37230372, -0.04882194,  0.00237063,  0.48785457, -0.13134553]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42228979,  0.45623481,  0.48216629,  0.38174337,  0.04343668,
           0.46456236,  0.41336977, -0.07211417,  0.54708594]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2178 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 374, vnnlib ID: 374 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866945937275887, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.37686390e-04,  9.60095584e-01,  4.97880578e-03, -2.13311613e-03,
         -4.02745977e-03,  2.57857144e-04, -5.13684005e-04,  6.15130365e-03,
          4.80487943e-05,  4.02589887e-03]], device='cuda:0')
diversed PGD initialization time: 0.1470
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01345487,  0.29440951,  0.01162089, -0.07090904,  0.01762762,
           0.07979740, -0.01180717,  0.04133224,  0.65948051, -0.03379652],
         [-0.01345487,  0.29440951,  0.01162089, -0.07090904,  0.01762762,
           0.07979740, -0.01180717,  0.04133224,  0.65948051, -0.03379652]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.30786437,  0.28278863,  0.36531854,  0.27678189,  0.21461211,
           0.30621669,  0.25307727, -0.36507100,  0.32820603]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1565 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2236 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 375, vnnlib ID: 375 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
         -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
         -9.19482112e-03, -1.17461383e-03]], device='cuda:0')
diversed PGD initialization time: 0.1250
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01517058, -0.03637402, -0.03011328, -0.06129608, -0.02054242,
           0.64715600, -0.08054711, -0.04390402,  0.63177037, -0.02480926],
         [-0.01517058, -0.03637402, -0.03011328, -0.06129608, -0.02054242,
           0.64715600, -0.08054711, -0.04390402,  0.63177037, -0.02480926]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.66232657, 0.68353003, 0.67726928, 0.70845211, 0.66769844,
          0.72770309, 0.69106001, 0.01538563, 0.67196524]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4167 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
         -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
         -9.19482112e-03, -1.17461383e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 74, 1, 21] with unstable size 73 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [73]; unstable size 73; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 73] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.49102330, -1.70801044, -1.77804232, -3.08807325, -1.62901509,
         -2.20135808, -1.95391929, -3.07082319, -1.97005379]], device='cuda:0') None
best_l after optimization: -10.138668060302734
alpha/beta optimization time: 1.3210196495056152
initial alpha-crown bounds: tensor([[-0.81491339, -0.85010171, -0.91699111, -2.11435747, -0.85575014,
         -0.83085650, -0.91799831, -1.78975773, -1.04794180]], device='cuda:0')
Worst class: (+ rhs) -2.1143574714660645
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.12153601646423
##### Instance 375 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.81491339]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.81491339]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 248] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.008918046951293945
Time: prepare 0.0036    bound 0.1965    transfer 0.0003    finalize 0.0022    func 0.2027    
Accumulated time: func 0.2027    prepare 0.0041    bound 0.1965    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.42109 (6), -0.27810 (6), -0.27484 (6), -0.24702 (6), -0.22011 (6), -0.08124 (6), -0.05630 (6), -0.04881 (6), 
length of domains: 8
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.2027    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.2027    add 0.0009    
Current (lb-rhs): -0.42109280824661255
8 domains visited
Cumulative time: 0.2418661117553711

BaB round 2
batch: 8
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 17] [/input, 17] [/input, 181] [/input, 17] [/input, 175] [/input.3, 156] [/input, 17] [/input, 175] 
split level 1: [/input, 181] [/input, 209] [/input, 254] [/input, 222] [/input, 17] [/input, 254] [/input, 175] [/input, 17] 
split level 2: [/input, 87] [/input, 87] [/input, 209] [/input, 181] [/input, 222] [/input.3, 144] [/input, 87] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009533405303955078
Time: prepare 0.0074    bound 0.2090    transfer 0.0003    finalize 0.0037    func 0.2204    
Accumulated time: func 0.4231    prepare 0.0119    bound 0.4055    transfer 0.0006    finalize 0.0058    
Current worst splitting domains lb-rhs (depth):
-0.08640 (9), -0.04827 (9), -0.04420 (9), -0.04408 (9), 
length of domains: 4
Time: pickout 0.0006    decision 0.0266    set_bounds 0.0083    solve 0.2205    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0496    set_bounds 0.0190    solve 0.4232    add 0.0020    
Current (lb-rhs): -0.08640289306640625
12 domains visited
Cumulative time: 0.49945783615112305

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 12] [/input, 222] [/input, 222] 
split level 1: [/input, 87] [/input, 87] [/input, 227] [/input, 12] 
split level 2: [/input, 227] [/input, 227] [/input, 254] [/input, 227] 
split level 3: [/input, 209] [/input, 209] [/input, 209] [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.678436279296875e-05
Time: prepare 0.0089    bound 0.0059    transfer 0.0001    finalize 0.0026    func 0.0175    
Accumulated time: func 0.4406    prepare 0.0212    bound 0.4114    transfer 0.0007    finalize 0.0084    
length of domains: 0
Time: pickout 0.0008    decision 0.0252    set_bounds 0.0125    solve 0.0175    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0748    set_bounds 0.0316    solve 0.4408    add 0.0021    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.5558855533599854


Properties batch 1, size 1
Remaining timeout: 117.4704258441925
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.85010171]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.85010171]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.009431123733520508
Time: prepare 0.0035    bound 0.2025    transfer 0.0003    finalize 0.0021    func 0.2087    
Accumulated time: func 0.2087    prepare 0.0041    bound 0.2025    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.45007 (6), -0.32800 (6), -0.29635 (6), -0.27020 (6), -0.24379 (6), -0.09158 (6), -0.07652 (6), -0.06700 (6), -0.01226 (6), -0.00861 (6), -0.00537 (6), 
length of domains: 11
Time: pickout 0.0005    decision 0.0240    set_bounds 0.0113    solve 0.2088    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0240    set_bounds 0.0113    solve 0.2088    add 0.0009    
Current (lb-rhs): -0.4500693082809448
11 domains visited
Cumulative time: 0.24968314170837402

BaB round 2
batch: 11
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 181] [/input, 17] [/input.3, 45] [/input.3, 45] [/input, 17] [/input.3, 220] [/input.3, 45] [/input.3, 220] [/input, 17] [/input.3, 220] 
split level 1: [/input.3, 45] [/input, 87] [/input, 17] [/input, 181] [/input.3, 45] [/input, 209] [/input, 17] [/input, 254] [/input, 175] [/input, 254] 
split level 2: [/input, 254] [/input, 181] [/input, 87] [/input, 254] [/input, 87] [/input.3, 17] [/input, 222] [/input.3, 144] [/input, 222] [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 88 = 0.9318181818181819
pruning-in-iteration extra time: 0.009668588638305664
Time: prepare 0.0102    bound 0.2119    transfer 0.0004    finalize 0.0050    func 0.2277    
Accumulated time: func 0.4364    prepare 0.0147    bound 0.4145    transfer 0.0008    finalize 0.0071    
Current worst splitting domains lb-rhs (depth):
-0.16392 (9), -0.09237 (9), -0.06676 (9), -0.04183 (9), -0.04074 (9), -0.01233 (9), 
length of domains: 6
Time: pickout 0.0006    decision 0.0290    set_bounds 0.0123    solve 0.2278    add 0.0008    
Accumulated time: pickout 0.0011    decision 0.0530    set_bounds 0.0236    solve 0.4366    add 0.0018    
Current (lb-rhs): -0.16391712427139282
17 domains visited
Cumulative time: 0.5207691192626953

BaB round 3
batch: 6
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 175] [/input, 87] [/input, 87] [/input, 175] [/input, 175] 
split level 1: [/input, 222] [/input, 12] [/input, 227] [/input, 12] [/input, 12] [/input, 12] 
split level 2: [/input, 227] [/input, 87] [/input, 254] [/input, 227] [/input, 87] [/input, 87] 
split level 3: [/input, 209] [/input, 227] [/input, 209] [/input, 209] [/input, 209] [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.295608520507812e-05
Time: prepare 0.0108    bound 0.0046    transfer 0.0001    finalize 0.0038    func 0.0194    
Accumulated time: func 0.4558    prepare 0.0260    bound 0.4190    transfer 0.0009    finalize 0.0109    
length of domains: 0
Time: pickout 0.0006    decision 0.0245    set_bounds 0.0141    solve 0.0194    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0775    set_bounds 0.0377    solve 0.4560    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17 domains visited
Cumulative time: 0.5797860622406006


Properties batch 2, size 1
Remaining timeout: 116.79127883911133
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.91699111]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.91699111]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 150] 
split level 5: [/input.3, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 64 = 0.78125
pruning-in-iteration extra time: 0.009318113327026367
Time: prepare 0.0036    bound 0.2029    transfer 0.0004    finalize 0.0022    func 0.2092    
Accumulated time: func 0.2092    prepare 0.0041    bound 0.2029    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.45788 (6), -0.32923 (6), -0.31335 (6), -0.27940 (6), -0.16854 (6), -0.16052 (6), -0.13583 (6), -0.11369 (6), -0.11335 (6), -0.11264 (6), -0.07372 (6), -0.05966 (6), -0.04281 (6), -0.00741 (6), 
length of domains: 14
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0108    solve 0.2093    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0108    solve 0.2093    add 0.0010    
Current (lb-rhs): -0.45788365602493286
14 domains visited
Cumulative time: 0.24937081336975098

BaB round 2
batch: 14
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] [/input, 17] [/input.3, 220] [/input, 175] [/input.3, 156] [/input, 17] [/input.3, 156] [/input, 175] [/input, 175] [/input, 175] 
split level 1: [/input, 181] [/input, 222] [/input.3, 156] [/input, 17] [/input.3, 220] [/input, 175] [/input.3, 220] [/input, 17] [/input, 17] [/input, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 47 / 56 = 0.8392857142857143
pruning-in-iteration extra time: 0.00974130630493164
Time: prepare 0.0059    bound 0.2128    transfer 0.0003    finalize 0.0026    func 0.2217    
Accumulated time: func 0.4310    prepare 0.0105    bound 0.4158    transfer 0.0007    finalize 0.0048    
Current worst splitting domains lb-rhs (depth):
-0.20427 (8), -0.13671 (8), -0.12770 (8), -0.11104 (8), -0.08351 (8), -0.07621 (8), -0.04187 (8), -0.03748 (8), -0.01676 (8), 
length of domains: 9
Time: pickout 0.0006    decision 0.0303    set_bounds 0.0073    solve 0.2218    add 0.0009    
Accumulated time: pickout 0.0011    decision 0.0538    set_bounds 0.0182    solve 0.4312    add 0.0019    
Current (lb-rhs): -0.20426607131958008
23 domains visited
Cumulative time: 0.5107929706573486

BaB round 3
batch: 9
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 156] [/input, 175] [/input, 222] [/input, 254] [/input, 222] [/input, 222] [/input, 222] [/input, 222] [/input, 87] 
split level 1: [/input, 87] [/input, 87] [/input, 87] [/input.3, 192] [/input, 87] [/input, 87] [/input, 254] [/input, 227] [/input, 12] 
split level 2: [/input, 254] [/input, 227] [/input, 12] [/input.3, 144] [/input, 254] [/input, 227] [/input, 87] [/input, 87] [/input, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 72 = 0.9861111111111112
pruning-in-iteration extra time: 0.008846521377563477
Time: prepare 0.0085    bound 0.2015    transfer 0.0003    finalize 0.0036    func 0.2140    
Accumulated time: func 0.6450    prepare 0.0195    bound 0.6172    transfer 0.0010    finalize 0.0084    
Current worst splitting domains lb-rhs (depth):
-0.00213 (11), 
length of domains: 1
Time: pickout 0.0006    decision 0.0273    set_bounds 0.0102    solve 0.2140    add 0.0007    
Accumulated time: pickout 0.0017    decision 0.0811    set_bounds 0.0284    solve 0.6452    add 0.0026    
Current (lb-rhs): -0.0021309256553649902
24 domains visited
Cumulative time: 0.7641937732696533

BaB round 4
batch: 1
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] 
split level 1: [/input, 227] 
split level 2: [/input.3, 156] 
split level 3: [/input, 209] 
split level 4: [/input, 100] 
split level 5: [/input.3, 200] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0075    bound 0.0049    transfer 0.0001    finalize 0.0026    func 0.0151    
Accumulated time: func 0.6601    prepare 0.0275    bound 0.6221    transfer 0.0012    finalize 0.0110    
length of domains: 0
Time: pickout 0.0006    decision 0.0244    set_bounds 0.0125    solve 0.0151    add 0.0001    
Accumulated time: pickout 0.0023    decision 0.1056    set_bounds 0.0409    solve 0.6604    add 0.0027    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
24 domains visited
Cumulative time: 0.8172268867492676


Properties batch 3, size 1
Remaining timeout: 115.87942314147949
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.11435747]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.11435747]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 153] 
split level 1: [/input.3, 247] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 200] 
split level 5: [/input.3, 220] 
pruning_in_iteration open status: True
ratio of positive domain = 45 / 64 = 0.703125
pruning-in-iteration extra time: 0.008981943130493164
Time: prepare 0.0034    bound 0.1975    transfer 0.0004    finalize 0.0022    func 0.2038    
Accumulated time: func 0.2038    prepare 0.0040    bound 0.1975    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-1.64403 (6), -1.12911 (6), -1.02905 (6), -0.79577 (6), -0.60232 (6), -0.46657 (6), -0.46193 (6), -0.37260 (6), -0.33599 (6), -0.29795 (6), -0.27034 (6), -0.20585 (6), -0.14682 (6), -0.13315 (6), -0.08914 (6), -0.08453 (6), -0.05183 (6), -0.05030 (6), -0.00739 (6), 
length of domains: 19
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0107    solve 0.2038    add 0.0042    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0107    solve 0.2038    add 0.0042    
Current (lb-rhs): -1.6440320014953613
19 domains visited
Cumulative time: 0.24625658988952637

BaB round 2
batch: 19
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 192] [/input, 175] [/input.3, 192] [/input.3, 55] [/input.3, 192] [/input, 175] [/input, 17] [/input.3, 192] [/input.3, 192] [/input.3, 192] 
split level 1: [/input, 209] [/input, 17] [/input.3, 30] [/input.3, 30] [/input, 209] [/input, 17] [/input.3, 72] [/input, 12] [/input, 222] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 45 / 76 = 0.5921052631578947
pruning-in-iteration extra time: 0.009596824645996094
Time: prepare 0.0085    bound 0.2127    transfer 0.0003    finalize 0.0038    func 0.2254    
Accumulated time: func 0.4292    prepare 0.0130    bound 0.4102    transfer 0.0007    finalize 0.0060    
Current worst splitting domains lb-rhs (depth):
-1.14020 (8), -0.90277 (8), -0.85164 (8), -0.63906 (8), -0.62609 (8), -0.59150 (8), -0.52522 (8), -0.51824 (8), -0.44483 (8), -0.43733 (8), -0.40895 (8), -0.40631 (8), -0.30204 (8), -0.29779 (8), -0.29260 (8), -0.27738 (8), -0.26999 (8), -0.25642 (8), -0.25188 (8), -0.22963 (8), 
length of domains: 31
Time: pickout 0.0007    decision 0.0327    set_bounds 0.0097    solve 0.2255    add 0.0013    
Accumulated time: pickout 0.0011    decision 0.0556    set_bounds 0.0204    solve 0.4293    add 0.0055    
Current (lb-rhs): -1.1401994228363037
50 domains visited
Cumulative time: 0.5165755748748779

BaB round 3
batch: 31
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 17] [/input, 222] [/input, 12] [/input, 222] [/input, 227] [/input, 175] [/input, 12] [/input, 175] [/input.3, 192] [/input, 209] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 62 = 0.5161290322580645
pruning-in-iteration extra time: 0.009475469589233398
Time: prepare 0.0073    bound 0.2103    transfer 0.0003    finalize 0.0029    func 0.2210    
Accumulated time: func 0.6502    prepare 0.0207    bound 0.6206    transfer 0.0010    finalize 0.0089    
Current worst splitting domains lb-rhs (depth):
-0.98820 (9), -0.63588 (9), -0.59133 (9), -0.45150 (9), -0.43096 (9), -0.38105 (9), -0.29762 (9), -0.29217 (9), -0.28182 (9), -0.26888 (9), -0.24699 (9), -0.23268 (9), -0.21657 (9), -0.20961 (9), -0.20417 (9), -0.20256 (9), -0.20140 (9), -0.18799 (9), -0.17007 (9), -0.16863 (9), 
length of domains: 30
Time: pickout 0.0007    decision 0.0394    set_bounds 0.0070    solve 0.2211    add 0.0011    
Accumulated time: pickout 0.0018    decision 0.0949    set_bounds 0.0273    solve 0.6504    add 0.0066    
Current (lb-rhs): -0.9882014989852905
80 domains visited
Cumulative time: 0.7862024307250977

BaB round 4
batch: 30
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 192] [/input, 175] [/input, 12] [/input, 12] [/input, 12] [/input, 87] [/input, 17] [/input, 12] [/input, 12] [/input, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 40 / 60 = 0.6666666666666667
pruning-in-iteration extra time: 0.009593963623046875
Time: prepare 0.0071    bound 0.2110    transfer 0.0004    finalize 0.0036    func 0.2223    
Accumulated time: func 0.8725    prepare 0.0282    bound 0.8316    transfer 0.0014    finalize 0.0124    
Current worst splitting domains lb-rhs (depth):
-0.82913 (10), -0.43434 (10), -0.39863 (10), -0.29969 (10), -0.29305 (10), -0.22275 (10), -0.21111 (10), -0.20455 (10), -0.18273 (10), -0.17808 (10), -0.15775 (10), -0.12980 (10), -0.09916 (10), -0.08451 (10), -0.07271 (10), -0.04773 (10), -0.04413 (10), -0.04319 (10), -0.01509 (10), -0.01159 (10), 
length of domains: 20
Time: pickout 0.0006    decision 0.0376    set_bounds 0.0068    solve 0.2223    add 0.0010    
Accumulated time: pickout 0.0025    decision 0.1325    set_bounds 0.0342    solve 0.8728    add 0.0076    
Current (lb-rhs): -0.8291299343109131
100 domains visited
Cumulative time: 1.0550165176391602

BaB round 5
batch: 20
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 222] [/input, 12] [/input, 209] [/input, 17] [/input.3, 192] [/input, 227] [/input, 87] [/input.3, 156] [/input, 227] [/input, 227] 
split level 1: [/input, 227] [/input, 209] [/input, 87] [/input, 222] [/input, 87] [/input, 209] [/input, 227] [/input.3, 30] [/input, 209] [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 72 / 80 = 0.9
pruning-in-iteration extra time: 0.00946950912475586
Time: prepare 0.0094    bound 0.2104    transfer 0.0004    finalize 0.0044    func 0.2247    
Accumulated time: func 1.0972    prepare 0.0381    bound 1.0419    transfer 0.0018    finalize 0.0168    
Current worst splitting domains lb-rhs (depth):
-0.27876 (12), -0.09694 (12), -0.09585 (12), -0.09384 (12), -0.07797 (12), -0.06328 (12), -0.03838 (12), -0.03534 (12), 
length of domains: 8
Time: pickout 0.0005    decision 0.0332    set_bounds 0.0103    solve 0.2248    add 0.0009    
Accumulated time: pickout 0.0030    decision 0.1657    set_bounds 0.0445    solve 1.0975    add 0.0085    
Current (lb-rhs): -0.2787649631500244
108 domains visited
Cumulative time: 1.3252983093261719

BaB round 6
batch: 8
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input, 227] [/input, 175] [/input, 12] [/input, 209] [/input, 87] [/input, 209] [/input, 175] [/input, 12] 
split level 1: [/input, 209] [/input, 150] [/input, 87] [/input.3, 192] [/input.3, 30] [/input, 222] [/input, 87] [/input, 87] 
split level 2: [/input.3, 30] [/input, 254] [/input.3, 144] [/input, 100] [/input, 150] [/input, 100] [/input, 254] [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00913858413696289
Time: prepare 0.0077    bound 0.2070    transfer 0.0003    finalize 0.0036    func 0.2186    
Accumulated time: func 1.3157    prepare 0.0463    bound 1.2489    transfer 0.0021    finalize 0.0204    
Current worst splitting domains lb-rhs (depth):
-0.01321 (15), 
length of domains: 1
Time: pickout 0.0005    decision 0.0266    set_bounds 0.0100    solve 0.2186    add 0.0008    
Accumulated time: pickout 0.0035    decision 0.1924    set_bounds 0.0546    solve 1.3162    add 0.0093    
Current (lb-rhs): -0.013212323188781738
109 domains visited
Cumulative time: 1.5825982093811035

BaB round 7
batch: 1
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input, 17] 
split level 1: [/input, 222] 
split level 2: [/input, 254] 
split level 3: [/input.3, 43] 
split level 4: [/input, 245] 
split level 5: [/input.3, 248] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0143    
Accumulated time: func 1.3301    prepare 0.0540    bound 1.2534    transfer 0.0022    finalize 0.0229    
length of domains: 0
Time: pickout 0.0007    decision 0.0242    set_bounds 0.0125    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0042    decision 0.2165    set_bounds 0.0671    solve 1.3306    add 0.0094    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
109 domains visited
Cumulative time: 1.6347603797912598


Properties batch 4, size 1
Remaining timeout: 114.14999175071716
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.85575014]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.85575014]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 143] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.008942365646362305
Time: prepare 0.0034    bound 0.1956    transfer 0.0003    finalize 0.0021    func 0.2017    
Accumulated time: func 0.2017    prepare 0.0039    bound 0.1956    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.45182 (6), -0.33606 (6), -0.30809 (6), -0.28217 (6), -0.23974 (6), -0.10429 (6), -0.08400 (6), -0.07738 (6), -0.02221 (6), -0.01447 (6), -0.01282 (6), 
length of domains: 11
Time: pickout 0.0005    decision 0.0229    set_bounds 0.0109    solve 0.2018    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0229    set_bounds 0.0109    solve 0.2018    add 0.0009    
Current (lb-rhs): -0.4518224000930786
11 domains visited
Cumulative time: 0.24113035202026367

BaB round 2
batch: 11
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 26] [/input, 17] [/input, 17] [/input.3, 26] [/input, 17] [/input.3, 26] [/input, 175] [/input.3, 26] [/input, 17] [/input.3, 26] 
split level 1: [/input, 181] [/input, 181] [/input, 87] [/input, 181] [/input, 222] [/input.3, 220] [/input, 17] [/input.3, 156] [/input, 175] [/input.3, 220] 
split level 2: [/input, 254] [/input, 87] [/input, 222] [/input, 254] [/input, 87] [/input, 209] [/input, 222] [/input.3, 220] [/input, 222] [/input.3, 156] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 88 = 0.9545454545454546
pruning-in-iteration extra time: 0.008877754211425781
Time: prepare 0.0092    bound 0.2013    transfer 0.0004    finalize 0.0046    func 0.2155    
Accumulated time: func 0.4172    prepare 0.0136    bound 0.3968    transfer 0.0007    finalize 0.0067    
Current worst splitting domains lb-rhs (depth):
-0.11270 (9), -0.05921 (9), -0.05272 (9), -0.04760 (9), 
length of domains: 4
Time: pickout 0.0006    decision 0.0282    set_bounds 0.0114    solve 0.2156    add 0.0012    
Accumulated time: pickout 0.0011    decision 0.0511    set_bounds 0.0223    solve 0.4173    add 0.0021    
Current (lb-rhs): -0.11269968748092651
15 domains visited
Cumulative time: 0.4988224506378174

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 26] [/input, 87] [/input.3, 26] [/input, 12] 
split level 1: [/input, 175] [/input, 12] [/input, 87] [/input, 227] 
split level 2: [/input, 181] [/input, 227] [/input, 254] [/input, 87] 
split level 3: [/input, 209] [/input, 209] [/input, 209] [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0074    bound 0.0051    transfer 0.0001    finalize 0.0026    func 0.0155    
Accumulated time: func 0.4327    prepare 0.0215    bound 0.4020    transfer 0.0009    finalize 0.0093    
length of domains: 0
Time: pickout 0.0008    decision 0.0236    set_bounds 0.0104    solve 0.0155    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0747    set_bounds 0.0327    solve 0.4329    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
15 domains visited
Cumulative time: 0.5496253967285156


Properties batch 5, size 1
Remaining timeout: 113.50594449043274
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.83085650]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.83085650]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 153] 
split level 2: [/input.3, 248] 
split level 3: [/input.3, 244] 
split level 4: [/input.3, 216] 
split level 5: [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009643793106079102
Time: prepare 0.0034    bound 0.2055    transfer 0.0003    finalize 0.0023    func 0.2118    
Accumulated time: func 0.2118    prepare 0.0040    bound 0.2055    transfer 0.0003    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.37602 (6), -0.20181 (6), -0.14892 (6), -0.12713 (6), -0.02019 (6), -0.00542 (6), -0.00423 (6), 
length of domains: 7
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.2118    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.2118    add 0.0009    
Current (lb-rhs): -0.376020610332489
7 domains visited
Cumulative time: 0.25164341926574707

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 181] [/input, 17] [/input, 175] [/input, 17] [/input, 17] [/input, 17] [/input, 17] 
split level 1: [/input.3, 156] [/input, 222] [/input, 17] [/input, 87] [/input, 181] [/input, 209] [/input, 87] 
split level 2: [/input, 254] [/input.3, 143] [/input, 222] [/input, 254] [/input, 87] [/input, 87] [/input, 254] 

all verified at 13th iter
pruning_in_iteration open status: True
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.005877971649169922
Time: prepare 0.0064    bound 0.1367    transfer 0.0003    finalize 0.0033    func 0.1467    
Accumulated time: func 0.3584    prepare 0.0108    bound 0.3422    transfer 0.0005    finalize 0.0056    
length of domains: 0
Time: pickout 0.0007    decision 0.0249    set_bounds 0.0076    solve 0.1468    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0483    set_bounds 0.0184    solve 0.3586    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.4320700168609619


Properties batch 6, size 1
Remaining timeout: 112.97717618942261
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.91799831]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.91799831]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 150] 
split level 5: [/input.3, 220] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.009020566940307617
Time: prepare 0.0035    bound 0.1977    transfer 0.0004    finalize 0.0022    func 0.2039    
Accumulated time: func 0.2039    prepare 0.0040    bound 0.1977    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.47922 (6), -0.33952 (6), -0.33136 (6), -0.29516 (6), -0.14064 (6), -0.12537 (6), -0.06085 (6), -0.04042 (6), 
length of domains: 8
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0108    solve 0.2040    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0108    solve 0.2040    add 0.0010    
Current (lb-rhs): -0.47921812534332275
8 domains visited
Cumulative time: 0.24324464797973633

BaB round 2
batch: 8
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 156] [/input, 17] [/input.3, 156] [/input, 175] [/input.3, 124] [/input, 17] [/input.3, 156] [/input, 175] 
split level 1: [/input, 181] [/input, 87] [/input, 209] [/input, 17] [/input.3, 156] [/input, 175] [/input.3, 144] [/input, 17] 
split level 2: [/input, 254] [/input, 222] [/input.3, 144] [/input, 209] [/input, 254] [/input, 222] [/input, 209] [/input, 222] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.00938868522644043
Time: prepare 0.0076    bound 0.2072    transfer 0.0004    finalize 0.0038    func 0.2190    
Accumulated time: func 0.4229    prepare 0.0120    bound 0.4049    transfer 0.0007    finalize 0.0060    
Current worst splitting domains lb-rhs (depth):
-0.08756 (9), -0.07589 (9), -0.06177 (9), -0.06003 (9), -0.05762 (9), 
length of domains: 5
Time: pickout 0.0006    decision 0.0266    set_bounds 0.0094    solve 0.2191    add 0.0011    
Accumulated time: pickout 0.0010    decision 0.0495    set_bounds 0.0202    solve 0.4230    add 0.0020    
Current (lb-rhs): -0.0875558853149414
13 domains visited
Cumulative time: 0.5005741119384766

BaB round 3
batch: 5
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 175] [/input, 222] [/input, 87] [/input, 87] [/input, 222] 
split level 1: [/input.3, 156] [/input, 87] [/input, 227] [/input, 227] [/input, 87] 
split level 2: [/input, 227] [/input, 227] [/input, 254] [/input, 12] [/input, 12] 
split level 3: [/input, 209] [/input, 12] [/input, 209] [/input, 209] [/input, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0094    bound 0.0046    transfer 0.0001    finalize 0.0032    func 0.0174    
Accumulated time: func 0.4402    prepare 0.0219    bound 0.4095    transfer 0.0009    finalize 0.0092    
length of domains: 0
Time: pickout 0.0008    decision 0.0238    set_bounds 0.0122    solve 0.0174    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0733    set_bounds 0.0324    solve 0.4405    add 0.0021    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
13 domains visited
Cumulative time: 0.5550885200500488


Properties batch 7, size 1
Remaining timeout: 112.32609295845032
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.78975773]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.78975773]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 153] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 40 / 64 = 0.625
pruning-in-iteration extra time: 0.009350299835205078
Time: prepare 0.0035    bound 0.2014    transfer 0.0003    finalize 0.0022    func 0.2076    
Accumulated time: func 0.2076    prepare 0.0041    bound 0.2014    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.91268 (6), -0.83525 (6), -0.79906 (6), -0.62109 (6), -0.58529 (6), -0.50128 (6), -0.50005 (6), -0.48020 (6), -0.45453 (6), -0.44000 (6), -0.42321 (6), -0.41046 (6), -0.37274 (6), -0.34147 (6), -0.32572 (6), -0.28731 (6), -0.25505 (6), -0.22759 (6), -0.22360 (6), -0.20342 (6), 
length of domains: 24
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.2077    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0108    solve 0.2077    add 0.0011    
Current (lb-rhs): -0.9126774072647095
24 domains visited
Cumulative time: 0.24702119827270508

BaB round 2
batch: 24
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 248] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 254] [/input, 164] 
split level 1: [/input, 209] [/input.3, 156] [/input.3, 248] [/input, 150] [/input.3, 248] [/input, 150] [/input.3, 248] [/input.3, 248] [/input, 164] [/input, 254] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 96 = 0.71875
pruning-in-iteration extra time: 0.009491682052612305
Time: prepare 0.0107    bound 0.2104    transfer 0.0004    finalize 0.0047    func 0.2263    
Accumulated time: func 0.4339    prepare 0.0152    bound 0.4118    transfer 0.0007    finalize 0.0069    
Current worst splitting domains lb-rhs (depth):
-0.55356 (8), -0.46713 (8), -0.36510 (8), -0.33359 (8), -0.27620 (8), -0.26960 (8), -0.26848 (8), -0.26731 (8), -0.26527 (8), -0.22348 (8), -0.19200 (8), -0.18483 (8), -0.18108 (8), -0.16701 (8), -0.11983 (8), -0.11133 (8), -0.10799 (8), -0.09749 (8), -0.08532 (8), -0.08030 (8), 
length of domains: 27
Time: pickout 0.0006    decision 0.0360    set_bounds 0.0113    solve 0.2265    add 0.0015    
Accumulated time: pickout 0.0010    decision 0.0590    set_bounds 0.0221    solve 0.4342    add 0.0025    
Current (lb-rhs): -0.5535640716552734
51 domains visited
Cumulative time: 0.5233569145202637

BaB round 3
batch: 27
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 181] [/input, 150] [/input.3, 156] [/input, 164] [/input, 245] [/input, 150] [/input, 175] [/input, 175] [/input, 254] [/input, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 34 / 54 = 0.6296296296296297
pruning-in-iteration extra time: 0.009145975112915039
Time: prepare 0.0067    bound 0.1986    transfer 0.0003    finalize 0.0025    func 0.2081    
Accumulated time: func 0.6420    prepare 0.0224    bound 0.6104    transfer 0.0010    finalize 0.0094    
Current worst splitting domains lb-rhs (depth):
-0.51523 (9), -0.43215 (9), -0.32417 (9), -0.27021 (9), -0.24265 (9), -0.22803 (9), -0.21992 (9), -0.18194 (9), -0.18057 (9), -0.17300 (9), -0.13605 (9), -0.10371 (9), -0.10084 (9), -0.08639 (9), -0.06282 (9), -0.04356 (9), -0.04165 (9), -0.03875 (9), -0.01725 (9), -0.01112 (9), 
length of domains: 20
Time: pickout 0.0007    decision 0.0368    set_bounds 0.0065    solve 0.2084    add 0.0011    
Accumulated time: pickout 0.0017    decision 0.0958    set_bounds 0.0286    solve 0.6425    add 0.0036    
Current (lb-rhs): -0.5152322053909302
71 domains visited
Cumulative time: 0.7772607803344727

BaB round 4
batch: 20
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 248] [/input, 150] [/input, 175] [/input, 175] [/input, 150] [/input.3, 248] [/input, 150] [/input, 175] [/input, 150] [/input, 222] 
split level 1: [/input.3, 220] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input.3, 156] [/input.3, 248] [/input.3, 248] [/input.3, 248] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 67 / 80 = 0.8375
pruning-in-iteration extra time: 0.00788569450378418
Time: prepare 0.0093    bound 0.1631    transfer 0.0003    finalize 0.0031    func 0.1759    
Accumulated time: func 0.8179    prepare 0.0322    bound 0.7735    transfer 0.0013    finalize 0.0125    
Current worst splitting domains lb-rhs (depth):
-0.32924 (11), -0.29221 (11), -0.19413 (11), -0.17074 (11), -0.10839 (11), -0.09640 (11), -0.08606 (11), -0.07517 (11), -0.04160 (11), -0.02893 (11), -0.01843 (11), -0.01614 (11), -0.00622 (11), 
length of domains: 13
Time: pickout 0.0006    decision 0.0328    set_bounds 0.0105    solve 0.1760    add 0.0009    
Accumulated time: pickout 0.0024    decision 0.1286    set_bounds 0.0391    solve 0.8185    add 0.0045    
Current (lb-rhs): -0.3292447328567505
84 domains visited
Cumulative time: 0.9985141754150391

BaB round 5
batch: 13
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 164] [/input, 254] [/input, 245] [/input, 227] [/input.3, 156] [/input.3, 156] [/input.3, 156] [/input, 222] [/input.3, 248] [/input.3, 156] 
split level 1: [/input, 245] [/input.3, 248] [/input.3, 156] [/input, 12] [/input.3, 144] [/input.3, 200] [/input.3, 200] [/input.3, 248] [/input, 175] [/input, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 52 = 0.8461538461538461
pruning-in-iteration extra time: 0.0067942142486572266
Time: prepare 0.0061    bound 0.1268    transfer 0.0002    finalize 0.0020    func 0.1354    
Accumulated time: func 0.9533    prepare 0.0388    bound 0.9003    transfer 0.0015    finalize 0.0146    
Current worst splitting domains lb-rhs (depth):
-0.24776 (13), -0.12111 (13), -0.10175 (13), -0.06836 (13), -0.06520 (13), -0.06286 (13), -0.06154 (13), -0.01937 (13), 
length of domains: 8
Time: pickout 0.0006    decision 0.0288    set_bounds 0.0075    solve 0.1354    add 0.0008    
Accumulated time: pickout 0.0030    decision 0.1574    set_bounds 0.0466    solve 0.9539    add 0.0053    
Current (lb-rhs): -0.24776124954223633
92 domains visited
Cumulative time: 1.1719772815704346

BaB round 6
batch: 8
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 200] [/input.3, 144] [/input.3, 156] [/input.3, 200] [/input.3, 200] [/input.3, 200] [/input.3, 156] [/input.3, 156] 
split level 1: [/input.3, 143] [/input.3, 143] [/input.3, 200] [/input.3, 143] [/input.3, 144] [/input.3, 143] [/input.3, 200] [/input.3, 143] 
split level 2: [/input.3, 220] [/input.3, 220] [/input.3, 143] [/input.3, 220] [/input.3, 143] [/input.3, 220] [/input.3, 143] [/input.3, 200] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.007554531097412109
Time: prepare 0.0074    bound 0.1363    transfer 0.0003    finalize 0.0042    func 0.1483    
Accumulated time: func 1.1016    prepare 0.0467    bound 1.0366    transfer 0.0019    finalize 0.0187    
Current worst splitting domains lb-rhs (depth):
-0.10286 (16), -0.06739 (16), 
length of domains: 2
Time: pickout 0.0006    decision 0.0262    set_bounds 0.0087    solve 0.1484    add 0.0010    
Accumulated time: pickout 0.0036    decision 0.1836    set_bounds 0.0553    solve 1.1023    add 0.0063    
Current (lb-rhs): -0.10286122560501099
94 domains visited
Cumulative time: 1.3575921058654785

BaB round 7
batch: 2
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 214] [/input.3, 214] 
split level 1: [/input, 17] [/input.3, 83] 
split level 2: [/input.3, 83] [/input.3, 216] 
split level 3: [/input.3, 216] [/input.3, 43] 
split level 4: [/input.3, 43] [/input.3, 94] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009260177612304688
Time: prepare 0.0076    bound 0.2073    transfer 0.0003    finalize 0.0037    func 0.2190    
Accumulated time: func 1.3206    prepare 0.0548    bound 1.2439    transfer 0.0021    finalize 0.0224    
Current worst splitting domains lb-rhs (depth):
-0.01344 (21), -0.00406 (21), -0.00327 (21), -0.00057 (21), 
length of domains: 4
Time: pickout 0.0009    decision 0.0233    set_bounds 0.0111    solve 0.2191    add 0.0007    
Accumulated time: pickout 0.0045    decision 0.2069    set_bounds 0.0664    solve 1.3214    add 0.0071    
Current (lb-rhs): -0.01344078779220581
98 domains visited
Cumulative time: 1.6133677959442139

BaB round 8
batch: 4
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input.3, 244] [/input.3, 244] [/input.3, 244] 
split level 1: [/input.3, 187] [/input.3, 187] [/input.3, 187] [/input.3, 187] 
split level 2: [/input.3, 94] [/input.3, 94] [/input.3, 94] [/input.3, 94] 
split level 3: [/input.3, 175] [/input.3, 175] [/input.3, 175] [/input.3, 175] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.152557373046875e-05
Time: prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0144    
Accumulated time: func 1.3350    prepare 0.0625    bound 1.2485    transfer 0.0023    finalize 0.0248    
length of domains: 0
Time: pickout 0.0007    decision 0.0240    set_bounds 0.0098    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0052    decision 0.2309    set_bounds 0.0763    solve 1.3358    add 0.0072    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
98 domains visited
Cumulative time: 1.6626355648040771


Properties batch 8, size 1
Remaining timeout: 110.56951308250427
##### Instance 375 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.04794180]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57443669e-03, -1.04866475e-02, -2.51124799e-03, -1.05014741e-02,
        -2.56200172e-02,  1.02921617e+00, -5.84211200e-04, -2.98479646e-02,
        -9.19482112e-03, -1.17461383e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.04794180]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 21
Node /17 input 0: size torch.Size([256]) unstable 53
-----------------
# of unstable neurons: 74
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 247] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 153] 
split level 3: [/input.3, 248] 
split level 4: [/input.3, 80] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.008981466293334961
Time: prepare 0.0037    bound 0.1967    transfer 0.0004    finalize 0.0025    func 0.2035    
Accumulated time: func 0.2035    prepare 0.0042    bound 0.1967    transfer 0.0004    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.54106 (6), -0.41682 (6), -0.40475 (6), -0.36891 (6), -0.20529 (6), -0.18567 (6), -0.12541 (6), -0.11188 (6), 
length of domains: 8
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0108    solve 0.2036    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0108    solve 0.2036    add 0.0009    
Current (lb-rhs): -0.5410624742507935
8 domains visited
Cumulative time: 0.24308180809020996

BaB round 2
batch: 8
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 156] [/input, 17] [/input.3, 156] [/input, 175] [/input.3, 26] [/input, 17] [/input.3, 26] [/input, 175] 
split level 1: [/input, 181] [/input, 87] [/input.3, 220] [/input, 17] [/input.3, 220] [/input, 175] [/input.3, 220] [/input, 17] 
split level 2: [/input, 254] [/input, 222] [/input, 209] [/input, 209] [/input, 254] [/input, 222] [/input, 254] [/input, 222] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009253501892089844
Time: prepare 0.0076    bound 0.2069    transfer 0.0003    finalize 0.0032    func 0.2180    
Accumulated time: func 0.4215    prepare 0.0122    bound 0.4036    transfer 0.0006    finalize 0.0057    
Current worst splitting domains lb-rhs (depth):
-0.14118 (9), -0.12944 (9), -0.12585 (9), -0.12355 (9), -0.10613 (9), -0.01472 (9), -0.01175 (9), 
length of domains: 7
Time: pickout 0.0006    decision 0.0262    set_bounds 0.0092    solve 0.2180    add 0.0010    
Accumulated time: pickout 0.0010    decision 0.0494    set_bounds 0.0200    solve 0.4216    add 0.0019    
Current (lb-rhs): -0.14117515087127686
15 domains visited
Cumulative time: 0.4987297058105469

BaB round 3
batch: 7
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 26] [/input, 175] [/input, 222] [/input.3, 156] [/input, 87] [/input, 227] [/input, 222] 
split level 1: [/input, 209] [/input, 181] [/input, 87] [/input.3, 144] [/input, 227] [/input, 87] [/input, 87] 
split level 2: [/input.3, 143] [/input, 227] [/input, 227] [/input.3, 143] [/input, 254] [/input, 12] [/input, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 7.295608520507812e-05
Time: prepare 0.0065    bound 0.0045    transfer 0.0001    finalize 0.0021    func 0.0133    
Accumulated time: func 0.4347    prepare 0.0192    bound 0.4080    transfer 0.0007    finalize 0.0079    
length of domains: 0
Time: pickout 0.0008    decision 0.0257    set_bounds 0.0081    solve 0.0133    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0751    set_bounds 0.0281    solve 0.4349    add 0.0020    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
15 domains visited
Cumulative time: 0.5469677448272705

Result: safe in 10.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 376, vnnlib ID: 376 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00193884,  0.00390711,  0.00601892,  0.00446205, -0.00684764,
          0.00954933,  0.00133444, -0.00275612,  0.00802229,  0.98061568]],
       device='cuda:0')
diversed PGD initialization time: 0.1256
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.62235908e-02, -2.28065550e-02,  2.66451389e-02, -1.47536099e-02,
          -6.79997355e-03, -4.73325700e-03, -4.51214612e-04, -8.72766972e-03,
           9.82678354e-01,  2.25051194e-02],
         [-1.62235908e-02, -2.28065550e-02,  2.66451389e-02, -1.47536099e-02,
          -6.79997355e-03, -4.73325700e-03, -4.51214612e-04, -8.72766972e-03,
           9.82678354e-01,  2.25051194e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.03872871,  0.04531167, -0.00414002,  0.03725873,  0.02930509,
           0.02723838,  0.02295633,  0.03123279, -0.96017325]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1347 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2045 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 377, vnnlib ID: 377 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00858238, 0.01660585, 0.05559671, 0.04822972, 0.02631503, 0.07031429,
         0.02209673, 0.60249698, 0.06796807, 0.05043256]], device='cuda:0')
diversed PGD initialization time: 0.1375
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.43067874e-02,  7.51619041e-03, -3.17890346e-02,  6.46239519e-03,
          -3.20140272e-04, -4.22064215e-03, -9.71672684e-03, -1.00114858e+00,
          -1.11516565e-03]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1475 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2398 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 378, vnnlib ID: 378 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00656267, -0.02934223,  0.03039949,  0.43908396, -0.02156595,
          0.08160982,  0.01105002, -0.07129245,  0.04120922,  0.51414573]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00656267, -0.02934223,  0.03039950,  0.43908402, -0.02156595,
           0.08160983,  0.01105002, -0.07129245,  0.04120920,  0.51414567],
         [-0.00656267, -0.02934223,  0.03039950,  0.43908402, -0.02156595,
           0.08160983,  0.01105002, -0.07129245,  0.04120920,  0.51414567]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.44564670,  0.46842626,  0.40868452,  0.46064997,  0.35747421,
           0.42803401,  0.51037645,  0.39787483, -0.07506165]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1229 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 379, vnnlib ID: 379 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00507178, -0.00766178,  0.01464270, -0.00404103,  0.68733257,
          0.04057106,  0.01831450,  0.02425258,  0.10717734,  0.11285517]],
       device='cuda:0')
diversed PGD initialization time: 0.1275
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00616728, -0.00552144,  0.00657146,  0.00496063, -0.00827144,
           0.02027468,  0.00852990, -0.00570692,  0.00700508,  0.97176063],
         [ 0.00616728, -0.00552144,  0.00657146,  0.00496063, -0.00827144,
           0.02027468,  0.00852990, -0.00570692,  0.00700508,  0.97176063]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01443872, -0.00275000, -0.01484290, -0.01323207, -0.02854612,
          -0.01680134, -0.00256452, -0.01527652, -0.98003209]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1369 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2190 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 380, vnnlib ID: 380 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.82592529e-03, -2.51643360e-04,  5.34537435e-03, -2.66678631e-04,
          2.99185142e-03,  1.01924911e-02,  1.79261714e-03, -1.08784586e-02,
          7.03535974e-03,  9.96148944e-01]], device='cuda:0')
diversed PGD initialization time: 0.1261
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2078 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 381, vnnlib ID: 381 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03277085, -0.00367251,  0.03153998,  0.01956207, -0.05788960,
          0.10366651,  0.91412693, -0.03403889,  0.01254410,  0.06256110]],
       device='cuda:0')
diversed PGD initialization time: 0.1246
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1333 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1832 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 382, vnnlib ID: 382 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
         -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
          5.92563301e-03,  6.78145885e-03]], device='cuda:0')
diversed PGD initialization time: 0.1409
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.14115024, -0.00429612, -0.02199541,  0.00500581, -0.00727946,
          -0.03114218,  0.95038265, -0.00568315, -0.00454406, -0.00266537],
         [ 0.14115024, -0.00429612, -0.02199541,  0.00500581, -0.00727946,
          -0.03114218,  0.95038265, -0.00568315, -0.00454406, -0.00266537]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.80923241, 0.95467877, 0.97237808, 0.94537681, 0.95766211,
          0.98152483, 0.95606577, 0.95492673, 0.95304799]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4221 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
         -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
          5.92563301e-03,  6.78145885e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 37, 1, 19] with unstable size 36 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [36]; unstable size 36; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.93992370, -0.46647507, -0.71595007, -0.75091147, -1.03723001,
         -0.78278875, -1.10599804, -1.34645224, -0.71041799]], device='cuda:0') None
best_l after optimization: -2.456329345703125
alpha/beta optimization time: 1.076402187347412
initial alpha-crown bounds: tensor([[-0.25554097, -0.09728536, -0.21187480, -0.15376492, -0.62557739,
         -0.22103199, -0.37515974, -0.30772027, -0.20837381]], device='cuda:0')
Worst class: (+ rhs) -0.6255773901939392
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.39029216766357
##### Instance 382 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25554097]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25554097]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 116] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 144] 
split level 5: [/input, 149] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00038886070251464844
Time: prepare 0.0067    bound 0.0134    transfer 0.0002    finalize 0.0024    func 0.0228    
Accumulated time: func 0.0228    prepare 0.0072    bound 0.0134    transfer 0.0002    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.0229    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.0229    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06225252151489258


Properties batch 1, size 1
Remaining timeout: 118.23125696182251
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09728536]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09728536]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 132] 
split level 5: [/input, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0066    bound 0.0051    transfer 0.0001    finalize 0.0024    func 0.0143    
Accumulated time: func 0.0143    prepare 0.0071    bound 0.0051    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0113    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0113    solve 0.0144    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.054314374923706055


Properties batch 2, size 1
Remaining timeout: 118.07870316505432
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21187480]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21187480]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 175] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 85] 
split level 4: [/input.3, 144] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008287668228149414
Time: prepare 0.0036    bound 0.1844    transfer 0.0003    finalize 0.0022    func 0.1907    
Accumulated time: func 0.1907    prepare 0.0042    bound 0.1844    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.10610 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0112    solve 0.1908    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0112    solve 0.1908    add 0.0007    
Current (lb-rhs): -0.10609626770019531
1 domains visited
Cumulative time: 0.2313399314880371

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] 
split level 1: [/input, 149] 
split level 2: [/input, 178] 
split level 3: [/input, 198] 
split level 4: [/input, 174] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0074    bound 0.0052    transfer 0.0001    finalize 0.0024    func 0.0152    
Accumulated time: func 0.2059    prepare 0.0121    bound 0.1896    transfer 0.0004    finalize 0.0046    
length of domains: 0
Time: pickout 0.0008    decision 0.0250    set_bounds 0.0109    solve 0.0154    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0489    set_bounds 0.0220    solve 0.2061    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.28371119499206543


Properties batch 3, size 1
Remaining timeout: 117.69726777076721
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15376492]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15376492]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 85] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 220] 
split level 5: [/input, 174] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0067    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0072    bound 0.0046    transfer 0.0001    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.0138    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.0138    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05257153511047363


Properties batch 4, size 1
Remaining timeout: 117.54829692840576
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.62557739]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.62557739]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 18] 
split level 2: [/input.3, 123] 
split level 3: [/input, 178] 
split level 4: [/input, 149] 
split level 5: [/input, 174] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.891654968261719e-05
Time: prepare 0.0066    bound 0.0045    transfer 0.0001    finalize 0.0024    func 0.0137    
Accumulated time: func 0.0137    prepare 0.0071    bound 0.0045    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0111    solve 0.0137    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0111    solve 0.0137    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05318093299865723


Properties batch 5, size 1
Remaining timeout: 117.4002296924591
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22103199]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22103199]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 61] 
split level 3: [/input, 174] 
split level 4: [/input, 149] 
split level 5: [/input.3, 144] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.224082946777344e-05
Time: prepare 0.0066    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0139    
Accumulated time: func 0.0139    prepare 0.0071    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0111    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05285525321960449


Properties batch 6, size 1
Remaining timeout: 117.25311088562012
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37515974]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37515974]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input, 149] 
split level 4: [/input.3, 13] 
split level 5: [/input, 178] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0066    bound 0.0050    transfer 0.0001    finalize 0.0024    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0071    bound 0.0050    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0114    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0114    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05385017395019531


Properties batch 7, size 1
Remaining timeout: 117.10107684135437
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30772027]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30772027]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 132] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 30] 
split level 5: [/input.3, 162] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008804559707641602
Time: prepare 0.0036    bound 0.1918    transfer 0.0003    finalize 0.0023    func 0.1981    
Accumulated time: func 0.1981    prepare 0.0042    bound 0.1918    transfer 0.0003    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.06459 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0245    set_bounds 0.0109    solve 0.1982    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0245    set_bounds 0.0109    solve 0.1982    add 0.0007    
Current (lb-rhs): -0.06459146738052368
1 domains visited
Cumulative time: 0.23922109603881836

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] 
split level 1: [/input, 149] 
split level 2: [/input, 178] 
split level 3: [/input, 198] 
split level 4: [/input, 174] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.390975952148438e-05
Time: prepare 0.0073    bound 0.0046    transfer 0.0001    finalize 0.0025    func 0.0145    
Accumulated time: func 0.2126    prepare 0.0120    bound 0.1963    transfer 0.0004    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0247    set_bounds 0.0109    solve 0.0146    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0492    set_bounds 0.0218    solve 0.2128    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.29030609130859375


Properties batch 8, size 1
Remaining timeout: 116.71335887908936
##### Instance 382 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20837381]], device='cuda:0') need to verify.
Model prediction is: tensor([-9.29247588e-04,  1.32635236e-04,  7.34375417e-03,  9.34496522e-03,
        -3.44788656e-03,  6.90288842e-04,  1.00229156e+00, -3.03766131e-03,
         5.92563301e-03,  6.78145885e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20837381]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 19
Node /17 input 0: size torch.Size([256]) unstable 30
-----------------
# of unstable neurons: 49
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 144] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 26] 
split level 5: [/input, 149] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.224082946777344e-05
Time: prepare 0.0068    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0115    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0115    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05368494987487793

Result: safe in 3.4372 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 383, vnnlib ID: 383 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.46804410e-03, -1.20421052e-02, -1.96689367e-03, -2.78475881e-03,
         -2.39816271e-02,  1.02854896e+00, -7.23652542e-04, -2.87435800e-02,
         -8.75789672e-03, -2.10598111e-03]], device='cuda:0')
diversed PGD initialization time: 0.1293
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01219446,  0.03674336,  0.01160397, -0.04024026, -0.02107034,
           0.18297586, -0.05053406, -0.02208807,  0.81001955,  0.03826758],
         [ 0.01219446,  0.03674336,  0.01160397, -0.04024026, -0.02107034,
           0.18297586, -0.05053406, -0.02208807,  0.81001955,  0.03826758]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.17078140,  0.14623250,  0.17137189,  0.22321612,  0.20404619,
           0.23350993,  0.20506392, -0.62704372,  0.14470828]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1380 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2090 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 384, vnnlib ID: 384 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03075365, -0.01352719,  0.02202260, -0.02157219,  0.37032789,
          0.02406421, -0.01105202,  0.04729412,  0.21596467,  0.33798254]],
       device='cuda:0')
diversed PGD initialization time: 0.1460
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1555 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2280 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 385, vnnlib ID: 385 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.98738348e-01, -5.91004640e-03,  1.87814236e-03, -1.02277398e-02,
         -9.21916217e-04,  1.18076131e-02, -5.43779880e-03, -1.02407783e-02,
          1.60192698e-03, -5.91714680e-03]], device='cuda:0')
diversed PGD initialization time: 0.1348
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.37458548, -0.03159352, -0.00763743, -0.01468574, -0.01948990,
           0.03676128, -0.01278274, -0.05141619,  0.59398168,  0.08285724],
         [ 0.37458548, -0.03159352, -0.00763743, -0.01468574, -0.01948990,
           0.03676128, -0.01278274, -0.05141619,  0.59398168,  0.08285724]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.40617901,  0.38222289,  0.38927120,  0.39407536,  0.33782420,
           0.38736820,  0.42600167, -0.21939620,  0.29172826]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1436 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2083 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 386, vnnlib ID: 386 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.07666817, 0.02529819, 0.03500326, 0.02773464, 0.02131328, 0.07366575,
         0.03168203, 0.59804499, 0.03653953, 0.04482413]], device='cuda:0')
diversed PGD initialization time: 0.1393
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.96267825, -0.03969873, -0.01172277,  0.02199465,  0.00565137,
          -0.02050000, -0.01408765,  0.08481336,  0.01080873, -0.02823962],
         [ 0.96267825, -0.03969873, -0.01172277,  0.02199465,  0.00565137,
          -0.02050000, -0.01408765,  0.08481336,  0.01080873, -0.02823962]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.87786490,  0.12451209,  0.09653613,  0.06281871,  0.07916199,
           0.10531335,  0.09890100,  0.07400463,  0.11305298]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1493 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 387, vnnlib ID: 387 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00589664, 0.00897770, 0.02938059, 0.02787815, 0.74009377, 0.02198897,
         0.01114514, 0.02390846, 0.01617323, 0.10985108]], device='cuda:0')
diversed PGD initialization time: 0.1262
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.88616186e-04,  3.35616618e-03,  1.31919086e-02,  3.78553569e-03,
          -7.75614753e-03,  1.17886215e-02, -2.41123140e-04, -1.17521286e-02,
           1.27231330e-02,  9.77252126e-01],
         [-6.88616186e-04,  3.35616618e-03,  1.31919086e-02,  3.78553569e-03,
          -7.75614753e-03,  1.17886215e-02, -2.41123140e-04, -1.17521286e-02,
           1.27231330e-02,  9.77252126e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00706753, -0.01111231, -0.02094806, -0.01154168, -0.01954477,
          -0.00751502,  0.00399598, -0.02047928, -0.98500830]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1350 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2025 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 388, vnnlib ID: 388 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
         -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
         -4.09082323e-03, -1.72957033e-02]], device='cuda:0')
diversed PGD initialization time: 0.1260
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.87787122, -0.06734626,  0.30086607, -0.06261863, -0.01883208,
          -0.02955239, -0.02482494,  0.08180424, -0.05512033, -0.03495781],
         [ 0.87787122, -0.06734626,  0.30086607, -0.06261863, -0.01883208,
          -0.02955239, -0.02482494,  0.08180424, -0.05512033, -0.03495781]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.94521749, 0.57700515, 0.94048983, 0.89670330, 0.90742362,
          0.90269613, 0.79606700, 0.93299156, 0.91282904]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4101 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
         -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
         -4.09082323e-03, -1.72957033e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 70, 1, 13] with unstable size 69 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [69]; unstable size 69; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 69] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62286168, -1.48267603, -0.80067366, -0.88391995, -0.89413887,
         -0.72197098, -1.21046948, -0.85963213, -1.55218196]], device='cuda:0') None
best_l after optimization: -0.9047942161560059
alpha/beta optimization time: 1.7132072448730469
initial alpha-crown bounds: tensor([[ 0.06743544, -0.64593971,  0.03499420,  0.01637585, -0.09456977,
          0.03694767, -0.25548390,  0.02670856, -0.09126255]], device='cuda:0')
Worst class: (+ rhs) -0.6459397077560425
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.76872301101685
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.06743543595075607.

Properties batch 1, size 1
Remaining timeout: 117.69262456893921
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64593971]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
        -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
        -4.09082323e-03, -1.72957033e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64593971]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 53
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input, 158] 
split level 3: [/input, 154] 
split level 4: [/input.3, 130] 
split level 5: [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.891654968261719e-05
Time: prepare 0.0066    bound 0.0048    transfer 0.0001    finalize 0.0024    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0071    bound 0.0048    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.0141    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052976369857788086


Properties batch 2, size 1
Remaining timeout: 117.54917669296265
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.03499419987201691.

Properties batch 3, size 1
Remaining timeout: 117.47719502449036
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.01637585461139679.

Properties batch 4, size 1
Remaining timeout: 117.41011643409729
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09456977]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
        -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
        -4.09082323e-03, -1.72957033e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09456977]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 53
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 197] 
split level 4: [/input, 154] 
split level 5: [/input.3, 74] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0004038810729980469
Time: prepare 0.0065    bound 0.0136    transfer 0.0002    finalize 0.0023    func 0.0227    
Accumulated time: func 0.0227    prepare 0.0070    bound 0.0136    transfer 0.0002    finalize 0.0023    
length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0114    solve 0.0228    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0114    solve 0.0228    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06192779541015625


Properties batch 5, size 1
Remaining timeout: 117.25889039039612
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.036947667598724365.

Properties batch 6, size 1
Remaining timeout: 117.18699979782104
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25548390]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
        -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
        -4.09082323e-03, -1.72957033e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25548390]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 53
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 119] 
split level 3: [/input, 154] 
split level 4: [/input.3, 31] 
split level 5: [/input, 209] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0067    bound 0.0047    transfer 0.0001    finalize 0.0024    func 0.0140    
Accumulated time: func 0.0140    prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0024    
length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0115    solve 0.0140    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053579092025756836


Properties batch 7, size 1
Remaining timeout: 117.04341626167297
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.026708558201789856.

Properties batch 8, size 1
Remaining timeout: 116.97098755836487
##### Instance 388 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09126255]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.00114322e+00, -2.40267813e-02,  3.05728614e-03, -1.83024406e-02,
        -1.39427222e-02, -9.02116299e-05,  1.05300732e-02, -2.57574022e-03,
        -4.09082323e-03, -1.72957033e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09126255]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 13
Node /17 input 0: size torch.Size([256]) unstable 40
-----------------
# of unstable neurons: 53
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 119] 
split level 2: [/input, 154] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 80] 
split level 5: [/input.3, 31] 

all verified at 5th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00208282470703125
Time: prepare 0.0066    bound 0.0529    transfer 0.0003    finalize 0.0030    func 0.0629    
Accumulated time: func 0.0629    prepare 0.0072    bound 0.0529    transfer 0.0003    finalize 0.0030    
length of domains: 0
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0116    solve 0.0630    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0241    set_bounds 0.0116    solve 0.0630    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.1035759449005127

Result: safe in 3.2273 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 389, vnnlib ID: 389 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00194762,  0.80026799,  0.01124479,  0.02411225,  0.01265676,
          0.03114590,  0.01816657,  0.05052341,  0.02474956,  0.01495367]],
       device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00601206, -0.02374588,  0.01026316, -0.01132745, -0.01025210,
           0.01315784, -0.01327699, -0.03407335,  1.02752864, -0.01054407],
         [ 0.00601206, -0.02374588,  0.01026316, -0.01132745, -0.01025210,
           0.01315784, -0.01327699, -0.03407335,  1.02752864, -0.01054407]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02975794, -0.03400904, -0.01241843, -0.01349378, -0.03690372,
          -0.01046889,  0.01032747, -1.05127454, -0.01320181]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1338 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2093 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 390, vnnlib ID: 390 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.32488963e-03, -8.47232342e-03,  5.36288321e-03,  9.78264689e-01,
         -2.55938731e-02,  3.09830457e-02, -4.42451239e-03, -1.96816176e-02,
         -2.49132514e-04,  1.44203752e-03]], device='cuda:0')
diversed PGD initialization time: 0.1270
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.52290811e-02, -5.51126897e-04, -3.56129557e-02,  3.53116632e-01,
          -2.74109095e-03, -9.29723307e-02, -1.32584572e-02, -3.89141142e-02,
           8.78191650e-01, -2.08632052e-02],
         [-4.52290811e-02, -5.51126897e-04, -3.56129557e-02,  3.53116632e-01,
          -2.74109095e-03, -9.29723307e-02, -1.32584572e-02, -3.89141142e-02,
           8.78191650e-01, -2.08632052e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39834571,  0.35366777,  0.38872957,  0.35585773,  0.44608897,
           0.36637509,  0.39203075, -0.52507502,  0.37397984]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1359 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2167 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 391, vnnlib ID: 391 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02515703,  0.56991011,  0.03159986, -0.06691267,  0.00670787,
          0.17717324,  0.02227119,  0.07652499,  0.18260264,  0.00296419]],
       device='cuda:0')
diversed PGD initialization time: 0.1258
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2128 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 392, vnnlib ID: 392 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.33747876e-03, -7.04902411e-03,  2.16808915e-03,  9.86480117e-01,
         -2.03890614e-02,  1.93273723e-02, -4.23624739e-03, -1.71175748e-02,
         -1.22882426e-04,  1.78691745e-03]], device='cuda:0')
diversed PGD initialization time: 0.1235
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.22050601e-03,  1.52727216e-03,  1.33475363e-02,  1.47524938e-01,
          -7.94683024e-03,  8.24634373e-01, -5.50909340e-03,  6.70224428e-04,
          -2.27158517e-03,  8.09860229e-03],
         [-3.22050601e-03,  1.52727216e-03,  1.33475363e-02,  1.47524938e-01,
          -7.94683024e-03,  8.24634373e-01, -5.50909340e-03,  6.70224428e-04,
          -2.27158517e-03,  8.09860229e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.15074545,  0.14599767,  0.13417740,  0.15547177, -0.67710942,
           0.15303403,  0.14685471,  0.14979652,  0.13942634]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1321 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1940 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 393, vnnlib ID: 393 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00250155,  0.00189400,  0.01229648,  0.00451405,  0.95853919,
          0.00379854,  0.00319948, -0.01992705,  0.00395103, -0.00467610]],
       device='cuda:0')
diversed PGD initialization time: 0.1770
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.68962020,  0.00871839, -0.03066877,  0.01433869,  0.48688704,
          -0.04396857, -0.09383933,  0.00496025, -0.00566415, -0.06514096],
         [ 0.68962020,  0.00871839, -0.03066877,  0.01433869,  0.48688704,
          -0.04396857, -0.09383933,  0.00496025, -0.00566415, -0.06514096]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.20273316,  0.47816867,  0.51755583,  0.47254837,  0.53085560,
           0.58072639,  0.48192680,  0.49255118,  0.55202800]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1864 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 394, vnnlib ID: 394 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02148933, -0.03861926,  0.43492538,  0.02513382, -0.01679910,
         -0.03657757, -0.01306576,  0.69542688, -0.02086151, -0.04783824]],
       device='cuda:0')
diversed PGD initialization time: 0.1223
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.66282128e-02,  5.90227842e-02,  7.89169133e-01,  1.32819027e-01,
          -1.57745667e-02, -4.42567393e-02, -7.37458467e-05,  1.28772303e-01,
          -2.08163336e-02, -3.53861302e-02],
         [-3.66282128e-02,  5.90227842e-02,  7.89169133e-01,  1.32819027e-01,
          -1.57745667e-02, -4.42567393e-02, -7.37458467e-05,  1.28772303e-01,
          -2.08163336e-02, -3.53861302e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.16540052,  0.06974952, -0.66039681, -0.00404672,  0.14454687,
           0.17302904,  0.12884605,  0.14958864,  0.16415843]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1303 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2092 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 395, vnnlib ID: 395 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00767659, -0.02080442,  1.01553440, -0.00806528,  0.00142977,
          0.00195950, -0.00927027, -0.01619053, -0.00115339, -0.00686124]],
       device='cuda:0')
diversed PGD initialization time: 0.1301
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00960723, -0.02427273,  0.00971340, -0.01264970, -0.01041472,
           0.01288766, -0.01464604, -0.03313561,  1.02761364, -0.01104357],
         [ 0.00960723, -0.02427273,  0.00971340, -0.01264970, -0.01041472,
           0.01288766, -0.01464604, -0.03313561,  1.02761364, -0.01104357]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.06167048e-04,  3.39861289e-02,  2.23630965e-02,  2.01281123e-02,
          -3.17426771e-03,  2.43594348e-02,  4.28490043e-02, -1.01790023e+00,
           2.07569674e-02]]], device='cuda:0')
number of violation:  2
Attack finished in 0.1386 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1884 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 396, vnnlib ID: 396 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00862508,  0.02953152,  0.25216201,  0.01226703, -0.00725797,
          0.01194633,  0.00179888,  0.68638569, -0.00484636, -0.01513818]],
       device='cuda:0')
diversed PGD initialization time: 0.1227
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.00117226, 0.07547856, 0.09041986, 0.54062939, 0.01011264,
          0.04697790, 0.01887871, 0.11409511, 0.03521368, 0.04265824],
         [0.00117226, 0.07547856, 0.09041986, 0.54062939, 0.01011264,
          0.04697790, 0.01887871, 0.11409511, 0.03521368, 0.04265824]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.11292286,  0.03861655,  0.02367526, -0.42653427,  0.10398248,
           0.06711721,  0.09521640,  0.07888144,  0.07143687]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1307 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 397, vnnlib ID: 397 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00754583,  0.79803091,  0.01287757, -0.00771709,  0.01318078,
          0.07777053,  0.01411837,  0.05945787,  0.01519197,  0.01256826]],
       device='cuda:0')
diversed PGD initialization time: 0.1194
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01924670,  0.11874940, -0.02933131, -0.04317257, -0.00373164,
           0.01197176, -0.02356912, -0.02295250,  1.00005376, -0.02331515],
         [-0.01924670,  0.11874940, -0.02933131, -0.04317257, -0.00373164,
           0.01197176, -0.02356912, -0.02295250,  1.00005376, -0.02331515]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13799611,  0.14808071,  0.16192198,  0.12248104,  0.10677764,
           0.14231852,  0.14170191, -0.88130438,  0.14206456]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1269 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2032 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 398, vnnlib ID: 398 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.46312129e-04,  1.70173064e-01,  5.69674492e-01,  7.61027783e-02,
          1.30421929e-02,  6.21852055e-02, -8.09197128e-03,  2.36610770e-02,
          2.80501395e-02,  2.77189538e-02]], device='cuda:0')
diversed PGD initialization time: 0.1155
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02702095,  0.07592353, -0.07773687,  0.45566165, -0.02050957,
          -0.10978002, -0.02896821, -0.04396126,  0.77096832, -0.02204083],
         [-0.02702095,  0.07592353, -0.07773687,  0.45566165, -0.02050957,
          -0.10978002, -0.02896821, -0.04396126,  0.77096832, -0.02204083]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.05071592, -0.15366040, -0.53339851, -0.05722729,  0.03204315,
          -0.04876866, -0.03377561, -0.84870517, -0.05569604]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1245 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2484 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 399, vnnlib ID: 399 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.05146779.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.012866947799921036, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.53190368e-04,  9.56485629e-01,  6.23689592e-03,  6.02155924e-05,
         -2.75675580e-03,  2.88983434e-03, -2.42015719e-03,  9.19567049e-03,
         -4.84287739e-07,  4.97727096e-03]], device='cuda:0')
diversed PGD initialization time: 0.1213
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01882682, -0.00725670,  0.00127572, -0.00660634, -0.00764751,
           0.01143206, -0.00480374, -0.03126536,  1.02386975, -0.00530791],
         [-0.01882682, -0.00725670,  0.00127572, -0.00660634, -0.00764751,
           0.01143206, -0.00480374, -0.03126536,  1.02386975, -0.00530791]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.15701221e-02, -8.53241980e-03, -6.50361180e-04,  3.90809029e-04,
          -1.86887607e-02, -2.45296210e-03,  2.40086615e-02, -1.03112650e+00,
          -1.94878876e-03]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1316 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2012 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 400, vnnlib ID: 400 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.05191826,  0.04282039,  0.25122958,  0.01436442,  0.00376843,
          0.05201758, -0.00917267,  0.07438795,  0.62509602, -0.03354947]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05191824,  0.04282039,  0.25122964,  0.01436443,  0.00376842,
           0.05201758, -0.00917266,  0.07438797,  0.62509590, -0.03354947],
         [-0.05191824,  0.04282039,  0.25122964,  0.01436443,  0.00376842,
           0.05201758, -0.00917266,  0.07438797,  0.62509590, -0.03354947]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.12630621,  0.03156757, -0.17684168,  0.06002354,  0.07061955,
           0.02237038,  0.08356062, -0.55070794,  0.10793744]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 401, vnnlib ID: 401 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.01288068e-03, -3.58266681e-02,  9.66240406e-01,  1.26983523e-01,
          6.60572201e-04, -6.28212914e-02, -3.49112228e-03, -2.80077457e-02,
         -4.11853194e-04, -8.99183750e-03]], device='cuda:0')
diversed PGD initialization time: 0.1444
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00658289, -0.04829323,  0.05690771,  0.47375816, -0.03790006,
          -0.17066625, -0.08464234, -0.14957906,  1.00212908, -0.05804248],
         [-0.00658289, -0.04829323,  0.05690771,  0.47375816, -0.03790006,
          -0.17066625, -0.08464234, -0.14957906,  1.00212908, -0.05804248]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.06349060,  0.10520094, -0.41685045,  0.09480776,  0.22757396,
           0.14155003,  0.20648676, -0.94522136,  0.11495019]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1542 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2177 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 402, vnnlib ID: 402 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01851821,  0.50508577, -0.01783057, -0.05832019, -0.00903135,
         -0.00258439, -0.03014014, -0.01261595,  0.62789571, -0.00668077]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01851823,  0.50508565, -0.01783058, -0.05832022, -0.00903135,
          -0.00258440, -0.03014014, -0.01261596,  0.62789589, -0.00668077],
         [-0.01851823,  0.50508565, -0.01783058, -0.05832022, -0.00903135,
          -0.00258440, -0.03014014, -0.01261596,  0.62789589, -0.00668077]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.52360386,  0.52291620,  0.56340587,  0.51411700,  0.50767004,
           0.53522581,  0.51770163, -0.12281024,  0.51176643]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1508 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 403, vnnlib ID: 403 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99942571, -0.00498419,  0.00986582, -0.01046766, -0.00534068,
          0.00650478,  0.00151621, -0.02065033,  0.00179473, -0.00805870]],
       device='cuda:0')
diversed PGD initialization time: 0.1251
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.19457811e-01, -3.74801308e-02,  2.66361982e-02, -1.75205767e-02,
          -2.32501701e-03,  3.65383923e-04, -1.41870528e-02, -1.51726753e-02,
           8.36259246e-01,  5.14777899e-02],
         [ 1.19457811e-01, -3.74801308e-02,  2.66361982e-02, -1.75205767e-02,
          -2.32501701e-03,  3.65383923e-04, -1.41870528e-02, -1.51726753e-02,
           8.36259246e-01,  5.14777899e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.15693794,  0.09282161,  0.13697839,  0.12178282,  0.11909243,
           0.13364486,  0.13463049, -0.71680140,  0.06798002]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1338 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2109 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 404, vnnlib ID: 404 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00524992,  0.01089925,  0.02841884,  0.01408509,  0.32115838,
          0.01426410,  0.00863030, -0.00091840,  0.01561186,  0.58323389]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00524993,  0.01089925,  0.02841885,  0.01408510,  0.32115838,
           0.01426410,  0.00863030, -0.00091840,  0.01561188,  0.58323389],
         [ 0.00524993,  0.01089925,  0.02841885,  0.01408510,  0.32115838,
           0.01426410,  0.00863030, -0.00091840,  0.01561188,  0.58323389]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.31590846,  0.31025913,  0.29273951,  0.30707330,  0.30689427,
           0.31252807,  0.32207680,  0.30554649, -0.26207551]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 405, vnnlib ID: 405 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01218861, 0.73274153, 0.03905357, 0.02050160, 0.00233709, 0.02949658,
         0.01124604, 0.04794735, 0.02983699, 0.04134839]], device='cuda:0')
diversed PGD initialization time: 0.1281
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.06092049, -0.02732200, -0.12356992, -0.13539782,  0.76149148,
          -0.07782301, -0.04512873,  0.64485985,  0.00278981, -0.05622025],
         [-0.06092049, -0.02732200, -0.12356992, -0.13539782,  0.76149148,
          -0.07782301, -0.04512873,  0.64485985,  0.00278981, -0.05622025]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.03359849,  0.09624792,  0.10807582, -0.78881347,  0.05050100,
           0.01780672, -0.67218184, -0.03011181,  0.02889825]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1366 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1914 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 406, vnnlib ID: 406 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04403180, -0.03176247, -0.00492930, -0.06624600,  0.49533805,
          0.03320360, -0.01886798, -0.00955310,  0.49220768,  0.05732314]],
       device='cuda:0')
diversed PGD initialization time: 0.1319
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1413 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2042 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 407, vnnlib ID: 407 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00560556, -0.00362532,  0.02053092, -0.03531332, -0.03565536,
          0.02829935, -0.00528619, -0.03626828,  0.32818940,  0.74429893]],
       device='cuda:0')
diversed PGD initialization time: 0.1377
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01004053, -0.03944987,  0.80610734, -0.20546436, -0.22289190,
           0.06030370, -0.22393309, -0.10720782,  0.50017864,  0.34785342],
         [ 0.01004053, -0.03944987,  0.80610734, -0.20546436, -0.22289190,
           0.06030370, -0.22393309, -0.10720782,  0.50017864,  0.34785342]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33781290,  0.38730329, -0.45825392,  0.55331779,  0.57074535,
           0.28754973,  0.57178652,  0.45506126, -0.15232521]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1459 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2051 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 408, vnnlib ID: 408 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00906932, -0.00334517,  0.00632860, -0.01097071, -0.00584928,
          0.57549602,  0.44056457, -0.01205760,  0.01644773,  0.00498012]],
       device='cuda:0')
diversed PGD initialization time: 0.1201
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.20029710e-02,  5.26346266e-04,  7.00722635e-03,  1.23419166e-02,
          -8.49124044e-04, -4.98809665e-03,  9.76368845e-01, -6.39215112e-04,
           9.88912582e-03,  8.50558281e-03],
         [ 1.20029710e-02,  5.26346266e-04,  7.00722635e-03,  1.23419166e-02,
          -8.49124044e-04, -4.98809665e-03,  9.76368845e-01, -6.39215112e-04,
           9.88912582e-03,  8.50558281e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01699107, -0.00551444, -0.01199532, -0.01733001, -0.00413897,
          -0.98135692, -0.00434888, -0.01487722, -0.01349368]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1285 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1945 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 409, vnnlib ID: 409 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00693701, -0.00287560,  0.00288400, -0.00368971,  0.01164809,
          0.01049086,  0.00186817, -0.00661139,  0.00821465,  0.99217945]],
       device='cuda:0')
diversed PGD initialization time: 0.1238
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1328 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1816 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 410, vnnlib ID: 410 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00297773, -0.00741322,  0.00231451, -0.00612567, -0.00357123,
         -0.00570187, -0.00535627, -0.01042961,  0.00140253, -0.00589151]],
       device='cuda:0')
diversed PGD initialization time: 0.1468
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.46818569, -0.04170786,  0.02895878, -0.02661802,  0.00151654,
           0.00222981, -0.01034254,  0.00068733,  0.55654138, -0.00221878],
         [ 0.46818569, -0.04170786,  0.02895878, -0.02661802,  0.00151654,
           0.00222981, -0.01034254,  0.00068733,  0.55654138, -0.00221878]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.50989354,  0.43922693,  0.49480373,  0.46666914,  0.46595588,
           0.47852823,  0.46749836, -0.08835569,  0.47040448]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1582 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2277 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 411, vnnlib ID: 411 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.45872459e-02,  1.77701563e-03,  3.23836505e-03,  6.87775761e-03,
         -2.82310322e-03,  1.06055290e-03,  9.76389349e-01,  8.96781683e-04,
          4.23725694e-03,  8.35628062e-03]], device='cuda:0')
diversed PGD initialization time: 0.1269
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.21241564, -0.04759739,  0.03675976, -0.03061029,  0.03681758,
          -0.05269402,  0.04506392, -0.04782468,  0.71994382,  0.09447598],
         [ 0.21241564, -0.04759739,  0.03675976, -0.03061029,  0.03681758,
          -0.05269402,  0.04506392, -0.04782468,  0.71994382,  0.09447598]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.16735172,  0.09266131,  0.00830416,  0.07567421,  0.00824634,
           0.09775794,  0.09288860, -0.67487991, -0.04941206]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1356 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2102 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 412, vnnlib ID: 412 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01685884, -0.03230222, -0.04766409, -0.08515735, -0.04841618,
         -0.01370130, -0.02433424, -0.07185130,  0.55605060,  0.77113044]],
       device='cuda:0')
diversed PGD initialization time: 0.1342
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1436 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 413, vnnlib ID: 413 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.98492277, -0.00359727, -0.00225087, -0.01378331, -0.00172054,
          0.03747997, -0.01346639, -0.00568382, -0.00492282, -0.00561012]],
       device='cuda:0')
diversed PGD initialization time: 0.1305
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.36798409, -0.02372406, -0.01659547, -0.05021936, -0.01154684,
           0.61405438, -0.03872296, -0.01713239,  0.35947129, -0.10833529],
         [ 0.36798409, -0.02372406, -0.01659547, -0.05021936, -0.01154684,
           0.61405438, -0.03872296, -0.01713239,  0.35947129, -0.10833529]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39170814,  0.38457954,  0.41820344,  0.37953094, -0.24607030,
           0.40670705,  0.38511646,  0.00851279,  0.47631937]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1389 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2032 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 414, vnnlib ID: 414 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.85280359e-04,  9.58541274e-01,  5.44081628e-03, -2.31550634e-03,
         -4.06866893e-03,  4.09327447e-04, -1.25617906e-03,  6.44734502e-03,
          1.19221956e-03,  5.33384085e-03]], device='cuda:0')
diversed PGD initialization time: 0.1258
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01545480,  0.17907465, -0.01032606, -0.03590611,  0.00299454,
           0.02773634, -0.02355921, -0.00827514,  0.87413335, -0.02848551],
         [-0.01545480,  0.17907465, -0.01032606, -0.03590611,  0.00299454,
           0.02773634, -0.02355921, -0.00827514,  0.87413335, -0.02848551]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19452944,  0.18940070,  0.21498075,  0.17608011,  0.15133831,
           0.20263386,  0.18734978, -0.69505870,  0.20756015]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1353 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1990 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 415, vnnlib ID: 415 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.23707440e-03, -9.38700885e-03, -2.75252759e-03, -1.07897371e-02,
         -2.41558217e-02,  1.02963316e+00, -6.03124499e-05, -2.88704485e-02,
         -9.23468173e-03, -1.60316378e-03]], device='cuda:0')
diversed PGD initialization time: 0.1274
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02607129, -0.04982811, -0.02827610, -0.05608574, -0.01952731,
           0.42211390, -0.06467086, -0.03896794,  0.85948241, -0.02980039],
         [-0.02607129, -0.04982811, -0.02827610, -0.05608574, -0.01952731,
           0.42211390, -0.06467086, -0.03896794,  0.85948241, -0.02980039]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.44818518,  0.47194201,  0.45038998,  0.47819963,  0.44164121,
           0.48678476,  0.46108183, -0.43736851,  0.45191428]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1364 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1836 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 416, vnnlib ID: 416 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.59323961e-03,  3.71696055e-03,  8.48433375e-03,  4.10747528e-03,
         -6.87019899e-03,  1.04581192e-02,  8.02583992e-04, -6.49408996e-03,
          9.72687453e-03,  9.79554057e-01]], device='cuda:0')
diversed PGD initialization time: 0.1375
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1467 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2168 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 417, vnnlib ID: 417 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02003296, -0.00269168,  0.03332576,  0.01143070,  0.01719561,
          0.06774797,  0.01948369,  0.50108910,  0.30224678,  0.03093342]],
       device='cuda:0')
diversed PGD initialization time: 0.1375
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.43067874e-02,  7.51619041e-03, -3.17890346e-02,  6.46239519e-03,
          -3.20140272e-04, -4.22064215e-03, -9.71672684e-03, -1.00114858e+00,
          -1.11516565e-03]]], device='cuda:0')
number of violation:  6
Attack finished in 0.1469 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3088 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 418, vnnlib ID: 418 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00527206, -0.03003158,  0.02823997,  0.42615449, -0.02228061,
          0.08671152,  0.01007920, -0.06999342,  0.06076387,  0.50362045]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00527206, -0.03003158,  0.02823995,  0.42615440, -0.02228061,
           0.08671151,  0.01007920, -0.06999342,  0.06076392,  0.50362051],
         [-0.00527206, -0.03003158,  0.02823995,  0.42615440, -0.02228061,
           0.08671151,  0.01007920, -0.06999342,  0.06076392,  0.50362051]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.43142647,  0.45618600,  0.39791447,  0.44843501,  0.33944291,
           0.41607520,  0.49614781,  0.36539048, -0.07746610]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0766 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 419, vnnlib ID: 419 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02230743, -0.01821103,  0.00228888, -0.03174688,  0.54421574,
          0.02852254,  0.01536805,  0.00576289,  0.35974485,  0.09731130]],
       device='cuda:0')
diversed PGD initialization time: 0.1268
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46269277e-02,  7.83633068e-03, -3.14688943e-02,  6.78253546e-03,
          -3.90050188e-03, -9.39658657e-03,  3.20140272e-04, -1.00082850e+00,
          -7.95025378e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1358 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1815 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 420, vnnlib ID: 420 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.44236633e-03, -3.04742157e-03,  5.89843094e-03, -6.99430704e-03,
         -1.40003860e-04,  2.22711191e-02,  6.45030662e-03, -1.85401142e-02,
          1.26064941e-02,  9.92920220e-01]], device='cuda:0')
diversed PGD initialization time: 0.1248
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2026 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 421, vnnlib ID: 421 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.05291669,  0.00765196,  0.05350500,  0.03125890, -0.07952215,
          0.13454893,  0.82473707, -0.01547734,  0.03462691,  0.06985287]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2033 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 422, vnnlib ID: 422 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
         -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
          4.63605672e-03,  6.55695796e-03]], device='cuda:0')
diversed PGD initialization time: 0.1243
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[0.13067472, 0.01191811, 0.01713581, 0.01990113, 0.00464869,
          0.00446838, 0.76734042, 0.01720349, 0.01830169, 0.01724198],
         [0.13067472, 0.01191811, 0.01713581, 0.01990113, 0.00464869,
          0.00446838, 0.76734042, 0.01720349, 0.01830169, 0.01724198]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.63666570, 0.75542229, 0.75020462, 0.74743927, 0.76269174,
          0.76287204, 0.75013691, 0.74903876, 0.75009847]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4293 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
         -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
          4.63605672e-03,  6.55695796e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 50, 1, 22] with unstable size 49 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [49]; unstable size 49; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.33240438, -0.71711683, -0.97469240, -0.94687748, -1.48252368,
         -0.93151665, -1.23396206, -1.44714701, -1.22558403]], device='cuda:0') None
best_l after optimization: -6.598900318145752
alpha/beta optimization time: 0.764258623123169
initial alpha-crown bounds: tensor([[-0.68573481, -0.42448607, -0.59270030, -0.50239468, -1.29447937,
         -0.59512699, -0.89738083, -0.91308254, -0.69351459]], device='cuda:0')
Worst class: (+ rhs) -1.2944793701171875
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.66541266441345
##### Instance 422 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.68573481]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.68573481]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 48] 
split level 4: [/input.3, 116] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.006966352462768555
Time: prepare 0.0036    bound 0.1270    transfer 0.0003    finalize 0.0019    func 0.1329    
Accumulated time: func 0.1329    prepare 0.0042    bound 0.1270    transfer 0.0003    finalize 0.0019    
Current worst splitting domains lb-rhs (depth):
-0.29337 (6), -0.00747 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.1329    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0108    solve 0.1329    add 0.0007    
Current (lb-rhs): -0.2933676838874817
2 domains visited
Cumulative time: 0.1724083423614502

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 151] [/input.3, 151] 
split level 1: [/input, 228] [/input, 149] 
split level 2: [/input, 149] [/input, 178] 
split level 3: [/input.3, 244] [/input.3, 244] 
split level 4: [/input, 178] [/input, 245] 

all verified at 6th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0022907257080078125
Time: prepare 0.0075    bound 0.0467    transfer 0.0003    finalize 0.0025    func 0.0570    
Accumulated time: func 0.1898    prepare 0.0121    bound 0.1737    transfer 0.0006    finalize 0.0043    
length of domains: 0
Time: pickout 0.0005    decision 0.0214    set_bounds 0.0110    solve 0.0570    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0449    set_bounds 0.0218    solve 0.1900    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2628211975097656


Properties batch 1, size 1
Remaining timeout: 118.30700325965881
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42448607]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42448607]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 48] 
split level 5: [/input.3, 85] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008449077606201172
Time: prepare 0.0037    bound 0.1874    transfer 0.0004    finalize 0.0022    func 0.1938    
Accumulated time: func 0.1938    prepare 0.0042    bound 0.1874    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.25747 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0111    solve 0.1939    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0111    solve 0.1939    add 0.0007    
Current (lb-rhs): -0.25747478008270264
1 domains visited
Cumulative time: 0.23384499549865723

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] 
split level 1: [/input, 149] 
split level 2: [/input, 178] 
split level 3: [/input.3, 244] 
split level 4: [/input, 174] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.152557373046875e-05
Time: prepare 0.0074    bound 0.0045    transfer 0.0001    finalize 0.0026    func 0.0147    
Accumulated time: func 0.2085    prepare 0.0122    bound 0.1919    transfer 0.0005    finalize 0.0047    
length of domains: 0
Time: pickout 0.0006    decision 0.0243    set_bounds 0.0119    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0476    set_bounds 0.0230    solve 0.2086    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.285785436630249


Properties batch 2, size 1
Remaining timeout: 117.92615532875061
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.59270030]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.59270030]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 175] 
split level 5: [/input.3, 232] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.00838780403137207
Time: prepare 0.0034    bound 0.1897    transfer 0.0003    finalize 0.0022    func 0.1959    
Accumulated time: func 0.1959    prepare 0.0039    bound 0.1897    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.39410 (6), -0.18069 (6), -0.05762 (6), 
length of domains: 3
Time: pickout 0.0005    decision 0.0231    set_bounds 0.0108    solve 0.1960    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0231    set_bounds 0.0108    solve 0.1960    add 0.0009    
Current (lb-rhs): -0.3941041827201843
3 domains visited
Cumulative time: 0.23534202575683594

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 228] [/input, 228] 
split level 1: [/input, 149] [/input.3, 85] [/input, 149] 
split level 2: [/input, 178] [/input, 149] [/input, 178] 
split level 3: [/input.3, 244] [/input, 178] [/input.3, 85] 
split level 4: [/input, 174] [/input, 245] [/input, 245] 

all verified at 4th iter
pruning_in_iteration open status: True
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 0.0017828941345214844
Time: prepare 0.0109    bound 0.0435    transfer 0.0003    finalize 0.0041    func 0.0589    
Accumulated time: func 0.2548    prepare 0.0153    bound 0.2332    transfer 0.0006    finalize 0.0063    
length of domains: 0
Time: pickout 0.0007    decision 0.0231    set_bounds 0.0157    solve 0.0589    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0461    set_bounds 0.0265    solve 0.2549    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.33423948287963867


Properties batch 3, size 1
Remaining timeout: 117.49690675735474
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50239468]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50239468]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 220] 
split level 4: [/input.3, 85] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.00700831413269043
Time: prepare 0.0035    bound 0.1313    transfer 0.0003    finalize 0.0018    func 0.1372    
Accumulated time: func 0.1372    prepare 0.0041    bound 0.1313    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.25192 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0109    solve 0.1372    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0109    solve 0.1372    add 0.0006    
Current (lb-rhs): -0.2519195079803467
1 domains visited
Cumulative time: 0.17662477493286133

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] 
split level 1: [/input, 149] 
split level 2: [/input, 178] 
split level 3: [/input.3, 244] 
split level 4: [/input, 198] 
split level 5: [/input, 174] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0074    bound 0.0049    transfer 0.0001    finalize 0.0026    func 0.0151    
Accumulated time: func 0.1522    prepare 0.0120    bound 0.1362    transfer 0.0004    finalize 0.0044    
length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0121    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0469    set_bounds 0.0230    solve 0.1524    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2284243106842041


Properties batch 4, size 1
Remaining timeout: 117.16984224319458
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.29447937]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.29447937]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 18] 
split level 2: [/input.3, 123] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 144] 
split level 5: [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 64 = 0.6875
pruning-in-iteration extra time: 0.007441043853759766
Time: prepare 0.0066    bound 0.1375    transfer 0.0003    finalize 0.0023    func 0.1469    
Accumulated time: func 0.1469    prepare 0.0071    bound 0.1375    transfer 0.0003    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.37714 (6), -0.36477 (6), -0.31873 (6), -0.31681 (6), -0.30908 (6), -0.28331 (6), -0.23142 (6), -0.21751 (6), -0.20897 (6), -0.20245 (6), -0.19590 (6), -0.19244 (6), -0.17188 (6), -0.15527 (6), -0.14233 (6), -0.12002 (6), -0.09149 (6), -0.07860 (6), -0.07365 (6), -0.06759 (6), 
length of domains: 20
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0111    solve 0.1470    add 0.0010    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0111    solve 0.1470    add 0.0010    
Current (lb-rhs): -0.37714123725891113
20 domains visited
Cumulative time: 0.1873183250427246

BaB round 2
batch: 20
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 178] [/input, 178] [/input, 178] [/input, 149] [/input, 178] [/input, 178] [/input, 178] [/input, 228] [/input, 178] 
split level 1: [/input, 149] [/input, 62] [/input, 62] [/input, 62] [/input, 178] [/input, 149] [/input, 149] [/input, 62] [/input, 149] [/input, 62] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 80 = 0.95
pruning-in-iteration extra time: 0.0068395137786865234
Time: prepare 0.0088    bound 0.1273    transfer 0.0002    finalize 0.0030    func 0.1395    
Accumulated time: func 0.2864    prepare 0.0164    bound 0.2649    transfer 0.0005    finalize 0.0054    
Current worst splitting domains lb-rhs (depth):
-0.08295 (8), -0.06430 (8), -0.04082 (8), -0.02353 (8), 
length of domains: 4
Time: pickout 0.0006    decision 0.0327    set_bounds 0.0100    solve 0.1395    add 0.0007    
Accumulated time: pickout 0.0010    decision 0.0562    set_bounds 0.0211    solve 0.2865    add 0.0017    
Current (lb-rhs): -0.0829513669013977
24 domains visited
Cumulative time: 0.37116312980651855

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 178] [/input, 178] [/input, 178] [/input, 178] 
split level 1: [/input, 198] [/input, 198] [/input.3, 85] [/input.3, 85] 
split level 2: [/input.3, 85] [/input.3, 85] [/input, 198] [/input, 198] 
split level 3: [/input.3, 31] [/input.3, 31] [/input.3, 31] [/input.3, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.797645568847656e-05
Time: prepare 0.0077    bound 0.0049    transfer 0.0001    finalize 0.0026    func 0.0153    
Accumulated time: func 0.3017    prepare 0.0245    bound 0.2698    transfer 0.0006    finalize 0.0079    
length of domains: 0
Time: pickout 0.0005    decision 0.0228    set_bounds 0.0109    solve 0.0154    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0790    set_bounds 0.0319    solve 0.3019    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
24 domains visited
Cumulative time: 0.4211149215698242


Properties batch 5, size 1
Remaining timeout: 116.65190649032593
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.59512699]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.59512699]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 48] 
split level 3: [/input.3, 61] 
split level 4: [/input, 174] 
split level 5: [/input.3, 217] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.0069732666015625
Time: prepare 0.0065    bound 0.1300    transfer 0.0002    finalize 0.0024    func 0.1393    
Accumulated time: func 0.1393    prepare 0.0070    bound 0.1300    transfer 0.0002    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.32535 (6), -0.32390 (6), -0.18767 (6), -0.15500 (6), 
length of domains: 4
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0110    solve 0.1394    add 0.0007    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0110    solve 0.1394    add 0.0007    
Current (lb-rhs): -0.32534676790237427
4 domains visited
Cumulative time: 0.1785755157470703

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 149] [/input, 228] [/input, 149] 
split level 1: [/input, 149] [/input, 178] [/input, 149] [/input, 178] 
split level 2: [/input, 178] [/input.3, 244] [/input, 178] [/input.3, 244] 
split level 3: [/input.3, 244] [/input, 198] [/input.3, 244] [/input, 198] 

all verified at 6th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.002475261688232422
Time: prepare 0.0072    bound 0.0484    transfer 0.0002    finalize 0.0025    func 0.0584    
Accumulated time: func 0.1977    prepare 0.0147    bound 0.1784    transfer 0.0004    finalize 0.0049    
length of domains: 0
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0110    solve 0.0584    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0462    set_bounds 0.0220    solve 0.1978    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.27244043350219727


Properties batch 6, size 1
Remaining timeout: 116.28496360778809
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.89738083]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.89738083]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 13] 
split level 4: [/input.3, 144] 
split level 5: [/input.3, 133] 
pruning_in_iteration open status: True
ratio of positive domain = 49 / 64 = 0.765625
pruning-in-iteration extra time: 0.007416486740112305
Time: prepare 0.0034    bound 0.1287    transfer 0.0002    finalize 0.0017    func 0.1343    
Accumulated time: func 0.1343    prepare 0.0040    bound 0.1287    transfer 0.0002    finalize 0.0017    
Current worst splitting domains lb-rhs (depth):
-0.51935 (6), -0.51456 (6), -0.37441 (6), -0.23790 (6), -0.22857 (6), -0.21970 (6), -0.18747 (6), -0.17120 (6), -0.12523 (6), -0.07048 (6), -0.06666 (6), -0.06300 (6), -0.05603 (6), -0.02776 (6), -0.02335 (6), 
length of domains: 15
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.1343    add 0.0010    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0109    solve 0.1343    add 0.0010    
Current (lb-rhs): -0.519352912902832
15 domains visited
Cumulative time: 0.17417263984680176

BaB round 2
batch: 15
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 2] [/input, 178] [/input, 149] [/input, 2] [/input, 178] [/input, 228] [/input, 228] [/input, 149] [/input, 2] 
split level 1: [/input, 149] [/input, 34] [/input.3, 103] [/input, 228] [/input, 34] [/input.3, 85] [/input, 149] [/input, 149] [/input, 228] [/input, 34] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 60 = 0.9166666666666666
pruning-in-iteration extra time: 0.006906270980834961
Time: prepare 0.0069    bound 0.1274    transfer 0.0002    finalize 0.0025    func 0.1370    
Accumulated time: func 0.2712    prepare 0.0113    bound 0.2561    transfer 0.0004    finalize 0.0042    
Current worst splitting domains lb-rhs (depth):
-0.26226 (8), -0.23380 (8), -0.22043 (8), -0.19692 (8), -0.04203 (8), 
length of domains: 5
Time: pickout 0.0006    decision 0.0301    set_bounds 0.0074    solve 0.1370    add 0.0008    
Accumulated time: pickout 0.0011    decision 0.0534    set_bounds 0.0183    solve 0.2713    add 0.0018    
Current (lb-rhs): -0.2622564435005188
20 domains visited
Cumulative time: 0.35050320625305176

BaB round 3
batch: 5
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 178] [/input, 178] [/input, 178] [/input, 34] [/input, 178] 
split level 1: [/input.3, 85] [/input, 34] [/input.3, 103] [/input, 178] [/input.3, 103] 
split level 2: [/input.3, 103] [/input.3, 103] [/input, 198] [/input.3, 103] [/input, 198] 
split level 3: [/input.3, 132] [/input, 174] [/input, 174] [/input, 174] [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 80 = 0.9875
pruning-in-iteration extra time: 0.008418083190917969
Time: prepare 0.0091    bound 0.1586    transfer 0.0004    finalize 0.0032    func 0.1713    
Accumulated time: func 0.4425    prepare 0.0208    bound 0.4147    transfer 0.0007    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.00747 (12), 
length of domains: 1
Time: pickout 0.0006    decision 0.0236    set_bounds 0.0129    solve 0.1714    add 0.0007    
Accumulated time: pickout 0.0017    decision 0.0770    set_bounds 0.0311    solve 0.4427    add 0.0024    
Current (lb-rhs): -0.007471978664398193
21 domains visited
Cumulative time: 0.560218095779419

BaB round 4
batch: 1
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 34] 
split level 1: [/input, 198] 
split level 2: [/input.3, 175] 
split level 3: [/input, 62] 
split level 4: [/input, 174] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.130073547363281e-05
Time: prepare 0.0078    bound 0.0056    transfer 0.0001    finalize 0.0028    func 0.0164    
Accumulated time: func 0.4590    prepare 0.0293    bound 0.4203    transfer 0.0009    finalize 0.0102    
length of domains: 0
Time: pickout 0.0005    decision 0.0256    set_bounds 0.0132    solve 0.0165    add 0.0001    
Accumulated time: pickout 0.0022    decision 0.1026    set_bounds 0.0443    solve 0.4592    add 0.0025    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
21 domains visited
Cumulative time: 0.6165332794189453


Properties batch 7, size 1
Remaining timeout: 115.56672072410583
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.91308254]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.91308254]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009163379669189453
Time: prepare 0.0036    bound 0.2000    transfer 0.0002    finalize 0.0021    func 0.2062    
Accumulated time: func 0.2062    prepare 0.0042    bound 0.2000    transfer 0.0002    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.33214 (6), -0.15797 (6), -0.10682 (6), -0.00905 (6), 
length of domains: 4
Time: pickout 0.0005    decision 0.0243    set_bounds 0.0113    solve 0.2063    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0243    set_bounds 0.0113    solve 0.2063    add 0.0009    
Current (lb-rhs): -0.3321393132209778
4 domains visited
Cumulative time: 0.247725248336792

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 198] [/input, 228] [/input, 198] 
split level 1: [/input, 149] [/input, 150] [/input, 149] [/input, 150] 
split level 2: [/input.3, 244] [/input, 245] [/input.3, 244] [/input, 245] 
split level 3: [/input, 178] [/input.3, 85] [/input, 178] [/input.3, 85] 

all verified at 11th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.005501508712768555
Time: prepare 0.0075    bound 0.1230    transfer 0.0003    finalize 0.0032    func 0.1341    
Accumulated time: func 0.3403    prepare 0.0122    bound 0.3230    transfer 0.0006    finalize 0.0053    
length of domains: 0
Time: pickout 0.0008    decision 0.0241    set_bounds 0.0105    solve 0.1342    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0483    set_bounds 0.0217    solve 0.3404    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.41773557662963867


Properties batch 8, size 1
Remaining timeout: 115.03495502471924
##### Instance 422 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.69351459]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.65257230e-03,  1.51313841e-04,  7.14226067e-03,  8.14948976e-03,
        -3.43938917e-03,  3.35650891e-03,  1.00156415e+00, -2.91877985e-03,
         4.63605672e-03,  6.55695796e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.69351459]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 22
Node /17 input 0: size torch.Size([256]) unstable 38
-----------------
# of unstable neurons: 60
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 103] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.008043766021728516
Time: prepare 0.0035    bound 0.1458    transfer 0.0003    finalize 0.0018    func 0.1516    
Accumulated time: func 0.1516    prepare 0.0040    bound 0.1458    transfer 0.0003    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.39944 (6), -0.30787 (6), -0.21590 (6), -0.20144 (6), -0.09565 (6), 
length of domains: 5
Time: pickout 0.0005    decision 0.0237    set_bounds 0.0110    solve 0.1516    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0237    set_bounds 0.0110    solve 0.1516    add 0.0008    
Current (lb-rhs): -0.39943569898605347
5 domains visited
Cumulative time: 0.19184589385986328

BaB round 2
batch: 5
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input, 149] [/input, 228] [/input, 228] [/input, 149] 
split level 1: [/input, 149] [/input, 178] [/input, 149] [/input, 149] [/input, 178] 
split level 2: [/input, 178] [/input.3, 85] [/input, 178] [/input, 178] [/input, 62] 
split level 3: [/input.3, 244] [/input, 62] [/input.3, 244] [/input, 62] [/input, 174] 

all verified at 14th iter
pruning_in_iteration open status: True
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 0.005296230316162109
Time: prepare 0.0093    bound 0.0995    transfer 0.0002    finalize 0.0031    func 0.1122    
Accumulated time: func 0.2637    prepare 0.0138    bound 0.2453    transfer 0.0005    finalize 0.0049    
length of domains: 0
Time: pickout 0.0006    decision 0.0234    set_bounds 0.0120    solve 0.1122    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0471    set_bounds 0.0230    solve 0.2639    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 0.3405911922454834

Result: safe in 5.4086 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 423, vnnlib ID: 423 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.18251550e-03, -1.12866834e-02, -1.60846114e-03, -2.80538201e-03,
         -2.19826512e-02,  1.02748108e+00, -1.83548778e-04, -2.70520449e-02,
         -8.48592818e-03, -2.36367434e-03]], device='cuda:0')
diversed PGD initialization time: 0.1295
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01769325,  0.07516053,  0.00657555, -0.05019440, -0.01595959,
           0.36945692, -0.00781829, -0.02903345,  0.55213708,  0.06785499],
         [-0.01769325,  0.07516053,  0.00657555, -0.05019440, -0.01595959,
           0.36945692, -0.00781829, -0.02903345,  0.55213708,  0.06785499]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.38715017,  0.29429638,  0.36288136,  0.41965133,  0.38541651,
           0.37727520,  0.39849037, -0.18268016,  0.30160195]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1390 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 424, vnnlib ID: 424 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04298289, -0.01005204,  0.01143074, -0.05545354,  0.34552863,
          0.02087548, -0.02207423,  0.00971387,  0.38623017,  0.26719415]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.04298290, -0.01005203,  0.01143073, -0.05545349,  0.34552872,
           0.02087548, -0.02207423,  0.00971389,  0.38623023,  0.26719400],
         [ 0.04298290, -0.01005203,  0.01143073, -0.05545349,  0.34552872,
           0.02087548, -0.02207423,  0.00971389,  0.38623023,  0.26719400]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.30254582,  0.35558075,  0.33409798,  0.40098220,  0.32465324,
           0.36760294,  0.33581483, -0.04070151,  0.07833472]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0796 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 425, vnnlib ID: 425 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.94051814e-01, -4.30231541e-03,  5.64928353e-03, -8.20650160e-03,
         -2.52820551e-04,  1.11712217e-02, -1.09334737e-02, -8.36455822e-03,
          2.37488747e-03, -4.81999665e-03]], device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.18006419, -0.03359033,  0.03917286, -0.04415303, -0.00733775,
          -0.01710724,  0.03104660, -0.01031724,  0.84173548, -0.01092976],
         [ 0.18006419, -0.03359033,  0.03917286, -0.04415303, -0.00733775,
          -0.01710724,  0.03104660, -0.01031724,  0.84173548, -0.01092976]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.21365452,  0.14089133,  0.22421722,  0.18740194,  0.19717142,
           0.14901759,  0.19038142, -0.66167128,  0.19099393]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1326 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1962 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 426, vnnlib ID: 426 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.12256135, 0.02627343, 0.03646985, 0.02958552, 0.02456975, 0.09298567,
         0.03543377, 0.50997275, 0.04183149, 0.05299687]], device='cuda:0')
diversed PGD initialization time: 0.1121
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.95260978, -0.04303832, -0.01143587,  0.02553874,  0.00568644,
          -0.02635948, -0.01658339,  0.08534715,  0.03165457, -0.02768627],
         [ 0.95260978, -0.04303832, -0.01143587,  0.02553874,  0.00568644,
          -0.02635948, -0.01658339,  0.08534715,  0.03165457, -0.02768627]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.86726260,  0.12838547,  0.09678301,  0.05980841,  0.07966071,
           0.11170662,  0.10193054,  0.05369258,  0.11303341]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1197 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1962 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 427, vnnlib ID: 427 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00606172, 0.00954534, 0.03059469, 0.02922903, 0.72035390, 0.02301202,
         0.01149126, 0.03089415, 0.01687687, 0.11753507]], device='cuda:0')
diversed PGD initialization time: 0.1215
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.05711544e-04,  3.26322764e-03,  1.36168748e-02,  3.70245427e-03,
          -7.65869394e-03,  1.19229183e-02, -3.30284238e-04, -1.22578293e-02,
           1.29559934e-02,  9.77116108e-01],
         [-7.05711544e-04,  3.26322764e-03,  1.36168748e-02,  3.70245427e-03,
          -7.65869394e-03,  1.19229183e-02, -3.30284238e-04, -1.22578293e-02,
           1.29559934e-02,  9.77116108e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00695298, -0.01092192, -0.02127557, -0.01136115, -0.01958161,
          -0.00732841,  0.00459914, -0.02061469, -0.98477483]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1291 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2145 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 428, vnnlib ID: 428 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
         -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
         -5.35368174e-03, -1.93512738e-02]], device='cuda:0')
diversed PGD initialization time: 0.1240
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.85026968, -0.06228568,  0.34963542, -0.05653638, -0.02510833,
          -0.03841607, -0.04672667,  0.05030132, -0.05416902,  0.00418955],
         [ 0.85026968, -0.06228568,  0.34963542, -0.05653638, -0.02510833,
          -0.03841607, -0.04672667,  0.05030132, -0.05416902,  0.00418955]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.91255534, 0.50063425, 0.90680605, 0.87537801, 0.88868576,
          0.89699632, 0.79996836, 0.90443867, 0.84608012]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4352 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
         -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
         -5.35368174e-03, -1.93512738e-02]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 83, 1, 14] with unstable size 82 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [82]; unstable size 82; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 82] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.74156463, -2.64113808, -1.96644759, -2.16646242, -2.09710264,
         -1.76993120, -2.43390346, -2.36366725, -3.15998149]], device='cuda:0') None
best_l after optimization: -5.306094169616699
alpha/beta optimization time: 1.603194236755371
initial alpha-crown bounds: tensor([[-0.32745060, -1.15230131, -0.43940103, -0.42737645, -0.60162038,
         -0.41086817, -0.70767307, -0.54346645, -0.69593674]], device='cuda:0')
Worst class: (+ rhs) -1.15230131149292
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.8518168926239
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32745060]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32745060]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 119] 
split level 2: [/input.3, 74] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 132] 
split level 5: [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009261608123779297
Time: prepare 0.0065    bound 0.2097    transfer 0.0004    finalize 0.0036    func 0.2204    
Accumulated time: func 0.2204    prepare 0.0071    bound 0.2097    transfer 0.0004    finalize 0.0036    
Current worst splitting domains lb-rhs (depth):
-0.02570 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0114    solve 0.2205    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0114    solve 0.2205    add 0.0009    
Current (lb-rhs): -0.025701403617858887
1 domains visited
Cumulative time: 0.2614481449127197

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 135] 
split level 2: [/input, 209] 
split level 3: [/input, 254] 
split level 4: [/input, 245] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0073    bound 0.0050    transfer 0.0001    finalize 0.0026    func 0.0152    
Accumulated time: func 0.2356    prepare 0.0150    bound 0.2148    transfer 0.0006    finalize 0.0062    
length of domains: 0
Time: pickout 0.0007    decision 0.0244    set_bounds 0.0125    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0482    set_bounds 0.0239    solve 0.2357    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.3146979808807373


Properties batch 1, size 1
Remaining timeout: 117.43844056129456
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.15230131]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.15230131]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 130] 
split level 4: [/input, 158] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.00924372673034668
Time: prepare 0.0067    bound 0.2072    transfer 0.0003    finalize 0.0029    func 0.2173    
Accumulated time: func 0.2173    prepare 0.0072    bound 0.2072    transfer 0.0003    finalize 0.0029    
Current worst splitting domains lb-rhs (depth):
-0.57777 (6), -0.35430 (6), -0.27247 (6), -0.21964 (6), -0.15888 (6), -0.15327 (6), -0.07910 (6), -0.04843 (6), -0.04579 (6), 
length of domains: 9
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0111    solve 0.2174    add 0.0009    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0111    solve 0.2174    add 0.0009    
Current (lb-rhs): -0.5777686834335327
9 domains visited
Cumulative time: 0.2576475143432617

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 154] [/input, 154] [/input, 154] [/input, 154] [/input, 154] [/input, 154] [/input, 154] [/input, 154] [/input, 154] 
split level 1: [/input, 135] [/input, 135] [/input, 135] [/input, 135] [/input, 135] [/input, 135] [/input, 135] [/input, 135] [/input, 209] 
split level 2: [/input, 209] [/input, 209] [/input, 254] [/input, 209] [/input, 209] [/input, 254] [/input.3, 74] [/input, 209] [/input, 254] 

all verified at 7th iter
pruning_in_iteration open status: True
ratio of positive domain = 72 / 72 = 1.0
pruning-in-iteration extra time: 0.0028429031372070312
Time: prepare 0.0086    bound 0.0710    transfer 0.0003    finalize 0.0036    func 0.0836    
Accumulated time: func 0.3009    prepare 0.0163    bound 0.2781    transfer 0.0007    finalize 0.0065    
length of domains: 0
Time: pickout 0.0007    decision 0.0285    set_bounds 0.0100    solve 0.0837    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0520    set_bounds 0.0211    solve 0.3011    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9 domains visited
Cumulative time: 0.3810389041900635


Properties batch 2, size 1
Remaining timeout: 116.96017789840698
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43940103]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43940103]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 74] 
split level 4: [/input, 154] 
split level 5: [/input.3, 19] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.007870674133300781
Time: prepare 0.0067    bound 0.1726    transfer 0.0003    finalize 0.0033    func 0.1831    
Accumulated time: func 0.1831    prepare 0.0072    bound 0.1726    transfer 0.0003    finalize 0.0033    
Current worst splitting domains lb-rhs (depth):
-0.09295 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0116    solve 0.1832    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0116    solve 0.1832    add 0.0008    
Current (lb-rhs): -0.09295421838760376
1 domains visited
Cumulative time: 0.22414422035217285

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 135] 
split level 2: [/input, 209] 
split level 3: [/input, 254] 
split level 4: [/input, 245] 
split level 5: [/input.3, 143] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0073    bound 0.0048    transfer 0.0001    finalize 0.0026    func 0.0148    
Accumulated time: func 0.1979    prepare 0.0150    bound 0.1774    transfer 0.0004    finalize 0.0059    
length of domains: 0
Time: pickout 0.0009    decision 0.0244    set_bounds 0.0125    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0013    decision 0.0481    set_bounds 0.0240    solve 0.1981    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.27716994285583496


Properties batch 3, size 1
Remaining timeout: 116.58534049987793
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42737645]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42737645]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 74] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008519172668457031
Time: prepare 0.0035    bound 0.1893    transfer 0.0003    finalize 0.0022    func 0.1956    
Accumulated time: func 0.1956    prepare 0.0040    bound 0.1893    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.18947 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0106    solve 0.1956    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0106    solve 0.1956    add 0.0007    
Current (lb-rhs): -0.18946677446365356
1 domains visited
Cumulative time: 0.23493218421936035

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 154] 
split level 2: [/input, 135] 
split level 3: [/input, 209] 
split level 4: [/input, 254] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.965896606445312e-05
Time: prepare 0.0071    bound 0.0044    transfer 0.0001    finalize 0.0023    func 0.0140    
Accumulated time: func 0.2096    prepare 0.0117    bound 0.1937    transfer 0.0004    finalize 0.0045    
length of domains: 0
Time: pickout 0.0006    decision 0.0242    set_bounds 0.0105    solve 0.0141    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0476    set_bounds 0.0211    solve 0.2098    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.28466296195983887


Properties batch 4, size 1
Remaining timeout: 116.200355052948
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60162038]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60162038]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 74] 
split level 4: [/input.3, 197] 
split level 5: [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009118080139160156
Time: prepare 0.0068    bound 0.2056    transfer 0.0003    finalize 0.0031    func 0.2161    
Accumulated time: func 0.2161    prepare 0.0074    bound 0.2056    transfer 0.0003    finalize 0.0031    
Current worst splitting domains lb-rhs (depth):
-0.21601 (6), 
length of domains: 1
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0118    solve 0.2162    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0118    solve 0.2162    add 0.0008    
Current (lb-rhs): -0.21601152420043945
1 domains visited
Cumulative time: 0.257110595703125

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 135] 
split level 2: [/input, 209] 
split level 3: [/input, 254] 
split level 4: [/input, 245] 
split level 5: [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0074    bound 0.0047    transfer 0.0001    finalize 0.0025    func 0.0148    
Accumulated time: func 0.2309    prepare 0.0153    bound 0.2103    transfer 0.0005    finalize 0.0056    
length of domains: 0
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0126    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0484    set_bounds 0.0244    solve 0.2310    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.31027674674987793


Properties batch 5, size 1
Remaining timeout: 115.7931022644043
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41086817]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41086817]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 119] 
split level 2: [/input, 154] 
split level 3: [/input.3, 74] 
split level 4: [/input.3, 216] 
split level 5: [/input.3, 155] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009682893753051758
Time: prepare 0.0066    bound 0.2127    transfer 0.0005    finalize 0.0037    func 0.2237    
Accumulated time: func 0.2237    prepare 0.0071    bound 0.2127    transfer 0.0005    finalize 0.0037    
Current worst splitting domains lb-rhs (depth):
-0.07534 (6), -0.01325 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0114    solve 0.2237    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0114    solve 0.2237    add 0.0008    
Current (lb-rhs): -0.07533848285675049
2 domains visited
Cumulative time: 0.26451587677001953

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] 
split level 1: [/input, 135] [/input, 135] 
split level 2: [/input, 209] [/input, 209] 
split level 3: [/input, 254] [/input, 254] 
split level 4: [/input, 245] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0074    bound 0.0050    transfer 0.0001    finalize 0.0024    func 0.0149    
Accumulated time: func 0.2386    prepare 0.0150    bound 0.2177    transfer 0.0006    finalize 0.0061    
length of domains: 0
Time: pickout 0.0007    decision 0.0222    set_bounds 0.0104    solve 0.0150    add 0.0002    
Accumulated time: pickout 0.0012    decision 0.0459    set_bounds 0.0218    solve 0.2387    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.31323790550231934


Properties batch 6, size 1
Remaining timeout: 115.37733888626099
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.70767307]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.70767307]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 74] 
split level 4: [/input.3, 31] 
split level 5: [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 64 = 0.96875
pruning-in-iteration extra time: 0.009300708770751953
Time: prepare 0.0065    bound 0.2080    transfer 0.0004    finalize 0.0035    func 0.2188    
Accumulated time: func 0.2188    prepare 0.0071    bound 0.2080    transfer 0.0004    finalize 0.0035    
Current worst splitting domains lb-rhs (depth):
-0.22045 (6), -0.14894 (6), 
length of domains: 2
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0111    solve 0.2189    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0111    solve 0.2189    add 0.0010    
Current (lb-rhs): -0.22044992446899414
2 domains visited
Cumulative time: 0.2592322826385498

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] 
split level 1: [/input, 135] [/input, 209] 
split level 2: [/input, 209] [/input, 135] 
split level 3: [/input, 254] [/input.3, 133] 
split level 4: [/input, 245] [/input.3, 132] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0072    bound 0.0045    transfer 0.0001    finalize 0.0025    func 0.0144    
Accumulated time: func 0.2332    prepare 0.0147    bound 0.2125    transfer 0.0005    finalize 0.0060    
length of domains: 0
Time: pickout 0.0007    decision 0.0216    set_bounds 0.0110    solve 0.0145    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0450    set_bounds 0.0220    solve 0.2333    add 0.0011    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.30733513832092285


Properties batch 7, size 1
Remaining timeout: 114.969886302948
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.54346645]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.54346645]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 30] 
split level 3: [/input.3, 162] 
split level 4: [/input.3, 119] 
split level 5: [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008367061614990234
Time: prepare 0.0036    bound 0.1829    transfer 0.0004    finalize 0.0022    func 0.1892    
Accumulated time: func 0.1892    prepare 0.0041    bound 0.1829    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.25848 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0110    solve 0.1893    add 0.0006    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0110    solve 0.1893    add 0.0006    
Current (lb-rhs): -0.25848066806793213
1 domains visited
Cumulative time: 0.22912263870239258

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 154] 
split level 2: [/input, 135] 
split level 3: [/input, 209] 
split level 4: [/input, 254] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0074    bound 0.0049    transfer 0.0001    finalize 0.0023    func 0.0147    
Accumulated time: func 0.2040    prepare 0.0120    bound 0.1877    transfer 0.0005    finalize 0.0046    
length of domains: 0
Time: pickout 0.0005    decision 0.0245    set_bounds 0.0109    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0479    set_bounds 0.0219    solve 0.2042    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.28022122383117676


Properties batch 8, size 1
Remaining timeout: 114.59288191795349
##### Instance 428 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.69593674]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.99455452e-01, -2.68630758e-02,  5.55022061e-03, -2.06570029e-02,
        -1.35786645e-02, -6.74076378e-04,  1.00447088e-02,  1.06149167e-02,
        -5.35368174e-03, -1.93512738e-02], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.69593674]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 14
Node /17 input 0: size torch.Size([256]) unstable 63
-----------------
# of unstable neurons: 77
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 26] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.008800506591796875
Time: prepare 0.0034    bound 0.1965    transfer 0.0003    finalize 0.0022    func 0.2026    
Accumulated time: func 0.2026    prepare 0.0040    bound 0.1965    transfer 0.0003    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.36217 (6), 
length of domains: 1
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.2027    add 0.0007    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.2027    add 0.0007    
Current (lb-rhs): -0.36217474937438965
1 domains visited
Cumulative time: 0.24234986305236816

BaB round 2
batch: 1
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] 
split level 1: [/input, 154] 
split level 2: [/input, 135] 
split level 3: [/input, 209] 
split level 4: [/input, 254] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0070    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0141    
Accumulated time: func 0.2167    prepare 0.0115    bound 0.2010    transfer 0.0004    finalize 0.0045    
length of domains: 0
Time: pickout 0.0005    decision 0.0239    set_bounds 0.0108    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0474    set_bounds 0.0217    solve 0.2169    add 0.0007    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.2920520305633545

Result: safe in 5.7976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 429, vnnlib ID: 429 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00745819,  0.67107624,  0.03823464,  0.01699638,  0.02092878,
          0.04140047,  0.01209082,  0.06509555,  0.10917355,  0.01381262]],
       device='cuda:0')
diversed PGD initialization time: 0.1361
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00820727, -0.02723128,  0.00808187, -0.01391563, -0.01336630,
           0.01796313,  0.00371163, -0.02974784,  1.01862466, -0.01607318],
         [ 0.00820727, -0.02723128,  0.00808187, -0.01391563, -0.01336630,
           0.01796313,  0.00371163, -0.02974784,  1.01862466, -0.01607318]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03543855, -0.03531314, -0.01331565, -0.01386498, -0.04519441,
          -0.03094290,  0.00251657, -1.04585600, -0.01115809]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1458 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2280 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 430, vnnlib ID: 430 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.28062370e-03, -8.51290673e-03,  4.03428078e-03,  9.80239391e-01,
         -2.31230371e-02,  3.06781679e-02, -4.55046073e-03, -1.89441144e-02,
          1.55642629e-05,  1.36813521e-03]], device='cuda:0')
diversed PGD initialization time: 0.1288
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03065687, -0.01749095, -0.03591810,  0.15612298,  0.00784440,
          -0.04001471, -0.01092189, -0.03448786,  1.01339459, -0.03604938],
         [-0.03065687, -0.01749095, -0.03591810,  0.15612298,  0.00784440,
          -0.04001471, -0.01092189, -0.03448786,  1.01339459, -0.03604938]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.18677986,  0.17361394,  0.19204108,  0.14827858,  0.19613770,
           0.16704488,  0.19061084, -0.85727161,  0.19217236]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1372 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2590 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 431, vnnlib ID: 431 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03091248,  0.51266211,  0.03055191, -0.07153122,  0.02549802,
          0.17067820,  0.01619948,  0.07623925,  0.27024266, -0.01966536]],
       device='cuda:0')
diversed PGD initialization time: 0.1248
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1338 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2196 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 432, vnnlib ID: 432 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.38882986e-03, -6.95774704e-03,  1.02131069e-03,  9.87024784e-01,
         -1.79468729e-02,  1.99787989e-02, -4.30069864e-03, -1.63203627e-02,
          4.49940562e-05,  1.87370926e-03]], device='cuda:0')
diversed PGD initialization time: 0.1250
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.04480344,  0.01156225,  0.02808647,  0.02041501, -0.02810842,
           0.44387993,  0.02736987,  0.01250864,  0.31151593,  0.11833559],
         [ 0.04480344,  0.01156225,  0.02808647,  0.02041501, -0.02810842,
           0.44387993,  0.02736987,  0.01250864,  0.31151593,  0.11833559]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02438843,  0.00885276, -0.00767146,  0.04852343, -0.42346492,
          -0.00695486,  0.00790637, -0.29110092, -0.09792058]]],
       device='cuda:0')
number of violation:  6
Attack finished in 0.1337 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2072 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 433, vnnlib ID: 433 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00216170,  0.00173002,  0.01203407,  0.00458355,  0.96183056,
          0.00368946,  0.00332025, -0.01935361,  0.00401161, -0.00612292]],
       device='cuda:0')
diversed PGD initialization time: 0.1274
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.67304575,  0.01166409, -0.00890356,  0.01781673,  0.34515163,
          -0.03727964, -0.09771127,  0.04842046, -0.00228759,  0.02301785],
         [ 0.67304575,  0.01166409, -0.00890356,  0.01781673,  0.34515163,
          -0.03727964, -0.09771127,  0.04842046, -0.00228759,  0.02301785]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.32789412,  0.33348754,  0.35405520,  0.32733491,  0.38243127,
           0.44286290,  0.29673117,  0.34743923,  0.32213378]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2099 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 434, vnnlib ID: 434 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02388169, -0.04132575,  0.49688095,  0.05314161, -0.01524424,
         -0.04026850, -0.01074141,  0.60438365, -0.01994840, -0.04433787]],
       device='cuda:0')
diversed PGD initialization time: 0.1370
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04727477, -0.12202440,  0.78549230,  0.23696378, -0.04398673,
          -0.09734241,  0.00488903,  0.34889656, -0.03954851, -0.05904363],
         [-0.04727477, -0.12202440,  0.78549230,  0.23696378, -0.04398673,
          -0.09734241,  0.00488903,  0.34889656, -0.03954851, -0.05904363]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39617133,  0.47092098, -0.43659574,  0.11193278,  0.39288330,
           0.44623896,  0.34400755,  0.38844508,  0.40794021]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1457 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2255 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 435, vnnlib ID: 435 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.85225800e-03, -1.88618675e-02,  1.01299882e+00, -8.02980363e-03,
          2.57817283e-03,  1.65562332e-03, -8.89473408e-03, -1.46808922e-02,
         -9.59850848e-04, -5.75079769e-03]], device='cuda:0')
diversed PGD initialization time: 0.1255
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03680771, -0.04559951,  0.37804079, -0.01568612, -0.01319786,
          -0.01600628, -0.01652718, -0.03528933,  0.78289640, -0.01964185],
         [-0.03680771, -0.04559951,  0.37804079, -0.01568612, -0.01319786,
          -0.01600628, -0.01652718, -0.03528933,  0.78289640, -0.01964185]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.41484851,  0.42364031,  0.39372692,  0.39123866,  0.39404708,
           0.39456797,  0.41333014, -0.40485561,  0.39768264]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2254 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 436, vnnlib ID: 436 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01279034,  0.04435840,  0.31830949,  0.01608334, -0.00936051,
          0.00955285, -0.00143676,  0.61844391, -0.00881720, -0.01742940]],
       device='cuda:0')
diversed PGD initialization time: 0.1243
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.08787878,  0.04975490,  0.96357799, -0.03130218, -0.04436334,
          -0.00169074, -0.00359858,  0.08203999, -0.07707877, -0.01722007],
         [-0.08787878,  0.04975490,  0.96357799, -0.03130218, -0.04436334,
          -0.00169074, -0.00359858,  0.08203999, -0.07707877, -0.01722007]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.16991878,  0.03228509, -0.88153797,  0.11334217,  0.12640333,
           0.08373073,  0.08563857,  0.15911876,  0.09926006]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1342 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2065 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 437, vnnlib ID: 437 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.014295518398284912, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00365796,  0.74051315,  0.02266361, -0.00074682,  0.01747144,
          0.08795400,  0.01803308,  0.06895434,  0.02103890,  0.01619700]],
       device='cuda:0')
diversed PGD initialization time: 0.1245
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.14753503e-04,  1.28709376e-02, -5.11974096e-04, -3.36589813e-02,
          -5.75174019e-03,  2.41906494e-02, -2.25321651e-02, -2.02626735e-02,
           1.03084421e+00, -2.67891884e-02],
         [-3.14753503e-04,  1.28709376e-02, -5.11974096e-04, -3.36589813e-02,
          -5.75174019e-03,  2.41906494e-02, -2.25321651e-02, -2.02626735e-02,
           1.03084421e+00, -2.67891884e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01318569,  0.01338291,  0.04652992,  0.01862268, -0.01131971,
           0.03540310,  0.03313361, -1.01797330,  0.03966013]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1347 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2682 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 438, vnnlib ID: 438 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00410427,  0.18167140,  0.52873373,  0.07947088,  0.00918429,
          0.04985735, -0.02365418,  0.01218781,  0.10675701,  0.02573770]],
       device='cuda:0')
diversed PGD initialization time: 0.1249
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02965996,  0.03255225, -0.03957528,  0.35482520, -0.01649663,
          -0.09847914, -0.03199288, -0.03135495,  0.85037136, -0.02054609],
         [-0.02965996,  0.03255225, -0.03957528,  0.35482520, -0.01649663,
          -0.09847914, -0.03199288, -0.03135495,  0.85037136, -0.02054609]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00991532, -0.07212752, -0.39440048, -0.02307865,  0.05890387,
          -0.00758240, -0.00822033, -0.88994664, -0.01902919]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1337 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2020 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 439, vnnlib ID: 439 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.05718207.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01429552212357521, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.45877624e-04,  9.52908993e-01,  6.96897507e-03, -1.04741752e-03,
         -3.40618566e-03,  4.25551832e-03, -3.12678516e-03,  8.27153027e-03,
          2.15447694e-03,  9.01459157e-03]], device='cuda:0')
diversed PGD initialization time: 0.1356
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00421115, -0.02348196,  0.01053855, -0.01066506, -0.01017065,
           0.01329315, -0.01259119, -0.03454310,  1.02748609, -0.01029383],
         [ 0.00421115, -0.02348196,  0.01053855, -0.01066506, -0.01017065,
           0.01329315, -0.01259119, -0.03454310,  1.02748609, -0.01029383]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.02769310, -0.03402051, -0.01281690, -0.01331131, -0.03677511,
          -0.01089077,  0.01106114, -1.05096805, -0.01318812]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1460 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2325 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 440, vnnlib ID: 440 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.08563232,  0.03499158,  0.20008323,  0.01352505,  0.00523739,
          0.06682197, -0.02081539,  0.05111788,  0.75732172, -0.05766785]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.08563232,  0.03499161,  0.20008324,  0.01352505,  0.00523739,
           0.06682198, -0.02081540,  0.05111790,  0.75732166, -0.05766788],
         [-0.08563232,  0.03499161,  0.20008324,  0.01352505,  0.00523739,
           0.06682198, -0.02081540,  0.05111790,  0.75732166, -0.05766788]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13675022,  0.01612629, -0.14896533,  0.03759285,  0.04588052,
          -0.01570408,  0.07193331, -0.70620376,  0.10878579]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0718 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 441, vnnlib ID: 441 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.78025526e-04, -3.71732563e-02,  9.53616500e-01,  1.32930502e-01,
          1.80491805e-03, -6.10682294e-02, -1.85455382e-03, -2.96359509e-02,
          1.96263194e-03, -6.67490065e-03]], device='cuda:0')
diversed PGD initialization time: 0.1243
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.93754621e-02, -2.68356502e-02,  2.16186047e-03, -6.06924295e-04,
          -7.37004727e-03, -8.08581710e-04, -9.82359052e-06, -2.02386826e-02,
           1.01389945e+00,  1.04485005e-02],
         [-1.93754621e-02, -2.68356502e-02,  2.16186047e-03, -6.06924295e-04,
          -7.37004727e-03, -8.08581710e-04, -9.82359052e-06, -2.02386826e-02,
           1.01389945e+00,  1.04485005e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02153732,  0.02899751,  0.00276878,  0.00953191,  0.00297044,
           0.00217168,  0.02240054, -1.01173759, -0.00828664]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1330 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1812 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 442, vnnlib ID: 442 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02520037,  0.40367419, -0.03800893, -0.07231852, -0.01238607,
         -0.01277587, -0.02803990, -0.02146201,  0.80348694, -0.01611158]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02520038,  0.40367419, -0.03800894, -0.07231849, -0.01238607,
          -0.01277587, -0.02803987, -0.02146199,  0.80348688, -0.01611159],
         [-0.02520038,  0.40367419, -0.03800894, -0.07231849, -0.01238607,
          -0.01277587, -0.02803987, -0.02146199,  0.80348688, -0.01611159]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42887455,  0.44168311,  0.47599268,  0.41606027,  0.41645005,
           0.43171406,  0.42513618, -0.39981270,  0.41978577]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0603 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 443, vnnlib ID: 443 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99586105, -0.00513842,  0.01350217, -0.01118281, -0.00568543,
          0.01213504, -0.00251296, -0.02213603,  0.00381929, -0.00639741]],
       device='cuda:0')
diversed PGD initialization time: 0.1241
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1328 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 444, vnnlib ID: 444 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00437127,  0.00931569,  0.02839656,  0.01071299,  0.21537322,
          0.01471471,  0.00562214, -0.00398399,  0.01780154,  0.69898850]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00437127,  0.00931568,  0.02839656,  0.01071298,  0.21537313,
           0.01471471,  0.00562214, -0.00398399,  0.01780153,  0.69898856],
         [ 0.00437127,  0.00931568,  0.02839656,  0.01071298,  0.21537313,
           0.01471471,  0.00562214, -0.00398399,  0.01780153,  0.69898856]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.21100186,  0.20605744,  0.18697657,  0.20466015,  0.20065841,
           0.20975100,  0.21935712,  0.19757161, -0.48361543]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 445, vnnlib ID: 445 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01539351, 0.66358864, 0.04922056, 0.02879936, 0.00844902, 0.03649498,
         0.01546653, 0.06001981, 0.03615530, 0.05123039]], device='cuda:0')
diversed PGD initialization time: 0.1297
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03696698,  0.63376743, -0.12932132, -0.09969264,  0.67572433,
          -0.05368092, -0.04052423,  0.10655448, -0.04883517, -0.01821809],
         [-0.03696698,  0.63376743, -0.12932132, -0.09969264,  0.67572433,
          -0.05368092, -0.04052423,  0.10655448, -0.04883517, -0.01821809]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.67073441,  0.76308876,  0.73346007, -0.04195690,  0.68744832,
           0.67429167,  0.52721298,  0.68260258,  0.65198553]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1391 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2063 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 446, vnnlib ID: 446 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04814496, -0.00425193,  0.01323268, -0.06502938,  0.39276946,
          0.01044244, -0.03043319, -0.01864962,  0.64349103, -0.00390845]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.04814497, -0.00425193,  0.01323268, -0.06502935,  0.39276955,
           0.01044244, -0.03043321, -0.01864962,  0.64349103, -0.00390853],
         [ 0.04814497, -0.00425193,  0.01323268, -0.06502935,  0.39276955,
           0.01044244, -0.03043321, -0.01864962,  0.64349103, -0.00390853]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.34462458,  0.39702147,  0.37953687,  0.45779890,  0.38232711,
           0.42320275,  0.41141915, -0.25072148,  0.39667809]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0677 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 447, vnnlib ID: 447 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00318428, -0.01726185,  0.00740193, -0.05704316, -0.02974275,
          0.03497010, -0.00726892, -0.04267812,  0.44746664,  0.67716449]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.50687040e-02, -2.23816484e-02,  1.76942199e-02, -2.01640725e-02,
          -2.45834328e-02, -3.03879380e-04,  1.00643188e-03,  2.30610669e-02,
           1.03557289e+00, -1.48237497e-02],
         [-2.50687040e-02, -2.23816484e-02,  1.76942199e-02, -2.01640725e-02,
          -2.45834328e-02, -3.03879380e-04,  1.00643188e-03,  2.30610669e-02,
           1.03557289e+00, -1.48237497e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01024495,  0.00755790, -0.03251797,  0.00534032,  0.00975968,
          -0.01451987, -0.01583018, -0.03788482, -1.05039668]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1349 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1819 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 448, vnnlib ID: 448 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01571009, -0.00332773,  0.01320222, -0.00851010,  0.00154799,
          0.57517380,  0.44362700, -0.00820401,  0.01976489, -0.01060354]],
       device='cuda:0')
diversed PGD initialization time: 0.1252
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.02653825, -0.00459412, -0.00265060,  0.01112898, -0.00361291,
          -0.00551314,  0.99802923, -0.00648357,  0.00683251,  0.00647667],
         [ 0.02653825, -0.00459412, -0.00265060,  0.01112898, -0.00361291,
          -0.00551314,  0.99802923, -0.00648357,  0.00683251,  0.00647667]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.20513882e-02, -9.19021666e-04, -2.86253542e-03, -1.66421160e-02,
          -1.90023333e-03, -1.00354242e+00,  9.70430672e-04, -1.23456493e-02,
          -1.19898096e-02]]], device='cuda:0')
number of violation:  8
Attack finished in 0.1351 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2515 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 449, vnnlib ID: 449 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.82174650e-03, -7.56928325e-03,  1.91196799e-04, -1.34892762e-02,
          2.84415819e-02,  2.61519700e-02,  7.94636831e-03, -2.16287971e-02,
          1.27779841e-02,  9.79107738e-01]], device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2007 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 450, vnnlib ID: 450 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00279689, -0.00656658,  0.00248441, -0.00611931, -0.00232674,
         -0.00471549, -0.00491727, -0.00972518,  0.00145277, -0.00545280]],
       device='cuda:0')
diversed PGD initialization time: 0.1375
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.74258608e-01, -5.47289103e-02,  1.83026642e-02, -3.30350697e-02,
          -2.26289034e-03, -1.81199312e-02, -1.12929791e-02,  2.73317099e-04,
           7.16015756e-01, -1.35463625e-02],
         [ 3.74258608e-01, -5.47289103e-02,  1.83026642e-02, -3.30350697e-02,
          -2.26289034e-03, -1.81199312e-02, -1.12929791e-02,  2.73317099e-04,
           7.16015756e-01, -1.35463625e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42898750,  0.35595596,  0.40729368,  0.37652150,  0.39237854,
           0.38555157,  0.37398529, -0.34175715,  0.38780499]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1468 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2635 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 451, vnnlib ID: 451 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.02123628,  0.00404960,  0.00654681,  0.00871821, -0.00173568,
          0.00419930,  0.94690895,  0.00387920,  0.00697846,  0.01183862]],
       device='cuda:0')
diversed PGD initialization time: 0.1341
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.02791566, -0.02897380,  0.03422339, -0.01362658,  0.00813000,
          -0.01942120,  0.01020253, -0.01671232,  0.94922000,  0.00995098],
         [ 0.02791566, -0.02897380,  0.03422339, -0.01362658,  0.00813000,
          -0.01942120,  0.01020253, -0.01671232,  0.94922000,  0.00995098]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.77131332e-02,  3.91763300e-02, -2.40208656e-02,  2.38291025e-02,
           2.07252428e-03,  2.96237320e-02,  2.69148499e-02, -9.39017475e-01,
           2.51546502e-04]]], device='cuda:0')
number of violation:  3
Attack finished in 0.1430 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2156 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 452, vnnlib ID: 452 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01285303, -0.02499276, -0.02957571, -0.08571748, -0.04678516,
         -0.00093200, -0.03107550, -0.06846766,  0.66396099,  0.61374146]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01285305, -0.02499277, -0.02957574, -0.08571750, -0.04678515,
          -0.00093202, -0.03107550, -0.06846769,  0.66396093,  0.61374158],
         [-0.01285305, -0.02499277, -0.02957574, -0.08571750, -0.04678515,
          -0.00093202, -0.03107550, -0.06846769,  0.66396093,  0.61374158]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.62659460,  0.63873434,  0.64331734,  0.69945908,  0.66052675,
           0.61467361,  0.64481705,  0.68220925, -0.05021936]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0853 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 453, vnnlib ID: 453 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.72502053e-01,  1.74045563e-05, -1.39359236e-02, -2.90444642e-02,
          3.28278914e-03,  6.46246746e-02, -1.50549486e-02,  2.71876156e-03,
         -2.10883468e-03, -3.12378258e-03]], device='cuda:0')
diversed PGD initialization time: 0.1251
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.15160011, -0.03947271, -0.03563589, -0.04527667,  0.00714947,
           0.13383496, -0.05102885, -0.04178050,  0.97271746, -0.07292102],
         [ 0.15160011, -0.03947271, -0.03563589, -0.04527667,  0.00714947,
           0.13383496, -0.05102885, -0.04178050,  0.97271746, -0.07292102]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19107282,  0.18723600,  0.19687678,  0.14445063,  0.01776515,
           0.20262896,  0.19338061, -0.82111734,  0.22452113]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1347 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2040 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 454, vnnlib ID: 454 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.63751566e-04,  9.56808090e-01,  5.91972470e-03, -2.38269567e-03,
         -4.05725464e-03,  6.34916127e-04, -1.95263326e-03,  6.82277977e-03,
          2.24826485e-03,  6.56042993e-03]], device='cuda:0')
diversed PGD initialization time: 0.1415
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03741619,  0.21615502,  0.00242542, -0.03539038,  0.03878374,
           0.01505641,  0.03495589, -0.02557059,  0.66863024,  0.05836239],
         [-0.03741619,  0.21615502,  0.00242542, -0.03539038,  0.03878374,
           0.01505641,  0.03495589, -0.02557059,  0.66863024,  0.05836239]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25357121,  0.21372961,  0.25154540,  0.17737129,  0.20109862,
           0.18119913,  0.24172561, -0.45247522,  0.15779263]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1512 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2143 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 455, vnnlib ID: 455 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.89970839e-03, -8.28737766e-03, -2.99382210e-03, -1.10780299e-02,
         -2.26916410e-02,  1.03005052e+00,  4.63593751e-04, -2.78929621e-02,
         -9.27454978e-03, -2.03172863e-03]], device='cuda:0')
diversed PGD initialization time: 0.1288
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03249228, -0.04355781, -0.01669359, -0.01857239, -0.01670753,
           0.22264284, -0.04519134, -0.03125907,  0.98001808, -0.02828038],
         [-0.03249228, -0.04355781, -0.01669359, -0.01857239, -0.01670753,
           0.22264284, -0.04519134, -0.03125907,  0.98001808, -0.02828038]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25513512,  0.26620066,  0.23933643,  0.24121523,  0.23935036,
           0.26783419,  0.25390190, -0.75737524,  0.25092322]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1371 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2261 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 456, vnnlib ID: 456 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.24850497e-03,  3.52697819e-03,  1.09462291e-02,  3.75297666e-03,
         -6.89165667e-03,  1.13660470e-02,  2.71514058e-04, -1.02286935e-02,
          1.14292800e-02,  9.78494167e-01]], device='cuda:0')
diversed PGD initialization time: 0.1263
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1354 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2236 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 457, vnnlib ID: 457 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03559358, -0.01924222,  0.00961867, -0.02454872,  0.00799869,
          0.07003430,  0.01439772,  0.40016490,  0.52333009,  0.00736836]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03559354, -0.01924220,  0.00961868, -0.02454869,  0.00799870,
           0.07003425,  0.01439772,  0.40016490,  0.52332997,  0.00736847],
         [-0.03559354, -0.01924220,  0.00961868, -0.02454869,  0.00799870,
           0.07003425,  0.01439772,  0.40016490,  0.52332997,  0.00736847]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.43575844,  0.41940710,  0.39054620,  0.42471361,  0.39216620,
           0.33013064,  0.38576719, -0.12316507,  0.39279643]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 458, vnnlib ID: 458 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00430182, -0.03073878,  0.02628028,  0.41229960, -0.02166929,
          0.09099336,  0.00850296, -0.06659095,  0.08356966,  0.48887616]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00430182, -0.03073877,  0.02628030,  0.41229963, -0.02166927,
           0.09099339,  0.00850296, -0.06659095,  0.08356966,  0.48887610],
         [-0.00430182, -0.03073877,  0.02628030,  0.41229963, -0.02166927,
           0.09099339,  0.00850296, -0.06659095,  0.08356966,  0.48887610]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.41660145,  0.44303840,  0.38601935,  0.43396890,  0.32130623,
           0.40379667,  0.47889060,  0.32872999, -0.07657647]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.2046 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 459, vnnlib ID: 459 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02432496, -0.03814405, -0.01753755, -0.04281119,  0.45083520,
          0.01890561,  0.01139912, -0.02008207,  0.54291904,  0.09306414]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02432494, -0.03814404, -0.01753752, -0.04281117,  0.45083532,
           0.01890562,  0.01139912, -0.02008204,  0.54291892,  0.09306407],
         [-0.02432494, -0.03814404, -0.01753752, -0.04281117,  0.45083532,
           0.01890562,  0.01139912, -0.02008204,  0.54291892,  0.09306407]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47516027,  0.48897934,  0.46837282,  0.49364650,  0.43192971,
           0.43943620,  0.47091734, -0.09208360,  0.35777125]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0692 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 460, vnnlib ID: 460 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00771822, -0.00829570, -0.00196931, -0.01441807,  0.00608006,
          0.03526213,  0.00906745, -0.03352819,  0.03765263,  0.97879517]],
       device='cuda:0')
diversed PGD initialization time: 0.1293
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1378 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1966 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 461, vnnlib ID: 461 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.08042476,  0.01966801,  0.05556282,  0.02358128, -0.09235363,
          0.15279919,  0.71197915,  0.00100724,  0.13633691,  0.07501877]],
       device='cuda:0')
diversed PGD initialization time: 0.1279
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02000243,  0.00476728,  0.02948414, -0.05078627, -0.01071979,
           0.91992426,  0.05550186, -0.03091110,  0.03818319,  0.02540710],
         [-0.02000243,  0.00476728,  0.02948414, -0.05078627, -0.01071979,
           0.91992426,  0.05550186, -0.03091110,  0.03818319,  0.02540710]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.07550429,  0.05073458,  0.02601772,  0.10628813,  0.06622165,
          -0.86442238,  0.08641296,  0.01731867,  0.03009476]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1366 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2045 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 462, vnnlib ID: 462 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
         -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
          4.10143286e-03,  6.48387522e-03]], device='cuda:0')
diversed PGD initialization time: 0.1251
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01361400, -0.01507237,  0.01136605,  0.00148907, -0.00373826,
           0.02674856,  0.62646830,  0.00852479,  0.33340183,  0.02554487],
         [-0.01361400, -0.01507237,  0.01136605,  0.00148907, -0.00373826,
           0.02674856,  0.62646830,  0.00852479,  0.33340183,  0.02554487]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.64008230, 0.64154065, 0.61510223, 0.62497926, 0.63020658,
          0.59971976, 0.61794353, 0.29306647, 0.60092342]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4181 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
         -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
          4.10143286e-03,  6.48387522e-03]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 47, 1, 24] with unstable size 46 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [46]; unstable size 46; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.30339694, -0.96377039, -1.19612741, -1.08897567, -2.04080391,
         -1.28491700, -1.55015469, -1.66913915, -1.35351396]], device='cuda:0') None
best_l after optimization: -11.259468078613281
alpha/beta optimization time: 0.5370304584503174
initial alpha-crown bounds: tensor([[-1.19954896, -0.78904027, -1.03724003, -0.94553113, -1.97982132,
         -1.04737663, -1.44163072, -1.59454894, -1.22473037]], device='cuda:0')
Worst class: (+ rhs) -1.9798213243484497
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 118.8749041557312
##### Instance 462 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.19954896]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.19954896]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 85] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 48] 
split level 4: [/input.3, 151] 
split level 5: [/input.3, 116] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 64 = 0.84375
pruning-in-iteration extra time: 0.009183168411254883
Time: prepare 0.0036    bound 0.1997    transfer 0.0004    finalize 0.0024    func 0.2062    
Accumulated time: func 0.2062    prepare 0.0041    bound 0.1997    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.57092 (6), -0.26347 (6), -0.18365 (6), -0.18337 (6), -0.17944 (6), -0.13489 (6), -0.07538 (6), -0.07422 (6), -0.06225 (6), -0.05600 (6), 
length of domains: 10
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0110    solve 0.2063    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0110    solve 0.2063    add 0.0011    
Current (lb-rhs): -0.5709210634231567
10 domains visited
Cumulative time: 0.2457418441772461

BaB round 2
batch: 10
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input, 233] [/input.3, 244] [/input, 178] [/input, 233] [/input.3, 244] [/input, 233] [/input, 178] [/input, 233] [/input, 233] 
split level 1: [/input, 228] [/input.3, 30] [/input, 228] [/input, 233] [/input, 178] [/input, 149] [/input.3, 30] [/input, 233] [/input, 178] [/input.3, 30] 
split level 2: [/input, 149] [/input, 178] [/input, 149] [/input.3, 30] [/input.3, 30] [/input, 178] [/input, 178] [/input.3, 30] [/input.3, 30] [/input.3, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 64 / 80 = 0.8
pruning-in-iteration extra time: 0.01047062873840332
Time: prepare 0.0090    bound 0.2257    transfer 0.0004    finalize 0.0046    func 0.2398    
Accumulated time: func 0.4459    prepare 0.0135    bound 0.4254    transfer 0.0008    finalize 0.0070    
Current worst splitting domains lb-rhs (depth):
-0.19085 (9), -0.17860 (9), -0.17683 (9), -0.16727 (9), -0.12348 (9), -0.12118 (9), -0.11891 (9), -0.11635 (9), -0.11004 (9), -0.09194 (9), -0.08931 (9), -0.08508 (9), -0.06945 (9), -0.04638 (9), -0.02939 (9), -0.02589 (9), 
length of domains: 16
Time: pickout 0.0005    decision 0.0269    set_bounds 0.0115    solve 0.2400    add 0.0013    
Accumulated time: pickout 0.0010    decision 0.0498    set_bounds 0.0225    solve 0.4463    add 0.0024    
Current (lb-rhs): -0.19084563851356506
26 domains visited
Cumulative time: 0.5266194343566895

BaB round 3
batch: 16
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 30] [/input.3, 30] [/input.3, 30] [/input, 178] [/input, 198] [/input.3, 175] [/input.3, 30] [/input.3, 30] [/input, 178] [/input.3, 30] 
split level 1: [/input.3, 175] [/input, 138] [/input.3, 175] [/input.3, 10] [/input.3, 30] [/input.3, 232] [/input, 178] [/input, 233] [/input.3, 10] [/input.3, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.008776426315307617
Time: prepare 0.0082    bound 0.2013    transfer 0.0003    finalize 0.0035    func 0.2134    
Accumulated time: func 0.6593    prepare 0.0222    bound 0.6268    transfer 0.0011    finalize 0.0105    
Current worst splitting domains lb-rhs (depth):
-0.10923 (11), -0.09303 (11), -0.09294 (11), -0.08235 (11), -0.07866 (11), -0.07571 (11), -0.05030 (11), -0.03925 (11), -0.01802 (11), -0.00469 (11), -0.00414 (11), 
length of domains: 11
Time: pickout 0.0007    decision 0.0308    set_bounds 0.0113    solve 0.2135    add 0.0012    
Accumulated time: pickout 0.0017    decision 0.0805    set_bounds 0.0338    solve 0.6598    add 0.0036    
Current (lb-rhs): -0.10922560095787048
37 domains visited
Cumulative time: 0.7846245765686035

BaB round 4
batch: 11
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 10] [/input.3, 150] [/input, 138] [/input, 138] [/input.3, 30] [/input.3, 150] [/input, 138] [/input.3, 10] [/input, 138] [/input, 138] 
split level 1: [/input.3, 232] [/input, 233] [/input, 174] [/input, 228] [/input.3, 10] [/input.3, 10] [/input, 34] [/input, 198] [/input, 34] [/input, 34] 
split level 2: [/input, 178] [/input.3, 10] [/input, 62] [/input, 150] [/input, 178] [/input.3, 232] [/input, 198] [/input.3, 232] [/input, 198] [/input, 198] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 88 = 0.9886363636363636
pruning-in-iteration extra time: 0.010643959045410156
Time: prepare 0.0101    bound 0.2240    transfer 0.0003    finalize 0.0045    func 0.2390    
Accumulated time: func 0.8984    prepare 0.0328    bound 0.8508    transfer 0.0014    finalize 0.0150    
Current worst splitting domains lb-rhs (depth):
-0.04230 (14), 
length of domains: 1
Time: pickout 0.0008    decision 0.0281    set_bounds 0.0123    solve 0.2391    add 0.0008    
Accumulated time: pickout 0.0024    decision 0.1086    set_bounds 0.0461    solve 0.8988    add 0.0043    
Current (lb-rhs): -0.042300403118133545
38 domains visited
Cumulative time: 1.066314697265625

BaB round 5
batch: 1
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] 
split level 1: [/input, 178] 
split level 2: [/input.3, 31] 
split level 3: [/input, 62] 
split level 4: [/input, 174] 
split level 5: [/input.3, 132] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.033348083496094e-05
Time: prepare 0.0072    bound 0.0047    transfer 0.0001    finalize 0.0026    func 0.0147    
Accumulated time: func 0.9130    prepare 0.0405    bound 0.8554    transfer 0.0015    finalize 0.0176    
length of domains: 0
Time: pickout 0.0006    decision 0.0234    set_bounds 0.0123    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.1320    set_bounds 0.0584    solve 0.9136    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
38 domains visited
Cumulative time: 1.117790937423706


Properties batch 1, size 1
Remaining timeout: 117.65911173820496
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.78904027]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.78904027]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 48] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 85] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.00785207748413086
Time: prepare 0.0036    bound 0.1638    transfer 0.0002    finalize 0.0018    func 0.1696    
Accumulated time: func 0.1696    prepare 0.0042    bound 0.1638    transfer 0.0002    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.50198 (6), -0.13825 (6), -0.10449 (6), 
length of domains: 3
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.1697    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.1697    add 0.0008    
Current (lb-rhs): -0.5019785761833191
3 domains visited
Cumulative time: 0.2096555233001709

BaB round 2
batch: 3
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input.3, 244] [/input, 149] 
split level 1: [/input, 228] [/input, 228] [/input, 178] 
split level 2: [/input, 149] [/input, 149] [/input.3, 150] 
split level 3: [/input, 178] [/input, 178] [/input.3, 30] 
split level 4: [/input, 174] [/input, 245] [/input, 233] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 96 = 0.9791666666666666
pruning-in-iteration extra time: 0.00934743881225586
Time: prepare 0.0117    bound 0.2089    transfer 0.0004    finalize 0.0057    func 0.2268    
Accumulated time: func 0.3964    prepare 0.0164    bound 0.3727    transfer 0.0006    finalize 0.0074    
Current worst splitting domains lb-rhs (depth):
-0.01754 (11), -0.00895 (11), 
length of domains: 2
Time: pickout 0.0006    decision 0.0245    set_bounds 0.0168    solve 0.2269    add 0.0008    
Accumulated time: pickout 0.0010    decision 0.0477    set_bounds 0.0279    solve 0.3965    add 0.0016    
Current (lb-rhs): -0.01754099130630493
5 domains visited
Cumulative time: 0.4798877239227295

BaB round 3
batch: 2
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 93] 
split level 1: [/input, 93] [/input, 34] 
split level 2: [/input, 34] [/input, 198] 
split level 3: [/input, 198] [/input, 150] 
split level 4: [/input, 245] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.463859558105469e-05
Time: prepare 0.0074    bound 0.0048    transfer 0.0001    finalize 0.0025    func 0.0149    
Accumulated time: func 0.4113    prepare 0.0243    bound 0.3775    transfer 0.0007    finalize 0.0099    
length of domains: 0
Time: pickout 0.0006    decision 0.0218    set_bounds 0.0106    solve 0.0149    add 0.0002    
Accumulated time: pickout 0.0017    decision 0.0695    set_bounds 0.0385    solve 0.4115    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 0.5282015800476074


Properties batch 2, size 1
Remaining timeout: 117.03434491157532
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.03724003]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.03724003]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 175] 
split level 5: [/input.3, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.008950233459472656
Time: prepare 0.0035    bound 0.1968    transfer 0.0004    finalize 0.0025    func 0.2034    
Accumulated time: func 0.2034    prepare 0.0041    bound 0.1968    transfer 0.0004    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.69632 (6), -0.31051 (6), -0.21273 (6), -0.12942 (6), -0.12523 (6), -0.11694 (6), -0.10921 (6), -0.06002 (6), -0.01917 (6), 
length of domains: 9
Time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.2035    add 0.0012    
Accumulated time: pickout 0.0005    decision 0.0233    set_bounds 0.0108    solve 0.2035    add 0.0012    
Current (lb-rhs): -0.6963217258453369
9 domains visited
Cumulative time: 0.2437145709991455

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input.3, 244] [/input.3, 244] [/input.3, 244] [/input, 228] [/input.3, 244] [/input.3, 85] [/input, 228] [/input, 228] 
split level 1: [/input, 228] [/input, 178] [/input, 228] [/input.3, 150] [/input.3, 244] [/input, 228] [/input, 198] [/input, 150] [/input, 93] 
split level 2: [/input, 149] [/input.3, 232] [/input, 149] [/input, 178] [/input, 149] [/input, 149] [/input.3, 150] [/input, 198] [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 72 = 0.8472222222222222
pruning-in-iteration extra time: 0.009536981582641602
Time: prepare 0.0085    bound 0.2110    transfer 0.0003    finalize 0.0040    func 0.2238    
Accumulated time: func 0.4272    prepare 0.0130    bound 0.4077    transfer 0.0007    finalize 0.0065    
Current worst splitting domains lb-rhs (depth):
-0.32418 (9), -0.31723 (9), -0.30683 (9), -0.30128 (9), -0.22745 (9), -0.22652 (9), -0.16702 (9), -0.15941 (9), -0.09194 (9), -0.04320 (9), -0.01041 (9), 
length of domains: 11
Time: pickout 0.0007    decision 0.0268    set_bounds 0.0104    solve 0.2238    add 0.0016    
Accumulated time: pickout 0.0012    decision 0.0501    set_bounds 0.0212    solve 0.4273    add 0.0027    
Current (lb-rhs): -0.3241816759109497
20 domains visited
Cumulative time: 0.507685661315918

BaB round 3
batch: 11
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 232] [/input.3, 85] [/input, 178] [/input.3, 232] [/input.3, 85] [/input, 178] [/input.3, 150] [/input.3, 150] [/input, 178] [/input.3, 150] 
split level 1: [/input.3, 85] [/input.3, 232] [/input.3, 85] [/input.3, 85] [/input.3, 150] [/input.3, 232] [/input.3, 232] [/input.3, 232] [/input.3, 85] [/input, 178] 
split level 2: [/input.3, 150] [/input.3, 150] [/input.3, 232] [/input.3, 150] [/input, 174] [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input.3, 232] [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 88 = 0.875
pruning-in-iteration extra time: 0.009652376174926758
Time: prepare 0.0102    bound 0.2139    transfer 0.0003    finalize 0.0042    func 0.2286    
Accumulated time: func 0.6558    prepare 0.0237    bound 0.6216    transfer 0.0010    finalize 0.0106    
Current worst splitting domains lb-rhs (depth):
-0.16261 (12), -0.15816 (12), -0.15480 (12), -0.11819 (12), -0.10922 (12), -0.08652 (12), -0.08433 (12), -0.08143 (12), -0.05595 (12), -0.02778 (12), -0.00400 (12), 
length of domains: 11
Time: pickout 0.0007    decision 0.0291    set_bounds 0.0126    solve 0.2287    add 0.0009    
Accumulated time: pickout 0.0019    decision 0.0792    set_bounds 0.0338    solve 0.6560    add 0.0036    
Current (lb-rhs): -0.16261088848114014
31 domains visited
Cumulative time: 0.7802107334136963

BaB round 4
batch: 11
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 93] [/input, 93] [/input, 93] [/input, 34] [/input, 138] [/input, 34] [/input, 34] [/input, 138] [/input, 178] 
split level 1: [/input, 93] [/input, 34] [/input, 178] [/input, 178] [/input, 198] [/input, 93] [/input, 198] [/input.3, 150] [/input, 178] [/input, 198] 
split level 2: [/input, 178] [/input, 174] [/input, 62] [/input, 62] [/input.3, 150] [/input, 178] [/input.3, 150] [/input, 198] [/input.3, 103] [/input.3, 103] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 88 = 0.9886363636363636
pruning-in-iteration extra time: 0.009780645370483398
Time: prepare 0.0102    bound 0.2157    transfer 0.0004    finalize 0.0048    func 0.2311    
Accumulated time: func 0.8869    prepare 0.0343    bound 0.8373    transfer 0.0014    finalize 0.0155    
Current worst splitting domains lb-rhs (depth):
-0.03020 (15), 
length of domains: 1
Time: pickout 0.0007    decision 0.0289    set_bounds 0.0126    solve 0.2312    add 0.0008    
Accumulated time: pickout 0.0026    decision 0.1081    set_bounds 0.0464    solve 0.8872    add 0.0044    
Current (lb-rhs): -0.03019791841506958
32 domains visited
Cumulative time: 1.0551888942718506

BaB round 5
batch: 1
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 34] 
split level 1: [/input, 62] 
split level 2: [/input, 174] 
split level 3: [/input, 150] 
split level 4: [/input, 198] 
split level 5: [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0074    bound 0.0046    transfer 0.0001    finalize 0.0023    func 0.0145    
Accumulated time: func 0.9014    prepare 0.0422    bound 0.8419    transfer 0.0015    finalize 0.0178    
length of domains: 0
Time: pickout 0.0007    decision 0.0240    set_bounds 0.0110    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0032    decision 0.1321    set_bounds 0.0574    solve 0.9019    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
32 domains visited
Cumulative time: 1.1058263778686523


Properties batch 3, size 1
Remaining timeout: 115.83029890060425
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.94553113]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.94553113]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 144] 
split level 3: [/input.3, 220] 
split level 4: [/input.3, 48] 
split level 5: [/input.3, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009197235107421875
Time: prepare 0.0035    bound 0.1989    transfer 0.0004    finalize 0.0025    func 0.2055    
Accumulated time: func 0.2055    prepare 0.0040    bound 0.1989    transfer 0.0004    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.55646 (6), -0.26390 (6), -0.24868 (6), -0.23701 (6), -0.19059 (6), -0.04116 (6), -0.00738 (6), 
length of domains: 7
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.2056    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.2056    add 0.0011    
Current (lb-rhs): -0.5564637184143066
7 domains visited
Cumulative time: 0.24536800384521484

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input.3, 85] 
split level 1: [/input, 228] [/input, 178] [/input, 228] [/input, 178] [/input.3, 143] [/input.3, 143] [/input, 198] 
split level 2: [/input, 149] [/input, 198] [/input, 149] [/input, 198] [/input, 198] [/input, 198] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 48 / 56 = 0.8571428571428572
pruning-in-iteration extra time: 0.00922393798828125
Time: prepare 0.0065    bound 0.2062    transfer 0.0003    finalize 0.0034    func 0.2166    
Accumulated time: func 0.4221    prepare 0.0110    bound 0.4051    transfer 0.0007    finalize 0.0059    
Current worst splitting domains lb-rhs (depth):
-0.20448 (9), -0.19262 (9), -0.07498 (9), -0.05281 (9), -0.03183 (9), -0.02667 (9), -0.02360 (9), -0.01917 (9), 
length of domains: 8
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0086    solve 0.2166    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0485    set_bounds 0.0195    solve 0.4223    add 0.0020    
Current (lb-rhs): -0.20448464155197144
15 domains visited
Cumulative time: 0.498171329498291

BaB round 3
batch: 8
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 143] [/input.3, 143] [/input.3, 236] [/input.3, 143] [/input, 178] [/input.3, 143] [/input.3, 143] [/input, 178] 
split level 1: [/input, 178] [/input, 174] [/input.3, 217] [/input, 150] [/input.3, 143] [/input, 178] [/input, 178] [/input, 34] 
split level 2: [/input, 62] [/input, 150] [/input, 150] [/input, 245] [/input.3, 217] [/input, 62] [/input, 62] [/input, 62] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 64 = 0.984375
pruning-in-iteration extra time: 0.009252309799194336
Time: prepare 0.0074    bound 0.2069    transfer 0.0004    finalize 0.0036    func 0.2183    
Accumulated time: func 0.6404    prepare 0.0188    bound 0.6120    transfer 0.0011    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-0.01564 (12), 
length of domains: 1
Time: pickout 0.0007    decision 0.0269    set_bounds 0.0097    solve 0.2184    add 0.0008    
Accumulated time: pickout 0.0017    decision 0.0755    set_bounds 0.0292    solve 0.6406    add 0.0029    
Current (lb-rhs): -0.015638351440429688
16 domains visited
Cumulative time: 0.755202054977417

BaB round 4
batch: 1
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 138] 
split level 1: [/input, 93] 
split level 2: [/input, 34] 
split level 3: [/input, 174] 
split level 4: [/input, 198] 
split level 5: [/input.3, 132] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0072    bound 0.0048    transfer 0.0001    finalize 0.0026    func 0.0147    
Accumulated time: func 0.6551    prepare 0.0266    bound 0.6168    transfer 0.0012    finalize 0.0121    
length of domains: 0
Time: pickout 0.0007    decision 0.0243    set_bounds 0.0124    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0024    decision 0.0997    set_bounds 0.0416    solve 0.6554    add 0.0029    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16 domains visited
Cumulative time: 0.8076910972595215


Properties batch 4, size 1
Remaining timeout: 114.92509174346924
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.97982132]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.97982132]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 18] 
split level 2: [/input.3, 123] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 144] 
split level 5: [/input.3, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 31 / 64 = 0.484375
pruning-in-iteration extra time: 0.0073282718658447266
Time: prepare 0.0036    bound 0.1910    transfer 0.0004    finalize 0.0024    func 0.1975    
Accumulated time: func 0.1975    prepare 0.0041    bound 0.1910    transfer 0.0004    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-1.26959 (6), -0.91808 (6), -0.78337 (6), -0.64058 (6), -0.64003 (6), -0.58226 (6), -0.56991 (6), -0.56657 (6), -0.56243 (6), -0.51842 (6), -0.49860 (6), -0.43633 (6), -0.42639 (6), -0.41142 (6), -0.40906 (6), -0.39141 (6), -0.30541 (6), -0.29526 (6), -0.26977 (6), -0.26513 (6), 
length of domains: 33
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.1976    add 0.0015    
Accumulated time: pickout 0.0005    decision 0.0234    set_bounds 0.0109    solve 0.1976    add 0.0015    
Current (lb-rhs): -1.269592046737671
33 domains visited
Cumulative time: 0.23813486099243164

BaB round 2
batch: 33
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 85] [/input, 178] [/input, 178] [/input, 178] [/input, 174] [/input, 149] [/input, 178] [/input, 178] [/input, 178] [/input, 62] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 66 = 0.5454545454545454
pruning-in-iteration extra time: 0.009520530700683594
Time: prepare 0.0073    bound 0.2255    transfer 0.0003    finalize 0.0028    func 0.2360    
Accumulated time: func 0.4335    prepare 0.0118    bound 0.4165    transfer 0.0007    finalize 0.0052    
Current worst splitting domains lb-rhs (depth):
-0.80325 (7), -0.70183 (7), -0.64386 (7), -0.61219 (7), -0.45591 (7), -0.41692 (7), -0.39887 (7), -0.39715 (7), -0.38605 (7), -0.37001 (7), -0.35042 (7), -0.35029 (7), -0.32543 (7), -0.27500 (7), -0.26593 (7), -0.25474 (7), -0.21608 (7), -0.21519 (7), -0.21471 (7), -0.21019 (7), 
length of domains: 30
Time: pickout 0.0008    decision 0.0408    set_bounds 0.0064    solve 0.2361    add 0.0273    
Accumulated time: pickout 0.0012    decision 0.0641    set_bounds 0.0174    solve 0.4337    add 0.0288    
Current (lb-rhs): -0.8032549619674683
63 domains visited
Cumulative time: 0.5501313209533691

BaB round 3
batch: 30
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 178] [/input.3, 85] [/input, 174] [/input, 62] [/input, 62] [/input, 178] [/input, 149] [/input, 149] [/input, 149] [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 60 = 0.5333333333333333
pruning-in-iteration extra time: 0.00956583023071289
Time: prepare 0.0072    bound 0.2090    transfer 0.0004    finalize 0.0028    func 0.2197    
Accumulated time: func 0.6532    prepare 0.0196    bound 0.6255    transfer 0.0011    finalize 0.0081    
Current worst splitting domains lb-rhs (depth):
-0.49207 (8), -0.39070 (8), -0.37173 (8), -0.36063 (8), -0.30060 (8), -0.29452 (8), -0.28635 (8), -0.26497 (8), -0.26189 (8), -0.26111 (8), -0.25971 (8), -0.25916 (8), -0.24017 (8), -0.22394 (8), -0.21962 (8), -0.21019 (8), -0.20820 (8), -0.20063 (8), -0.18474 (8), -0.17788 (8), 
length of domains: 28
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0071    solve 0.2197    add 0.0012    
Accumulated time: pickout 0.0019    decision 0.1039    set_bounds 0.0245    solve 0.6534    add 0.0300    
Current (lb-rhs): -0.4920698404312134
91 domains visited
Cumulative time: 0.8191807270050049

BaB round 4
batch: 28
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 62] [/input, 174] [/input, 174] [/input, 62] [/input.3, 175] [/input.3, 85] [/input, 62] [/input, 174] [/input, 62] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 56 = 0.6428571428571428
pruning-in-iteration extra time: 0.007673978805541992
Time: prepare 0.0065    bound 0.1471    transfer 0.0002    finalize 0.0022    func 0.1560    
Accumulated time: func 0.8092    prepare 0.0266    bound 0.7726    transfer 0.0013    finalize 0.0102    
Current worst splitting domains lb-rhs (depth):
-0.28114 (9), -0.24875 (9), -0.23858 (9), -0.21960 (9), -0.20747 (9), -0.17013 (9), -0.14184 (9), -0.12851 (9), -0.11907 (9), -0.11439 (9), -0.10603 (9), -0.09793 (9), -0.08387 (9), -0.08171 (9), -0.08080 (9), -0.05991 (9), -0.05986 (9), -0.05494 (9), -0.04500 (9), -0.01742 (9), 
length of domains: 20
Time: pickout 0.0007    decision 0.0374    set_bounds 0.0070    solve 0.1562    add 0.0011    
Accumulated time: pickout 0.0026    decision 0.1413    set_bounds 0.0314    solve 0.8096    add 0.0311    
Current (lb-rhs): -0.2811417579650879
111 domains visited
Cumulative time: 1.0220208168029785

BaB round 5
batch: 20
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 198] [/input, 149] [/input.3, 132] [/input, 149] [/input, 146] [/input, 149] [/input.3, 150] [/input, 149] [/input, 149] [/input, 174] 
split level 1: [/input.3, 150] [/input, 178] [/input.3, 175] [/input, 174] [/input, 149] [/input.3, 85] [/input.3, 217] [/input, 174] [/input, 146] [/input, 146] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 80 = 0.8625
pruning-in-iteration extra time: 0.007452964782714844
Time: prepare 0.0084    bound 0.1346    transfer 0.0003    finalize 0.0029    func 0.1463    
Accumulated time: func 0.9555    prepare 0.0354    bound 0.9072    transfer 0.0015    finalize 0.0132    
Current worst splitting domains lb-rhs (depth):
-0.18995 (11), -0.17327 (11), -0.15355 (11), -0.13474 (11), -0.11735 (11), -0.10687 (11), -0.10092 (11), -0.09788 (11), -0.08624 (11), -0.02236 (11), -0.00239 (11), 
length of domains: 11
Time: pickout 0.0006    decision 0.0334    set_bounds 0.0102    solve 0.1463    add 0.0008    
Accumulated time: pickout 0.0032    decision 0.1747    set_bounds 0.0416    solve 0.9560    add 0.0320    
Current (lb-rhs): -0.1899469494819641
122 domains visited
Cumulative time: 1.2139859199523926

BaB round 6
batch: 11
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 30] [/input, 146] [/input.3, 150] [/input.3, 175] [/input, 198] [/input.3, 150] [/input, 228] [/input.3, 30] [/input.3, 30] [/input.3, 150] 
split level 1: [/input.3, 31] [/input.3, 30] [/input.3, 30] [/input.3, 30] [/input.3, 30] [/input.3, 30] [/input.3, 175] [/input.3, 31] [/input, 146] [/input.3, 30] 
split level 2: [/input.3, 132] [/input.3, 31] [/input.3, 217] [/input, 228] [/input.3, 31] [/input, 198] [/input, 150] [/input, 174] [/input.3, 31] [/input, 228] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 88 = 0.8409090909090909
pruning-in-iteration extra time: 0.007211208343505859
Time: prepare 0.0095    bound 0.1329    transfer 0.0002    finalize 0.0033    func 0.1462    
Accumulated time: func 1.1016    prepare 0.0454    bound 1.0401    transfer 0.0018    finalize 0.0165    
Current worst splitting domains lb-rhs (depth):
-0.08906 (14), -0.07801 (14), -0.03971 (14), -0.03114 (14), -0.02725 (14), -0.02512 (14), -0.02424 (14), -0.02387 (14), -0.01191 (14), -0.01145 (14), -0.01122 (14), -0.00981 (14), -0.00949 (14), -0.00242 (14), 
length of domains: 14
Time: pickout 0.0006    decision 0.0286    set_bounds 0.0128    solve 0.1462    add 0.0010    
Accumulated time: pickout 0.0039    decision 0.2033    set_bounds 0.0544    solve 1.1022    add 0.0329    
Current (lb-rhs): -0.08906128257513046
136 domains visited
Cumulative time: 1.4039194583892822

BaB round 7
batch: 14
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input, 149] [/input, 149] [/input, 150] [/input, 62] [/input, 198] [/input.3, 10] [/input, 198] [/input, 150] [/input, 62] [/input, 198] 
split level 1: [/input, 62] [/input, 228] [/input, 245] [/input, 174] [/input.3, 10] [/input, 198] [/input, 149] [/input, 245] [/input, 174] [/input.3, 216] 
pruning_in_iteration open status: True
ratio of positive domain = 49 / 56 = 0.875
pruning-in-iteration extra time: 0.0071337223052978516
Time: prepare 0.0062    bound 0.1304    transfer 0.0002    finalize 0.0023    func 0.1391    
Accumulated time: func 1.2407    prepare 0.0520    bound 1.1705    transfer 0.0020    finalize 0.0188    
Current worst splitting domains lb-rhs (depth):
-0.05009 (16), -0.04841 (16), -0.04802 (16), -0.04269 (16), -0.02999 (16), -0.02834 (16), -0.01702 (16), 
length of domains: 7
Time: pickout 0.0007    decision 0.0296    set_bounds 0.0075    solve 0.1392    add 0.0008    
Accumulated time: pickout 0.0046    decision 0.2329    set_bounds 0.0619    solve 1.2414    add 0.0337    
Current (lb-rhs): -0.05009409785270691
143 domains visited
Cumulative time: 1.5821642875671387

BaB round 8
batch: 7
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input.3, 10] [/input, 228] [/input.3, 10] [/input, 228] [/input, 178] [/input, 228] 
split level 1: [/input, 178] [/input, 178] [/input, 178] [/input.3, 220] [/input, 178] [/input, 34] [/input, 178] 
split level 2: [/input, 174] [/input.3, 220] [/input, 174] [/input.3, 61] [/input, 174] [/input, 174] [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 56 = 0.9821428571428571
pruning-in-iteration extra time: 0.006884098052978516
Time: prepare 0.0065    bound 0.1258    transfer 0.0003    finalize 0.0024    func 0.1350    
Accumulated time: func 1.3757    prepare 0.0590    bound 1.2963    transfer 0.0023    finalize 0.0212    
Current worst splitting domains lb-rhs (depth):
-0.01130 (19), 
length of domains: 1
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0081    solve 0.1350    add 0.0006    
Accumulated time: pickout 0.0052    decision 0.2579    set_bounds 0.0699    solve 1.3764    add 0.0343    
Current (lb-rhs): -0.011298485100269318
144 domains visited
Cumulative time: 1.7518205642700195

BaB round 9
batch: 1
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input.3, 151] 
split level 1: [/input, 34] 
split level 2: [/input, 178] 
split level 3: [/input.3, 13] 
split level 4: [/input, 62] 
split level 5: [/input, 174] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0074    bound 0.0047    transfer 0.0001    finalize 0.0026    func 0.0150    
Accumulated time: func 1.3907    prepare 0.0670    bound 1.3010    transfer 0.0024    finalize 0.0239    
length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0126    solve 0.0151    add 0.0001    
Accumulated time: pickout 0.0057    decision 0.2814    set_bounds 0.0825    solve 1.3915    add 0.0344    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
144 domains visited
Cumulative time: 1.803812026977539


Properties batch 5, size 1
Remaining timeout: 113.02177834510803
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.04737663]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.04737663]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 48] 
split level 3: [/input.3, 197] 
split level 4: [/input.3, 217] 
split level 5: [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.0071582794189453125
Time: prepare 0.0066    bound 0.1326    transfer 0.0002    finalize 0.0024    func 0.1420    
Accumulated time: func 0.1420    prepare 0.0071    bound 0.1326    transfer 0.0002    finalize 0.0024    
Current worst splitting domains lb-rhs (depth):
-0.62519 (6), -0.62305 (6), -0.19225 (6), -0.10841 (6), -0.08662 (6), -0.08540 (6), 
length of domains: 6
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0112    solve 0.1420    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0112    solve 0.1420    add 0.0008    
Current (lb-rhs): -0.6251947283744812
6 domains visited
Cumulative time: 0.18219852447509766

BaB round 2
batch: 6
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input.3, 244] [/input, 149] [/input.3, 244] [/input.3, 244] [/input, 149] 
split level 1: [/input, 228] [/input, 228] [/input, 198] [/input, 228] [/input, 228] [/input, 198] 
split level 2: [/input, 149] [/input, 149] [/input, 150] [/input, 149] [/input, 149] [/input, 150] 
split level 3: [/input, 178] [/input, 178] [/input, 245] [/input, 178] [/input, 178] [/input, 245] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 96 = 0.7916666666666666
pruning-in-iteration extra time: 0.007315635681152344
Time: prepare 0.0109    bound 0.1366    transfer 0.0003    finalize 0.0036    func 0.1514    
Accumulated time: func 0.2934    prepare 0.0184    bound 0.2692    transfer 0.0005    finalize 0.0060    
Current worst splitting domains lb-rhs (depth):
-0.18310 (10), -0.16890 (10), -0.13945 (10), -0.13386 (10), -0.12031 (10), -0.11779 (10), -0.11084 (10), -0.11072 (10), -0.10896 (10), -0.10650 (10), -0.10096 (10), -0.09405 (10), -0.08506 (10), -0.08147 (10), -0.07890 (10), -0.07351 (10), -0.05074 (10), -0.04763 (10), -0.03767 (10), -0.03193 (10), 
length of domains: 20
Time: pickout 0.0006    decision 0.0244    set_bounds 0.0150    solve 0.1516    add 0.0010    
Accumulated time: pickout 0.0011    decision 0.0478    set_bounds 0.0262    solve 0.2936    add 0.0018    
Current (lb-rhs): -0.18310457468032837
26 domains visited
Cumulative time: 0.3752896785736084

BaB round 3
batch: 20
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input, 138] [/input.3, 61] 
split level 1: [/input, 93] [/input, 34] [/input, 34] [/input, 34] [/input, 34] [/input, 34] [/input, 34] [/input, 34] [/input, 34] [/input, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 80 = 0.9625
pruning-in-iteration extra time: 0.006832122802734375
Time: prepare 0.0090    bound 0.1282    transfer 0.0002    finalize 0.0030    func 0.1404    
Accumulated time: func 0.4338    prepare 0.0279    bound 0.3974    transfer 0.0007    finalize 0.0090    
Current worst splitting domains lb-rhs (depth):
-0.05872 (12), -0.01182 (12), -0.00175 (12), 
length of domains: 3
Time: pickout 0.0007    decision 0.0329    set_bounds 0.0101    solve 0.1405    add 0.0007    
Accumulated time: pickout 0.0017    decision 0.0807    set_bounds 0.0363    solve 0.4341    add 0.0025    
Current (lb-rhs): -0.05872297286987305
29 domains visited
Cumulative time: 0.5605719089508057

BaB round 4
batch: 3
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 34] [/input, 93] [/input, 93] 
split level 1: [/input, 62] [/input, 198] [/input, 150] 
split level 2: [/input, 150] [/input, 150] [/input, 198] 
split level 3: [/input, 198] [/input, 245] [/input, 245] 
split level 4: [/input, 245] [/input, 62] [/input, 62] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 8.153915405273438e-05
Time: prepare 0.0108    bound 0.0048    transfer 0.0001    finalize 0.0037    func 0.0194    
Accumulated time: func 0.4532    prepare 0.0391    bound 0.4022    transfer 0.0008    finalize 0.0127    
length of domains: 0
Time: pickout 0.0006    decision 0.0224    set_bounds 0.0154    solve 0.0195    add 0.0001    
Accumulated time: pickout 0.0023    decision 0.1030    set_bounds 0.0517    solve 0.4536    add 0.0026    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
29 domains visited
Cumulative time: 0.6187779903411865


Properties batch 6, size 1
Remaining timeout: 112.30392456054688
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.44163072]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.44163072]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 13] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 103] 
split level 5: [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 37 / 64 = 0.578125
pruning-in-iteration extra time: 0.009070873260498047
Time: prepare 0.0034    bound 0.1762    transfer 0.0004    finalize 0.0022    func 0.1825    
Accumulated time: func 0.1825    prepare 0.0039    bound 0.1762    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.86154 (6), -0.84555 (6), -0.76523 (6), -0.73013 (6), -0.72124 (6), -0.49571 (6), -0.48654 (6), -0.48136 (6), -0.46574 (6), -0.34034 (6), -0.32493 (6), -0.32412 (6), -0.30306 (6), -0.30222 (6), -0.21132 (6), -0.20964 (6), -0.19089 (6), -0.18441 (6), -0.16728 (6), -0.16195 (6), 
length of domains: 27
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0107    solve 0.1825    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0107    solve 0.1825    add 0.0011    
Current (lb-rhs): -0.8615429401397705
27 domains visited
Cumulative time: 0.22150230407714844

BaB round 2
batch: 27
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] [/input.3, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 31 / 54 = 0.5740740740740741
pruning-in-iteration extra time: 0.009723901748657227
Time: prepare 0.0039    bound 0.2120    transfer 0.0002    finalize 0.0022    func 0.2184    
Accumulated time: func 0.4009    prepare 0.0082    bound 0.3883    transfer 0.0006    finalize 0.0044    
Current worst splitting domains lb-rhs (depth):
-0.72555 (7), -0.68053 (7), -0.64893 (7), -0.56764 (7), -0.53561 (7), -0.47204 (7), -0.43352 (7), -0.42354 (7), -0.40528 (7), -0.34622 (7), -0.24961 (7), -0.24910 (7), -0.24179 (7), -0.23597 (7), -0.21645 (7), -0.19255 (7), -0.12369 (7), -0.12343 (7), -0.11647 (7), -0.09013 (7), 
length of domains: 23
Time: pickout 0.0006    decision 0.0363    set_bounds 0.0063    solve 0.2185    add 0.0013    
Accumulated time: pickout 0.0010    decision 0.0590    set_bounds 0.0170    solve 0.4010    add 0.0024    
Current (lb-rhs): -0.7255484461784363
50 domains visited
Cumulative time: 0.4849815368652344

BaB round 3
batch: 23
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 228] [/input.3, 175] [/input, 2] [/input, 149] [/input, 228] [/input.3, 133] [/input, 2] [/input.3, 85] [/input, 2] [/input.3, 244] 
split level 1: [/input.3, 175] [/input.3, 85] [/input, 93] [/input, 178] [/input, 178] [/input, 228] [/input, 34] [/input, 149] [/input, 34] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 92 = 0.5978260869565217
pruning-in-iteration extra time: 0.009253740310668945
Time: prepare 0.0102    bound 0.2078    transfer 0.0004    finalize 0.0044    func 0.2230    
Accumulated time: func 0.6238    prepare 0.0189    bound 0.5961    transfer 0.0010    finalize 0.0088    
Current worst splitting domains lb-rhs (depth):
-0.51320 (9), -0.49020 (9), -0.47841 (9), -0.39149 (9), -0.38180 (9), -0.36635 (9), -0.34778 (9), -0.33976 (9), -0.31528 (9), -0.31130 (9), -0.26702 (9), -0.26597 (9), -0.25418 (9), -0.21021 (9), -0.17591 (9), -0.17278 (9), -0.16847 (9), -0.16274 (9), -0.14656 (9), -0.14091 (9), 
length of domains: 37
Time: pickout 0.0007    decision 0.0356    set_bounds 0.0113    solve 0.2231    add 0.0013    
Accumulated time: pickout 0.0018    decision 0.0946    set_bounds 0.0284    solve 0.6241    add 0.0037    
Current (lb-rhs): -0.5132008194923401
87 domains visited
Cumulative time: 0.7575278282165527

BaB round 4
batch: 37
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 93] [/input, 93] [/input.3, 175] [/input, 93] [/input.3, 175] [/input, 93] [/input.3, 85] [/input.3, 85] [/input.3, 133] [/input.3, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 47 / 74 = 0.6351351351351351
pruning-in-iteration extra time: 0.009971141815185547
Time: prepare 0.0086    bound 0.2157    transfer 0.0003    finalize 0.0038    func 0.2285    
Accumulated time: func 0.8523    prepare 0.0279    bound 0.8118    transfer 0.0013    finalize 0.0126    
Current worst splitting domains lb-rhs (depth):
-0.46768 (10), -0.44987 (10), -0.37303 (10), -0.32427 (10), -0.29965 (10), -0.28155 (10), -0.25599 (10), -0.23456 (10), -0.23074 (10), -0.21797 (10), -0.18598 (10), -0.17528 (10), -0.17404 (10), -0.17055 (10), -0.15574 (10), -0.12251 (10), -0.12075 (10), -0.10159 (10), -0.09148 (10), -0.06908 (10), 
length of domains: 27
Time: pickout 0.0007    decision 0.0421    set_bounds 0.0081    solve 0.2285    add 0.0013    
Accumulated time: pickout 0.0025    decision 0.1367    set_bounds 0.0364    solve 0.8526    add 0.0050    
Current (lb-rhs): -0.4676774740219116
114 domains visited
Cumulative time: 1.038787841796875

BaB round 5
batch: 27
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 85] [/input.3, 133] [/input.3, 85] [/input, 228] [/input.3, 85] [/input.3, 133] [/input, 178] [/input, 178] [/input.3, 85] [/input, 2] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 54 = 0.5925925925925926
pruning-in-iteration extra time: 0.00856328010559082
Time: prepare 0.0066    bound 0.1710    transfer 0.0002    finalize 0.0021    func 0.1800    
Accumulated time: func 1.0323    prepare 0.0350    bound 0.9828    transfer 0.0015    finalize 0.0147    
Current worst splitting domains lb-rhs (depth):
-0.43470 (11), -0.41411 (11), -0.31963 (11), -0.28327 (11), -0.27747 (11), -0.26080 (11), -0.23861 (11), -0.22532 (11), -0.21971 (11), -0.17508 (11), -0.16049 (11), -0.13004 (11), -0.11408 (11), -0.08914 (11), -0.08885 (11), -0.07822 (11), -0.06829 (11), -0.06097 (11), -0.04798 (11), -0.04684 (11), 
length of domains: 22
Time: pickout 0.0008    decision 0.0377    set_bounds 0.0065    solve 0.1802    add 0.0011    
Accumulated time: pickout 0.0033    decision 0.1744    set_bounds 0.0429    solve 1.0328    add 0.0062    
Current (lb-rhs): -0.43469756841659546
136 domains visited
Cumulative time: 1.265474796295166

BaB round 6
batch: 22
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 165] [/input.3, 132] [/input.3, 150] [/input.3, 133] [/input.3, 150] [/input.3, 165] [/input.3, 133] [/input.3, 165] [/input.3, 132] [/input.3, 132] 
split level 1: [/input.3, 132] [/input.3, 150] [/input.3, 165] [/input, 178] [/input.3, 132] [/input, 178] [/input, 34] [/input.3, 132] [/input.3, 165] [/input.3, 165] 
pruning_in_iteration open status: True
ratio of positive domain = 67 / 88 = 0.7613636363636364
pruning-in-iteration extra time: 0.007426023483276367
Time: prepare 0.0101    bound 0.1352    transfer 0.0002    finalize 0.0034    func 0.1489    
Accumulated time: func 1.1812    prepare 0.0455    bound 1.1180    transfer 0.0017    finalize 0.0181    
Current worst splitting domains lb-rhs (depth):
-0.32275 (13), -0.30572 (13), -0.26330 (13), -0.21862 (13), -0.20586 (13), -0.19852 (13), -0.17856 (13), -0.17388 (13), -0.14855 (13), -0.12838 (13), -0.11885 (13), -0.11258 (13), -0.10787 (13), -0.08991 (13), -0.08963 (13), -0.07577 (13), -0.07029 (13), -0.06538 (13), -0.05906 (13), -0.05269 (13), 
length of domains: 21
Time: pickout 0.0006    decision 0.0340    set_bounds 0.0114    solve 0.1490    add 0.0011    
Accumulated time: pickout 0.0039    decision 0.2084    set_bounds 0.0543    solve 1.1818    add 0.0072    
Current (lb-rhs): -0.3227466940879822
157 domains visited
Cumulative time: 1.4620561599731445

BaB round 7
batch: 21
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 217] [/input, 228] [/input, 93] [/input, 138] [/input.3, 165] [/input, 34] [/input.3, 165] [/input, 34] [/input.3, 132] [/input, 34] 
split level 1: [/input.3, 132] [/input, 34] [/input, 228] [/input.3, 150] [/input.3, 217] [/input.3, 132] [/input, 149] [/input.3, 132] [/input.3, 220] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 84 = 0.75
pruning-in-iteration extra time: 0.007264137268066406
Time: prepare 0.0097    bound 0.1321    transfer 0.0002    finalize 0.0033    func 0.1454    
Accumulated time: func 1.3266    prepare 0.0557    bound 1.2502    transfer 0.0019    finalize 0.0214    
Current worst splitting domains lb-rhs (depth):
-0.26615 (15), -0.20393 (15), -0.16175 (15), -0.14364 (15), -0.14038 (15), -0.13061 (15), -0.12814 (15), -0.12667 (15), -0.12555 (15), -0.10635 (15), -0.09759 (15), -0.09659 (15), -0.07693 (15), -0.07461 (15), -0.04193 (15), -0.02790 (15), -0.02631 (15), -0.02505 (15), -0.01875 (15), -0.01243 (15), 
length of domains: 21
Time: pickout 0.0007    decision 0.0338    set_bounds 0.0110    solve 0.1454    add 0.0011    
Accumulated time: pickout 0.0046    decision 0.2422    set_bounds 0.0653    solve 1.3272    add 0.0083    
Current (lb-rhs): -0.26615267992019653
178 domains visited
Cumulative time: 1.6545708179473877

BaB round 8
batch: 21
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input.3, 220] [/input.3, 220] [/input, 93] [/input, 149] [/input, 93] [/input.3, 217] [/input.3, 217] [/input, 34] [/input, 34] [/input, 93] 
split level 1: [/input, 178] [/input.3, 166] [/input, 228] [/input, 178] [/input, 228] [/input.3, 132] [/input.3, 166] [/input.3, 165] [/input, 93] [/input.3, 217] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 84 = 0.75
pruning-in-iteration extra time: 0.0071222782135009766
Time: prepare 0.0096    bound 0.1300    transfer 0.0003    finalize 0.0031    func 0.1430    
Accumulated time: func 1.4696    prepare 0.0658    bound 1.3801    transfer 0.0022    finalize 0.0246    
Current worst splitting domains lb-rhs (depth):
-0.17824 (17), -0.16055 (17), -0.11807 (17), -0.11241 (17), -0.07891 (17), -0.07807 (17), -0.07493 (17), -0.07219 (17), -0.06992 (17), -0.06767 (17), -0.05766 (17), -0.05221 (17), -0.03636 (17), -0.03001 (17), -0.02824 (17), -0.02191 (17), -0.01969 (17), -0.01904 (17), -0.01247 (17), -0.00991 (17), 
length of domains: 21
Time: pickout 0.0006    decision 0.0333    set_bounds 0.0109    solve 0.1431    add 0.0011    
Accumulated time: pickout 0.0052    decision 0.2755    set_bounds 0.0762    solve 1.4703    add 0.0094    
Current (lb-rhs): -0.1782403290271759
199 domains visited
Cumulative time: 1.8440608978271484

BaB round 9
batch: 21
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input, 138] [/input, 149] [/input, 178] [/input.3, 244] [/input.3, 165] [/input, 149] [/input, 178] [/input, 138] [/input, 62] [/input.3, 217] 
split level 1: [/input, 149] [/input.3, 30] [/input.3, 165] [/input, 62] [/input.3, 132] [/input.3, 123] [/input, 138] [/input, 178] [/input, 174] [/input, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 84 = 0.8452380952380952
pruning-in-iteration extra time: 0.007236003875732422
Time: prepare 0.0098    bound 0.1333    transfer 0.0003    finalize 0.0033    func 0.1468    
Accumulated time: func 1.6164    prepare 0.0760    bound 1.5134    transfer 0.0025    finalize 0.0279    
Current worst splitting domains lb-rhs (depth):
-0.11854 (19), -0.11115 (19), -0.09043 (19), -0.06471 (19), -0.06268 (19), -0.06219 (19), -0.05333 (19), -0.04060 (19), -0.01932 (19), -0.01400 (19), -0.01142 (19), -0.01001 (19), -0.00723 (19), 
length of domains: 13
Time: pickout 0.0006    decision 0.0336    set_bounds 0.0116    solve 0.1468    add 0.0010    
Accumulated time: pickout 0.0058    decision 0.3092    set_bounds 0.0878    solve 1.6172    add 0.0104    
Current (lb-rhs): -0.118535116314888
212 domains visited
Cumulative time: 2.0383946895599365

BaB round 10
batch: 13
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input.3, 151] [/input.3, 151] [/input.3, 151] [/input.3, 151] [/input, 93] [/input.3, 58] [/input.3, 151] [/input.3, 151] [/input, 34] [/input.3, 151] 
split level 1: [/input, 178] [/input, 178] [/input.3, 166] [/input, 149] [/input, 178] [/input, 178] [/input, 178] [/input, 174] [/input, 178] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 45 / 52 = 0.8653846153846154
pruning-in-iteration extra time: 0.0070819854736328125
Time: prepare 0.0064    bound 0.1299    transfer 0.0002    finalize 0.0023    func 0.1388    
Accumulated time: func 1.7552    prepare 0.0829    bound 1.6433    transfer 0.0027    finalize 0.0302    
Current worst splitting domains lb-rhs (depth):
-0.07062 (21), -0.05942 (21), -0.05557 (21), -0.05388 (21), -0.04701 (21), -0.01765 (21), -0.01303 (21), 
length of domains: 7
Time: pickout 0.0007    decision 0.0298    set_bounds 0.0076    solve 0.1389    add 0.0008    
Accumulated time: pickout 0.0065    decision 0.3389    set_bounds 0.0954    solve 1.7561    add 0.0112    
Current (lb-rhs): -0.07062050700187683
219 domains visited
Cumulative time: 2.216531276702881

BaB round 11
batch: 7
Average branched neurons at iteration 11:  1.0000
splitting decisions: 
split level 0: [/input, 34] [/input, 174] [/input, 34] [/input.3, 58] [/input, 34] [/input, 34] [/input.3, 216] 
split level 1: [/input, 62] [/input.3, 216] [/input, 62] [/input, 198] [/input, 62] [/input.3, 123] [/input.3, 123] 
split level 2: [/input, 174] [/input, 198] [/input.3, 123] [/input.3, 123] [/input.3, 123] [/input, 62] [/input, 198] 

all verified at 11th iter
pruning_in_iteration open status: True
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.0039293766021728516
Time: prepare 0.0065    bound 0.0754    transfer 0.0002    finalize 0.0023    func 0.0844    
Accumulated time: func 1.8396    prepare 0.0898    bound 1.7187    transfer 0.0029    finalize 0.0324    
length of domains: 0
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0087    solve 0.0844    add 0.0001    
Accumulated time: pickout 0.0071    decision 0.3637    set_bounds 0.1041    solve 1.8405    add 0.0113    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
219 domains visited
Cumulative time: 2.3354432582855225


Properties batch 7, size 1
Remaining timeout: 109.87312579154968
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.59454894]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.59454894]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 144] 
pruning_in_iteration open status: True
ratio of positive domain = 42 / 64 = 0.65625
pruning-in-iteration extra time: 0.007190704345703125
Time: prepare 0.0034    bound 0.1317    transfer 0.0003    finalize 0.0017    func 0.1372    
Accumulated time: func 0.1372    prepare 0.0039    bound 0.1317    transfer 0.0003    finalize 0.0017    
Current worst splitting domains lb-rhs (depth):
-0.76458 (6), -0.66009 (6), -0.64691 (6), -0.41757 (6), -0.39508 (6), -0.38326 (6), -0.35532 (6), -0.33409 (6), -0.33087 (6), -0.32269 (6), -0.32215 (6), -0.22919 (6), -0.13478 (6), -0.12574 (6), -0.10133 (6), -0.09536 (6), -0.06984 (6), -0.06376 (6), -0.06360 (6), -0.06286 (6), 
length of domains: 22
Time: pickout 0.0005    decision 0.0226    set_bounds 0.0106    solve 0.1373    add 0.0011    
Accumulated time: pickout 0.0005    decision 0.0226    set_bounds 0.0106    solve 0.1373    add 0.0011    
Current (lb-rhs): -0.7645750045776367
22 domains visited
Cumulative time: 0.17602252960205078

BaB round 2
batch: 22
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input, 198] [/input.3, 48] [/input, 198] [/input.3, 48] [/input, 198] [/input, 198] [/input, 216] [/input, 198] [/input.3, 48] 
split level 1: [/input, 228] [/input.3, 48] [/input, 198] [/input, 150] [/input, 198] [/input, 150] [/input, 150] [/input, 198] [/input, 150] [/input, 228] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 88 = 0.8522727272727273
pruning-in-iteration extra time: 0.007186412811279297
Time: prepare 0.0099    bound 0.1296    transfer 0.0002    finalize 0.0033    func 0.1430    
Accumulated time: func 0.2802    prepare 0.0142    bound 0.2613    transfer 0.0005    finalize 0.0050    
Current worst splitting domains lb-rhs (depth):
-0.32948 (8), -0.27184 (8), -0.24640 (8), -0.22429 (8), -0.21165 (8), -0.14517 (8), -0.10989 (8), -0.10361 (8), -0.08836 (8), -0.04881 (8), -0.03035 (8), -0.02156 (8), -0.01711 (8), 
length of domains: 13
Time: pickout 0.0006    decision 0.0340    set_bounds 0.0105    solve 0.1431    add 0.0046    
Accumulated time: pickout 0.0011    decision 0.0566    set_bounds 0.0211    solve 0.2803    add 0.0058    
Current (lb-rhs): -0.32947659492492676
35 domains visited
Cumulative time: 0.3692927360534668

BaB round 3
batch: 13
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 48] [/input, 150] [/input, 216] [/input, 178] [/input, 216] [/input, 216] [/input, 150] [/input.3, 244] [/input, 216] [/input.3, 48] 
split level 1: [/input.3, 31] [/input, 245] [/input, 150] [/input, 150] [/input, 245] [/input.3, 48] [/input, 245] [/input, 149] [/input, 245] [/input, 149] 
pruning_in_iteration open status: True
ratio of positive domain = 43 / 52 = 0.8269230769230769
pruning-in-iteration extra time: 0.007133960723876953
Time: prepare 0.0060    bound 0.1316    transfer 0.0003    finalize 0.0022    func 0.1402    
Accumulated time: func 0.4204    prepare 0.0207    bound 0.3928    transfer 0.0008    finalize 0.0072    
Current worst splitting domains lb-rhs (depth):
-0.15829 (10), -0.15307 (10), -0.14727 (10), -0.12379 (10), -0.10399 (10), -0.07416 (10), -0.03463 (10), -0.01718 (10), -0.00985 (10), 
length of domains: 9
Time: pickout 0.0006    decision 0.0287    set_bounds 0.0070    solve 0.1402    add 0.0009    
Accumulated time: pickout 0.0017    decision 0.0852    set_bounds 0.0281    solve 0.4206    add 0.0066    
Current (lb-rhs): -0.1582852452993393
44 domains visited
Cumulative time: 0.547105073928833

BaB round 4
batch: 9
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 85] [/input, 216] [/input, 178] [/input.3, 85] [/input, 178] [/input.3, 85] [/input.3, 85] [/input, 178] [/input, 178] 
split level 1: [/input.3, 175] [/input, 149] [/input.3, 85] [/input.3, 175] [/input.3, 85] [/input.3, 217] [/input.3, 31] [/input.3, 85] [/input, 198] 
split level 2: [/input.3, 217] [/input, 245] [/input, 174] [/input, 149] [/input, 174] [/input, 178] [/input, 178] [/input.3, 217] [/input, 245] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 72 = 0.9027777777777778
pruning-in-iteration extra time: 0.007085323333740234
Time: prepare 0.0084    bound 0.1305    transfer 0.0003    finalize 0.0029    func 0.1420    
Accumulated time: func 0.5625    prepare 0.0295    bound 0.5234    transfer 0.0010    finalize 0.0100    
Current worst splitting domains lb-rhs (depth):
-0.08064 (13), -0.03465 (13), -0.02370 (13), -0.02248 (13), -0.01813 (13), -0.01288 (13), -0.00798 (13), 
length of domains: 7
Time: pickout 0.0007    decision 0.0285    set_bounds 0.0112    solve 0.1421    add 0.0008    
Accumulated time: pickout 0.0023    decision 0.1137    set_bounds 0.0393    solve 0.5627    add 0.0074    
Current (lb-rhs): -0.0806376114487648
51 domains visited
Cumulative time: 0.7309286594390869

BaB round 5
batch: 7
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 151] [/input, 138] [/input.3, 217] [/input, 34] [/input, 149] [/input, 34] [/input, 62] 
split level 1: [/input, 149] [/input, 34] [/input, 178] [/input, 198] [/input, 178] [/input, 198] [/input.3, 151] 
split level 2: [/input, 178] [/input, 198] [/input, 62] [/input, 174] [/input.3, 151] [/input, 174] [/input, 174] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 56 = 0.9821428571428571
pruning-in-iteration extra time: 0.006704807281494141
Time: prepare 0.0067    bound 0.1268    transfer 0.0002    finalize 0.0024    func 0.1361    
Accumulated time: func 0.6986    prepare 0.0367    bound 0.6502    transfer 0.0013    finalize 0.0124    
Current worst splitting domains lb-rhs (depth):
-0.01030 (16), 
length of domains: 1
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0085    solve 0.1362    add 0.0005    
Accumulated time: pickout 0.0030    decision 0.1385    set_bounds 0.0478    solve 0.6989    add 0.0079    
Current (lb-rhs): -0.010302439332008362
52 domains visited
Cumulative time: 0.9019460678100586

BaB round 6
batch: 1
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 121] 
split level 1: [/input, 93] 
split level 2: [/input, 62] 
split level 3: [/input, 34] 
split level 4: [/input, 174] 
split level 5: [/input.3, 61] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.0073    bound 0.0044    transfer 0.0001    finalize 0.0025    func 0.0144    
Accumulated time: func 0.7130    prepare 0.0444    bound 0.6546    transfer 0.0014    finalize 0.0149    
length of domains: 0
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0123    solve 0.0144    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.1610    set_bounds 0.0601    solve 0.7133    add 0.0080    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
52 domains visited
Cumulative time: 0.9519062042236328


Properties batch 8, size 1
Remaining timeout: 108.82529497146606
##### Instance 462 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.22473037]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.96104124e-03,  2.35274434e-04,  7.11931288e-03,  7.52639771e-03,
        -3.34424525e-03,  4.65222448e-03,  1.00060689e+00, -2.75327265e-03,
         4.10143286e-03,  6.48387522e-03], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.22473037]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 24
Node /17 input 0: size torch.Size([256]) unstable 46
-----------------
# of unstable neurons: 70
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 122] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 103] 
split level 3: [/input.3, 144] 
split level 4: [/input.3, 31] 
split level 5: [/input.3, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 64 = 0.78125
pruning-in-iteration extra time: 0.007379055023193359
Time: prepare 0.0034    bound 0.1280    transfer 0.0002    finalize 0.0018    func 0.1336    
Accumulated time: func 0.1336    prepare 0.0040    bound 0.1280    transfer 0.0002    finalize 0.0018    
Current worst splitting domains lb-rhs (depth):
-0.64047 (6), -0.57594 (6), -0.56020 (6), -0.49905 (6), -0.32071 (6), -0.19784 (6), -0.16770 (6), -0.10932 (6), -0.10375 (6), -0.07178 (6), -0.04837 (6), -0.04286 (6), -0.03395 (6), -0.02958 (6), 
length of domains: 14
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0106    solve 0.1337    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0106    solve 0.1337    add 0.0010    
Current (lb-rhs): -0.6404727697372437
14 domains visited
Cumulative time: 0.1729264259338379

BaB round 2
batch: 14
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 244] [/input, 149] [/input, 228] [/input, 149] [/input.3, 244] [/input, 149] [/input, 228] [/input, 149] [/input.3, 244] [/input, 149] 
split level 1: [/input, 228] [/input, 178] [/input, 149] [/input, 178] [/input, 228] [/input, 178] [/input, 149] [/input, 178] [/input, 178] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 37 / 56 = 0.6607142857142857
pruning-in-iteration extra time: 0.007275581359863281
Time: prepare 0.0067    bound 0.1317    transfer 0.0002    finalize 0.0024    func 0.1411    
Accumulated time: func 0.2747    prepare 0.0111    bound 0.2598    transfer 0.0004    finalize 0.0042    
Current worst splitting domains lb-rhs (depth):
-0.38318 (8), -0.37761 (8), -0.32769 (8), -0.32178 (8), -0.22222 (8), -0.20306 (8), -0.19971 (8), -0.17766 (8), -0.16064 (8), -0.15928 (8), -0.11770 (8), -0.11671 (8), -0.07852 (8), -0.07178 (8), -0.06776 (8), -0.06734 (8), -0.03553 (8), -0.03129 (8), -0.02912 (8), 
length of domains: 19
Time: pickout 0.0006    decision 0.0297    set_bounds 0.0072    solve 0.1411    add 0.0011    
Accumulated time: pickout 0.0010    decision 0.0527    set_bounds 0.0178    solve 0.2748    add 0.0021    
Current (lb-rhs): -0.3831784427165985
33 domains visited
Cumulative time: 0.3529949188232422

BaB round 3
batch: 19
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 175] [/input, 93] [/input, 178] [/input, 228] [/input.3, 85] [/input.3, 85] [/input.3, 85] [/input, 149] [/input.3, 85] [/input, 149] 
split level 1: [/input.3, 85] [/input, 150] [/input, 62] [/input, 62] [/input.3, 132] [/input.3, 132] [/input.3, 132] [/input, 178] [/input, 150] [/input, 178] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 76 = 0.8289473684210527
pruning-in-iteration extra time: 0.007909297943115234
Time: prepare 0.0092    bound 0.1616    transfer 0.0002    finalize 0.0035    func 0.1746    
Accumulated time: func 0.4493    prepare 0.0208    bound 0.4214    transfer 0.0006    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.29455 (10), -0.28654 (10), -0.25779 (10), -0.24296 (10), -0.24062 (10), -0.22303 (10), -0.20837 (10), -0.14918 (10), -0.14111 (10), -0.10344 (10), -0.03771 (10), -0.03718 (10), -0.00289 (10), 
length of domains: 13
Time: pickout 0.0006    decision 0.0324    set_bounds 0.0097    solve 0.1747    add 0.0009    
Accumulated time: pickout 0.0016    decision 0.0851    set_bounds 0.0275    solve 0.4495    add 0.0030    
Current (lb-rhs): -0.2945460081100464
46 domains visited
Cumulative time: 0.5716729164123535

BaB round 4
batch: 13
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 132] [/input, 220] [/input.3, 30] [/input.3, 85] [/input.3, 175] [/input, 149] [/input.3, 150] [/input, 34] [/input.3, 132] [/input, 198] 
split level 1: [/input.3, 30] [/input, 174] [/input.3, 150] [/input.3, 175] [/input, 149] [/input.3, 30] [/input.3, 30] [/input, 198] [/input.3, 30] [/input.3, 85] 
pruning_in_iteration open status: True
ratio of positive domain = 39 / 52 = 0.75
pruning-in-iteration extra time: 0.010613441467285156
Time: prepare 0.0062    bound 0.2264    transfer 0.0003    finalize 0.0027    func 0.2358    
Accumulated time: func 0.6852    prepare 0.0275    bound 0.6478    transfer 0.0010    finalize 0.0104    
Current worst splitting domains lb-rhs (depth):
-0.22821 (12), -0.18612 (12), -0.16445 (12), -0.16064 (12), -0.12730 (12), -0.11428 (12), -0.08680 (12), -0.07252 (12), -0.05450 (12), -0.05120 (12), -0.04470 (12), -0.03098 (12), -0.02360 (12), 
length of domains: 13
Time: pickout 0.0006    decision 0.0287    set_bounds 0.0074    solve 0.2359    add 0.0012    
Accumulated time: pickout 0.0022    decision 0.1138    set_bounds 0.0349    solve 0.6854    add 0.0042    
Current (lb-rhs): -0.22821438312530518
59 domains visited
Cumulative time: 0.846013069152832

BaB round 5
batch: 13
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.3, 150] [/input.3, 175] [/input, 174] [/input, 178] [/input, 93] [/input.3, 132] [/input, 93] [/input, 93] [/input, 149] [/input, 138] 
split level 1: [/input.3, 217] [/input, 149] [/input, 62] [/input.3, 30] [/input, 34] [/input, 149] [/input, 34] [/input, 34] [/input.3, 150] [/input, 198] 
pruning_in_iteration open status: True
ratio of positive domain = 41 / 52 = 0.7884615384615384
pruning-in-iteration extra time: 0.009550333023071289
Time: prepare 0.0063    bound 0.2111    transfer 0.0003    finalize 0.0025    func 0.2205    
Accumulated time: func 0.9056    prepare 0.0343    bound 0.8589    transfer 0.0013    finalize 0.0129    
Current worst splitting domains lb-rhs (depth):
-0.15765 (14), -0.09583 (14), -0.09204 (14), -0.08548 (14), -0.08112 (14), -0.07846 (14), -0.07653 (14), -0.03549 (14), -0.03178 (14), -0.02340 (14), -0.00243 (14), 
length of domains: 11
Time: pickout 0.0008    decision 0.0297    set_bounds 0.0074    solve 0.2205    add 0.0010    
Accumulated time: pickout 0.0030    decision 0.1435    set_bounds 0.0423    solve 0.9060    add 0.0052    
Current (lb-rhs): -0.15764808654785156
70 domains visited
Cumulative time: 1.1059367656707764

BaB round 6
batch: 11
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.3, 3] [/input, 93] [/input, 138] [/input.3, 3] [/input, 149] [/input, 93] [/input.3, 3] [/input, 62] [/input, 198] [/input.3, 3] 
split level 1: [/input, 149] [/input, 34] [/input, 150] [/input, 198] [/input.3, 3] [/input, 34] [/input, 198] [/input.3, 3] [/input.3, 3] [/input.3, 13] 
split level 2: [/input.3, 13] [/input, 198] [/input, 174] [/input.3, 217] [/input, 198] [/input, 198] [/input.3, 13] [/input, 174] [/input.3, 13] [/input.3, 61] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 88 = 0.9318181818181819
pruning-in-iteration extra time: 0.009600400924682617
Time: prepare 0.0103    bound 0.2103    transfer 0.0003    finalize 0.0049    func 0.2260    
Accumulated time: func 1.1317    prepare 0.0451    bound 1.0692    transfer 0.0016    finalize 0.0179    
Current worst splitting domains lb-rhs (depth):
-0.08360 (17), -0.08245 (17), -0.06983 (17), -0.06613 (17), -0.02132 (17), -0.01118 (17), 
length of domains: 6
Time: pickout 0.0007    decision 0.0290    set_bounds 0.0129    solve 0.2261    add 0.0009    
Accumulated time: pickout 0.0037    decision 0.1725    set_bounds 0.0551    solve 1.1321    add 0.0061    
Current (lb-rhs): -0.08359535038471222
76 domains visited
Cumulative time: 1.3761556148529053

BaB round 7
batch: 6
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.3, 10] [/input, 178] [/input.3, 169] [/input, 93] [/input.3, 10] [/input, 34] 
split level 1: [/input.3, 169] [/input, 150] [/input, 178] [/input, 2] [/input, 174] [/input, 2] 
split level 2: [/input, 178] [/input.3, 13] [/input.3, 61] [/input, 34] [/input.3, 169] [/input.3, 169] 
split level 3: [/input, 62] [/input.3, 61] [/input, 62] [/input, 178] [/input, 62] [/input, 178] 

all verified at 13th iter
pruning_in_iteration open status: True
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 0.006206035614013672
Time: prepare 0.0116    bound 0.1437    transfer 0.0003    finalize 0.0046    func 0.1604    
Accumulated time: func 1.2920    prepare 0.0572    bound 1.2129    transfer 0.0019    finalize 0.0225    
length of domains: 0
Time: pickout 0.0007    decision 0.0254    set_bounds 0.0166    solve 0.1605    add 0.0001    
Accumulated time: pickout 0.0044    decision 0.1979    set_bounds 0.0717    solve 1.2925    add 0.0062    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
76 domains visited
Cumulative time: 1.5799932479858398

Result: safe in 12.8503 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 463, vnnlib ID: 463 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.89662555e-03, -1.05296895e-02, -1.24908984e-03, -2.82564759e-03,
         -1.99797414e-02,  1.02641010e+00,  3.57408077e-04, -2.53571421e-02,
         -8.21336359e-03, -2.62171030e-03]], device='cuda:0')
diversed PGD initialization time: 0.1267
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1352 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2113 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 464, vnnlib ID: 464 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.05810053,  0.00345174,  0.01466861, -0.06380254,  0.31466278,
          0.00307190, -0.02465730, -0.01261735,  0.55753785,  0.13461417]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.05810053,  0.00345175,  0.01466861, -0.06380254,  0.31466287,
           0.00307192, -0.02465730, -0.01261733,  0.55753773,  0.13461423],
         [ 0.05810053,  0.00345175,  0.01466861, -0.06380254,  0.31466287,
           0.00307192, -0.02465730, -0.01261733,  0.55753773,  0.13461423]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.25656235,  0.31121111,  0.29999426,  0.37846541,  0.31159097,
           0.33932018,  0.32728022, -0.24287486,  0.18004864]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1435 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 465, vnnlib ID: 465 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.88946021e-01, -2.48820335e-03,  9.37375426e-03, -5.73904812e-03,
          4.96283174e-04,  9.96728241e-03, -1.67892575e-02, -6.13404810e-03,
          3.14246118e-03, -3.56951356e-03]], device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1350 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2069 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 466, vnnlib ID: 466 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.16451111, 0.02181531, 0.03559019, 0.02617012, 0.04430305, 0.10187066,
         0.03679731, 0.41340852, 0.04323519, 0.09202881]], device='cuda:0')
diversed PGD initialization time: 0.1253
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.31617212e-04,  3.49860638e-03,  9.05625522e-03,  3.04774940e-03,
          -8.57244805e-03,  1.00668371e-02,  2.03838572e-03, -7.73808360e-03,
           8.63400102e-03,  9.83649731e-01],
         [-7.31617212e-04,  3.49860638e-03,  9.05625522e-03,  3.04774940e-03,
          -8.57244805e-03,  1.00668371e-02,  2.03838572e-03, -7.73808360e-03,
           8.63400102e-03,  9.83649731e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-7.00646639e-03, -1.12366900e-02, -1.67943388e-02, -1.07858330e-02,
           8.34364444e-04, -1.78049207e-02, -9.77646932e-03, -1.63720846e-02,
          -9.91387844e-01]]], device='cuda:0')
number of violation:  8
Attack finished in 0.1343 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1996 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 467, vnnlib ID: 467 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00622953, 0.01011857, 0.03182034, 0.03059231, 0.70048189, 0.02404508,
         0.01184117, 0.03790796, 0.01758715, 0.12527317]], device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.89132616e-03,  4.61034477e-03,  5.48444688e-03, -1.57351047e-03,
           1.03304967e-01, -3.96363437e-04,  2.49509886e-03, -2.10907608e-02,
           4.97698784e-06,  9.07012224e-01],
         [-1.89132616e-03,  4.61034477e-03,  5.48444688e-03, -1.57351047e-03,
           1.03304967e-01, -3.96363437e-04,  2.49509886e-03, -2.10907608e-02,
           4.97698784e-06,  9.07012224e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.10519630,  0.09869462,  0.09782052,  0.10487848,  0.10370133,
           0.10080987,  0.12439573,  0.10329999, -0.80370724]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1349 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1920 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 468, vnnlib ID: 468 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
         -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508]],
       device='cuda:0')
diversed PGD initialization time: 0.1245
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.64652467, -0.05670999,  0.26084042, -0.05890046, -0.00897468,
          -0.04280489, -0.06164315,  0.02995913, -0.04165813,  0.30365252],
         [ 0.64652467, -0.05670999,  0.26084042, -0.05890046, -0.00897468,
          -0.04280489, -0.06164315,  0.02995913, -0.04165813,  0.30365252]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.70323467, 0.38568425, 0.70542514, 0.65549934, 0.68932956,
          0.70816779, 0.61656553, 0.68818277, 0.34287214]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4115 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundFlatten(name=/13, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
  (/18): BoundLinear(name=/18, inputs=[/17, /11, /12], perturbed=True)
)
Original output: tensor([[ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
         -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/13, /7, /8], perturbed=True): [(BoundRelu(name=/15, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/15, /9, /10], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.3], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/15, inputs=[/input], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.3], perturbed=True)
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 256 ([1, 256])
layer /15 start_node /input.3 using sparse-spec alpha [2, 116, 1, 15] with unstable size 115 total_size 256 output_shape torch.Size([256])
layer /15 start_node /18 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [115]; unstable size 115; total size 256 ([1, 256])
layer /17 start_node /18 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.22739339, -4.15277338, -3.53946805, -3.67452645, -3.66710067,
         -3.21850491, -4.01997709, -4.15765858, -5.22090197]], device='cuda:0') None
best_l after optimization: -10.496084213256836
alpha/beta optimization time: 1.5801632404327393
initial alpha-crown bounds: tensor([[-0.77830696, -1.69550264, -1.04538608, -0.91673523, -1.22802401,
         -0.89594603, -1.22279835, -1.30615377, -1.40723121]], device='cuda:0')
Worst class: (+ rhs) -1.6955026388168335
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 256]), torch.Size([9, 1, 256])]

Properties batch 0, size 1
Remaining timeout: 117.89704132080078
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.77830696]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /input.3
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.77830696]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 119] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 132] 
split level 4: [/input.3, 74] 
split level 5: [/input.3, 155] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.008194208145141602
Time: prepare 0.0035    bound 0.1691    transfer 0.0004    finalize 0.0022    func 0.1752    
Accumulated time: func 0.1752    prepare 0.0041    bound 0.1691    transfer 0.0004    finalize 0.0022    
Current worst splitting domains lb-rhs (depth):
-0.47815 (6), -0.39994 (6), -0.10241 (6), -0.09606 (6), 
length of domains: 4
Time: pickout 0.0005    decision 0.0238    set_bounds 0.0109    solve 0.1753    add 0.0008    
Accumulated time: pickout 0.0005    decision 0.0238    set_bounds 0.0109    solve 0.1753    add 0.0008    
Current (lb-rhs): -0.4781458377838135
4 domains visited
Cumulative time: 0.21581077575683594

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] [/input, 158] [/input, 158] 
split level 1: [/input, 154] [/input, 154] [/input, 154] [/input, 154] 
split level 2: [/input, 135] [/input, 135] [/input, 135] [/input, 135] 
split level 3: [/input.3, 45] [/input.3, 45] [/input, 209] [/input.3, 45] 

all verified at 5th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.002112865447998047
Time: prepare 0.0073    bound 0.0535    transfer 0.0002    finalize 0.0032    func 0.0643    
Accumulated time: func 0.2395    prepare 0.0119    bound 0.2225    transfer 0.0006    finalize 0.0054    
length of domains: 0
Time: pickout 0.0007    decision 0.0236    set_bounds 0.0101    solve 0.0644    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0474    set_bounds 0.0210    solve 0.2397    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.31499528884887695


Properties batch 1, size 1
Remaining timeout: 117.47905778884888
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.69550264]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.69550264]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 102] 
split level 2: [/input.3, 31] 
split level 3: [/input.3, 130] 
split level 4: [/input.3, 132] 
split level 5: [/input.3, 74] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 64 = 0.5
pruning-in-iteration extra time: 0.006368875503540039
Time: prepare 0.0035    bound 0.1883    transfer 0.0004    finalize 0.0023    func 0.1948    
Accumulated time: func 0.1948    prepare 0.0041    bound 0.1883    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-1.30148 (6), -0.91616 (6), -0.74605 (6), -0.73392 (6), -0.68540 (6), -0.66851 (6), -0.65913 (6), -0.48971 (6), -0.45006 (6), -0.44829 (6), -0.44135 (6), -0.40106 (6), -0.30181 (6), -0.29985 (6), -0.29181 (6), -0.28779 (6), -0.25915 (6), -0.25491 (6), -0.24629 (6), -0.23854 (6), 
length of domains: 32
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.1949    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0108    solve 0.1949    add 0.0013    
Current (lb-rhs): -1.3014752864837646
32 domains visited
Cumulative time: 0.2346477508544922

BaB round 2
batch: 32
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 154] [/input, 158] [/input, 154] [/input, 158] [/input, 158] [/input, 158] [/input, 35] [/input, 154] [/input, 158] [/input.3, 206] 
pruning_in_iteration open status: True
ratio of positive domain = 34 / 64 = 0.53125
pruning-in-iteration extra time: 0.01024937629699707
Time: prepare 0.0074    bound 0.2193    transfer 0.0003    finalize 0.0040    func 0.2311    
Accumulated time: func 0.4259    prepare 0.0120    bound 0.4077    transfer 0.0007    finalize 0.0063    
Current worst splitting domains lb-rhs (depth):
-0.91061 (7), -0.66080 (7), -0.59168 (7), -0.52655 (7), -0.45140 (7), -0.36068 (7), -0.32171 (7), -0.28802 (7), -0.28123 (7), -0.27854 (7), -0.25824 (7), -0.24445 (7), -0.23062 (7), -0.21919 (7), -0.18768 (7), -0.16828 (7), -0.16206 (7), -0.15505 (7), -0.14979 (7), -0.14223 (7), 
length of domains: 30
Time: pickout 0.0007    decision 0.0392    set_bounds 0.0062    solve 0.2312    add 0.0011    
Accumulated time: pickout 0.0011    decision 0.0623    set_bounds 0.0169    solve 0.4261    add 0.0024    
Current (lb-rhs): -0.9106094837188721
62 domains visited
Cumulative time: 0.5134122371673584

BaB round 3
batch: 30
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 154] [/input, 158] [/input, 154] [/input, 154] [/input, 154] [/input, 158] [/input, 158] [/input, 154] [/input.3, 85] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 60 = 0.6
pruning-in-iteration extra time: 0.009492635726928711
Time: prepare 0.0070    bound 0.2097    transfer 0.0003    finalize 0.0033    func 0.2206    
Accumulated time: func 0.6465    prepare 0.0195    bound 0.6174    transfer 0.0010    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-0.70259 (8), -0.53431 (8), -0.46705 (8), -0.40711 (8), -0.35549 (8), -0.29309 (8), -0.23649 (8), -0.23536 (8), -0.15916 (8), -0.12428 (8), -0.12163 (8), -0.10794 (8), -0.09688 (8), -0.09388 (8), -0.08971 (8), -0.07326 (8), -0.06541 (8), -0.06477 (8), -0.05272 (8), -0.04429 (8), 
length of domains: 24
Time: pickout 0.0006    decision 0.0371    set_bounds 0.0070    solve 0.2207    add 0.0013    
Accumulated time: pickout 0.0017    decision 0.0995    set_bounds 0.0239    solve 0.6468    add 0.0037    
Current (lb-rhs): -0.702592670917511
86 domains visited
Cumulative time: 0.7805995941162109

BaB round 4
batch: 24
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 135] [/input, 135] [/input, 135] [/input, 209] [/input, 135] [/input, 158] [/input, 254] [/input, 135] [/input, 135] [/input, 209] 
split level 1: [/input, 209] [/input, 209] [/input, 209] [/input, 135] [/input, 254] [/input, 154] [/input.3, 119] [/input, 209] [/input, 209] [/input, 135] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 96 = 0.90625
pruning-in-iteration extra time: 0.009518861770629883
Time: prepare 0.0109    bound 0.2081    transfer 0.0004    finalize 0.0055    func 0.2250    
Accumulated time: func 0.8715    prepare 0.0308    bound 0.8255    transfer 0.0014    finalize 0.0151    
Current worst splitting domains lb-rhs (depth):
-0.33136 (10), -0.26094 (10), -0.22883 (10), -0.20260 (10), -0.18587 (10), -0.17897 (10), -0.16832 (10), -0.15328 (10), -0.09059 (10), 
length of domains: 9
Time: pickout 0.0008    decision 0.0354    set_bounds 0.0118    solve 0.2251    add 0.0008    
Accumulated time: pickout 0.0025    decision 0.1348    set_bounds 0.0357    solve 0.8719    add 0.0045    
Current (lb-rhs): -0.33135610818862915
95 domains visited
Cumulative time: 1.0548760890960693

BaB round 5
batch: 9
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input, 254] [/input, 254] [/input.3, 254] [/input, 254] [/input.3, 254] [/input, 254] [/input.3, 254] [/input, 254] [/input.3, 254] 
split level 1: [/input, 245] [/input, 245] [/input.3, 150] [/input, 245] [/input, 35] [/input, 245] [/input, 35] [/input, 245] [/input, 35] 
split level 2: [/input.3, 206] [/input.3, 119] [/input, 35] [/input.3, 119] [/input.3, 150] [/input.3, 119] [/input.3, 150] [/input.3, 119] [/input.3, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 72 = 0.875
pruning-in-iteration extra time: 0.009701967239379883
Time: prepare 0.0082    bound 0.2133    transfer 0.0004    finalize 0.0032    func 0.2251    
Accumulated time: func 1.0967    prepare 0.0395    bound 1.0388    transfer 0.0017    finalize 0.0183    
Current worst splitting domains lb-rhs (depth):
-0.11431 (13), -0.07954 (13), -0.07127 (13), -0.07094 (13), -0.06791 (13), -0.06185 (13), -0.03642 (13), -0.01593 (13), -0.00774 (13), 
length of domains: 9
Time: pickout 0.0006    decision 0.0269    set_bounds 0.0113    solve 0.2252    add 0.0009    
Accumulated time: pickout 0.0031    decision 0.1617    set_bounds 0.0470    solve 1.0971    add 0.0054    
Current (lb-rhs): -0.11431264877319336
104 domains visited
Cumulative time: 1.3203132152557373

BaB round 6
batch: 9
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input, 116] [/input, 116] [/input, 116] [/input, 116] [/input, 116] [/input, 116] [/input, 116] [/input, 116] [/input, 116] 
split level 1: [/input.3, 255] [/input.3, 255] [/input, 254] [/input.3, 255] [/input.3, 230] [/input.3, 230] [/input, 254] [/input.3, 255] [/input, 254] 
split level 2: [/input.3, 21] [/input.3, 141] [/input.3, 141] [/input.3, 141] [/input.3, 141] [/input.3, 141] [/input.3, 141] [/input.3, 21] [/input.3, 141] 

all verified at 19th iter
pruning_in_iteration open status: True
ratio of positive domain = 72 / 72 = 1.0
pruning-in-iteration extra time: 0.009279966354370117
Time: prepare 0.0084    bound 0.2079    transfer 0.0003    finalize 0.0035    func 0.2202    
Accumulated time: func 1.3169    prepare 0.0484    bound 1.2467    transfer 0.0020    finalize 0.0219    
length of domains: 0
Time: pickout 0.0007    decision 0.0275    set_bounds 0.0114    solve 0.2203    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.1892    set_bounds 0.0584    solve 1.3174    add 0.0055    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
104 domains visited
Cumulative time: 1.580796480178833


Properties batch 2, size 1
Remaining timeout: 115.79840230941772
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.04538608]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.04538608]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 31] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 143] 
split level 4: [/input.3, 74] 
split level 5: [/input.3, 236] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 64 = 0.8125
pruning-in-iteration extra time: 0.009308099746704102
Time: prepare 0.0036    bound 0.2003    transfer 0.0003    finalize 0.0021    func 0.2065    
Accumulated time: func 0.2065    prepare 0.0041    bound 0.2003    transfer 0.0003    finalize 0.0021    
Current worst splitting domains lb-rhs (depth):
-0.60918 (6), -0.59537 (6), -0.53517 (6), -0.49407 (6), -0.17589 (6), -0.13809 (6), -0.08711 (6), -0.08386 (6), -0.06882 (6), -0.06809 (6), -0.03459 (6), -0.03039 (6), 
length of domains: 12
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0106    solve 0.2065    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0106    solve 0.2065    add 0.0010    
Current (lb-rhs): -0.6091846227645874
12 domains visited
Cumulative time: 0.24559998512268066

BaB round 2
batch: 12
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input.3, 254] [/input.3, 254] [/input, 154] [/input.3, 254] [/input, 154] [/input.3, 254] [/input.3, 254] [/input, 158] [/input, 158] 
split level 1: [/input, 154] [/input, 158] [/input.3, 192] [/input, 158] [/input, 154] [/input.3, 254] [/input, 158] [/input.3, 192] [/input, 154] [/input, 154] 
split level 2: [/input, 135] [/input, 154] [/input, 154] [/input, 135] [/input, 135] [/input, 135] [/input.3, 192] [/input, 135] [/input.3, 254] [/input.3, 254] 
pruning_in_iteration open status: True
ratio of positive domain = 91 / 96 = 0.9479166666666666
pruning-in-iteration extra time: 0.00926661491394043
Time: prepare 0.0110    bound 0.2062    transfer 0.0004    finalize 0.0053    func 0.2230    
Accumulated time: func 0.4295    prepare 0.0155    bound 0.4064    transfer 0.0007    finalize 0.0073    
Current worst splitting domains lb-rhs (depth):
-0.16174 (9), -0.15972 (9), -0.12932 (9), -0.12806 (9), -0.02082 (9), 
length of domains: 5
Time: pickout 0.0006    decision 0.0293    set_bounds 0.0131    solve 0.2231    add 0.0010    
Accumulated time: pickout 0.0010    decision 0.0523    set_bounds 0.0237    solve 0.4297    add 0.0020    
Current (lb-rhs): -0.16173970699310303
17 domains visited
Cumulative time: 0.5135891437530518

BaB round 3
batch: 5
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 254] [/input.3, 254] [/input, 135] [/input, 135] [/input.3, 254] 
split level 1: [/input, 209] [/input, 209] [/input, 209] [/input, 209] [/input, 209] 
split level 2: [/input, 254] [/input, 254] [/input.3, 192] [/input.3, 192] [/input, 254] 
split level 3: [/input, 245] [/input, 245] [/input.3, 19] [/input.3, 19] [/input, 245] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 7.295608520507812e-05
Time: prepare 0.0092    bound 0.0047    transfer 0.0001    finalize 0.0033    func 0.0173    
Accumulated time: func 0.4469    prepare 0.0252    bound 0.4111    transfer 0.0008    finalize 0.0106    
length of domains: 0
Time: pickout 0.0007    decision 0.0232    set_bounds 0.0132    solve 0.0174    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0754    set_bounds 0.0370    solve 0.4471    add 0.0021    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17 domains visited
Cumulative time: 0.5685782432556152


Properties batch 3, size 1
Remaining timeout: 115.13496470451355
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.91673523]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.91673523]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 26] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 31] 
split level 4: [/input.3, 74] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 64 = 0.9375
pruning-in-iteration extra time: 0.009848833084106445
Time: prepare 0.0036    bound 0.2086    transfer 0.0004    finalize 0.0028    func 0.2156    
Accumulated time: func 0.2156    prepare 0.0041    bound 0.2086    transfer 0.0004    finalize 0.0028    
Current worst splitting domains lb-rhs (depth):
-0.53942 (6), -0.13778 (6), -0.13023 (6), -0.00642 (6), 
length of domains: 4
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.2157    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0112    solve 0.2157    add 0.0011    
Current (lb-rhs): -0.5394216775894165
4 domains visited
Cumulative time: 0.25591540336608887

BaB round 2
batch: 4
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] [/input, 158] [/input, 158] 
split level 1: [/input, 154] [/input, 135] [/input, 154] [/input, 154] 
split level 2: [/input, 135] [/input, 50] [/input, 135] [/input, 135] 
split level 3: [/input, 209] [/input.3, 230] [/input.3, 230] [/input, 254] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 7.200241088867188e-05
Time: prepare 0.0074    bound 0.0046    transfer 0.0001    finalize 0.0026    func 0.0148    
Accumulated time: func 0.2304    prepare 0.0119    bound 0.2132    transfer 0.0006    finalize 0.0054    
length of domains: 0
Time: pickout 0.0009    decision 0.0245    set_bounds 0.0097    solve 0.0148    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0475    set_bounds 0.0208    solve 0.2306    add 0.0012    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.3061392307281494


Properties batch 4, size 1
Remaining timeout: 114.72785592079163
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.22802401]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.22802401]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 132] 
split level 2: [/input.3, 197] 
split level 3: [/input.3, 119] 
split level 4: [/input.3, 236] 
split level 5: [/input.3, 74] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 64 = 0.84375
pruning-in-iteration extra time: 0.00904393196105957
Time: prepare 0.0035    bound 0.1970    transfer 0.0004    finalize 0.0027    func 0.2038    
Accumulated time: func 0.2038    prepare 0.0040    bound 0.1970    transfer 0.0004    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.75732 (6), -0.65269 (6), -0.47226 (6), -0.46175 (6), -0.18427 (6), -0.12209 (6), -0.05716 (6), -0.03469 (6), -0.01714 (6), -0.00386 (6), 
length of domains: 10
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.2038    add 0.0012    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0112    solve 0.2038    add 0.0012    
Current (lb-rhs): -0.7573192119598389
10 domains visited
Cumulative time: 0.24410724639892578

BaB round 2
batch: 10
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input.3, 206] [/input, 158] [/input.3, 254] [/input, 158] [/input, 158] [/input, 158] [/input.3, 254] [/input, 158] [/input.3, 254] 
split level 1: [/input, 154] [/input.3, 254] [/input, 154] [/input, 158] [/input, 154] [/input, 154] [/input, 154] [/input, 158] [/input, 135] [/input.3, 217] 
split level 2: [/input, 135] [/input.3, 155] [/input, 135] [/input, 154] [/input.3, 254] [/input, 135] [/input, 135] [/input, 135] [/input.3, 254] [/input.3, 206] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 80 = 0.9625
pruning-in-iteration extra time: 0.009320259094238281
Time: prepare 0.0083    bound 0.2071    transfer 0.0004    finalize 0.0043    func 0.2202    
Accumulated time: func 0.4239    prepare 0.0128    bound 0.4041    transfer 0.0008    finalize 0.0070    
Current worst splitting domains lb-rhs (depth):
-0.19647 (9), -0.12689 (9), -0.01902 (9), 
length of domains: 3
Time: pickout 0.0009    decision 0.0283    set_bounds 0.0108    solve 0.2203    add 0.0011    
Accumulated time: pickout 0.0013    decision 0.0514    set_bounds 0.0219    solve 0.4241    add 0.0023    
Current (lb-rhs): -0.19646823406219482
13 domains visited
Cumulative time: 0.5060944557189941

BaB round 3
batch: 3
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 254] [/input, 135] [/input.3, 254] 
split level 1: [/input, 254] [/input, 209] [/input, 209] 
split level 2: [/input, 209] [/input.3, 206] [/input, 254] 
split level 3: [/input, 245] [/input, 245] [/input, 245] 
split level 4: [/input.3, 155] [/input.3, 155] [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0115    bound 0.0049    transfer 0.0001    finalize 0.0037    func 0.0203    
Accumulated time: func 0.4443    prepare 0.0248    bound 0.4090    transfer 0.0009    finalize 0.0107    
length of domains: 0
Time: pickout 0.0007    decision 0.0232    set_bounds 0.0173    solve 0.0204    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0746    set_bounds 0.0392    solve 0.4445    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
13 domains visited
Cumulative time: 0.5682075023651123


Properties batch 5, size 1
Remaining timeout: 114.06259512901306
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.89594603]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.89594603]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 119] 
split level 2: [/input, 154] 
split level 3: [/input.3, 74] 
split level 4: [/input.3, 216] 
split level 5: [/input.3, 155] 
pruning_in_iteration open status: True
ratio of positive domain = 57 / 64 = 0.890625
pruning-in-iteration extra time: 0.009396553039550781
Time: prepare 0.0068    bound 0.2079    transfer 0.0004    finalize 0.0029    func 0.2182    
Accumulated time: func 0.2182    prepare 0.0073    bound 0.2079    transfer 0.0004    finalize 0.0029    
Current worst splitting domains lb-rhs (depth):
-0.43961 (6), -0.33407 (6), -0.21019 (6), -0.20554 (6), -0.12859 (6), -0.02091 (6), -0.00535 (6), 
length of domains: 7
Time: pickout 0.0005    decision 0.0240    set_bounds 0.0117    solve 0.2183    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0240    set_bounds 0.0117    solve 0.2183    add 0.0009    
Current (lb-rhs): -0.4396148920059204
7 domains visited
Cumulative time: 0.25984930992126465

BaB round 2
batch: 7
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] [/input, 158] [/input, 254] [/input, 158] [/input, 158] [/input, 158] 
split level 1: [/input, 135] [/input, 135] [/input, 135] [/input.3, 206] [/input, 135] [/input, 135] [/input, 254] 
split level 2: [/input, 209] [/input, 209] [/input, 254] [/input, 245] [/input, 209] [/input, 209] [/input.3, 206] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.0066    bound 0.0045    transfer 0.0001    finalize 0.0021    func 0.0134    
Accumulated time: func 0.2317    prepare 0.0144    bound 0.2125    transfer 0.0005    finalize 0.0050    
length of domains: 0
Time: pickout 0.0007    decision 0.0257    set_bounds 0.0084    solve 0.0135    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0496    set_bounds 0.0200    solve 0.2318    add 0.0010    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.30841708183288574


Properties batch 6, size 1
Remaining timeout: 113.65001678466797
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.22279835]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.22279835]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 124] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 74] 
split level 4: [/input.3, 31] 
split level 5: [/input, 154] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 64 = 0.78125
pruning-in-iteration extra time: 0.009576082229614258
Time: prepare 0.0066    bound 0.2109    transfer 0.0003    finalize 0.0035    func 0.2216    
Accumulated time: func 0.2216    prepare 0.0071    bound 0.2109    transfer 0.0003    finalize 0.0035    
Current worst splitting domains lb-rhs (depth):
-0.61626 (6), -0.53048 (6), -0.41603 (6), -0.37214 (6), -0.21244 (6), -0.18188 (6), -0.17716 (6), -0.15055 (6), -0.14505 (6), -0.10141 (6), -0.09206 (6), -0.08976 (6), -0.08944 (6), -0.03301 (6), 
length of domains: 14
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0115    solve 0.2217    add 0.0014    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0115    solve 0.2217    add 0.0014    
Current (lb-rhs): -0.6162557601928711
14 domains visited
Cumulative time: 0.2625706195831299

BaB round 2
batch: 14
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 158] [/input, 158] [/input, 209] [/input, 158] [/input, 209] [/input.3, 132] [/input.3, 132] [/input, 158] [/input, 158] 
split level 1: [/input, 135] [/input, 209] [/input.3, 132] [/input.3, 132] [/input, 135] [/input.3, 132] [/input.3, 155] [/input.3, 155] [/input, 135] [/input, 135] 
pruning_in_iteration open status: True
ratio of positive domain = 46 / 56 = 0.8214285714285714
pruning-in-iteration extra time: 0.009819746017456055
Time: prepare 0.0065    bound 0.2127    transfer 0.0003    finalize 0.0031    func 0.2229    
Accumulated time: func 0.4445    prepare 0.0140    bound 0.4236    transfer 0.0006    finalize 0.0067    
Current worst splitting domains lb-rhs (depth):
-0.24317 (8), -0.16190 (8), -0.13338 (8), -0.12534 (8), -0.07661 (8), -0.07310 (8), -0.04581 (8), -0.04179 (8), -0.01735 (8), -0.00804 (8), 
length of domains: 10
Time: pickout 0.0006    decision 0.0298    set_bounds 0.0076    solve 0.2229    add 0.0009    
Accumulated time: pickout 0.0011    decision 0.0530    set_bounds 0.0191    solve 0.4446    add 0.0024    
Current (lb-rhs): -0.24317169189453125
24 domains visited
Cumulative time: 0.5249807834625244

BaB round 3
batch: 10
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input, 135] [/input.3, 155] [/input, 158] [/input, 254] [/input, 158] [/input, 209] [/input, 209] [/input, 209] [/input, 135] 
split level 1: [/input, 254] [/input.3, 133] [/input.3, 133] [/input.3, 155] [/input.3, 132] [/input.3, 155] [/input, 254] [/input, 254] [/input, 254] [/input, 254] 
split level 2: [/input, 245] [/input.3, 132] [/input.3, 165] [/input.3, 165] [/input.3, 155] [/input.3, 165] [/input, 245] [/input.3, 132] [/input, 245] [/input.3, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 8.726119995117188e-05
Time: prepare 0.0095    bound 0.0052    transfer 0.0001    finalize 0.0034    func 0.0183    
Accumulated time: func 0.4628    prepare 0.0241    bound 0.4289    transfer 0.0007    finalize 0.0101    
length of domains: 0
Time: pickout 0.0007    decision 0.0297    set_bounds 0.0134    solve 0.0184    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0827    set_bounds 0.0325    solve 0.4630    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
24 domains visited
Cumulative time: 0.5876119136810303


Properties batch 7, size 1
Remaining timeout: 112.9646909236908
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.30615377]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.30615377]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 150] 
split level 2: [/input.3, 162] 
split level 3: [/input.3, 30] 
split level 4: [/input.3, 119] 
split level 5: [/input.3, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.009451627731323242
Time: prepare 0.0035    bound 0.2033    transfer 0.0004    finalize 0.0027    func 0.2101    
Accumulated time: func 0.2101    prepare 0.0040    bound 0.2033    transfer 0.0004    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.61766 (6), -0.43155 (6), -0.34215 (6), -0.26497 (6), -0.22296 (6), -0.17064 (6), -0.15058 (6), -0.11959 (6), -0.11161 (6), -0.09551 (6), -0.05421 (6), 
length of domains: 11
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0111    solve 0.2102    add 0.0009    
Accumulated time: pickout 0.0005    decision 0.0232    set_bounds 0.0111    solve 0.2102    add 0.0009    
Current (lb-rhs): -0.6176589727401733
11 domains visited
Cumulative time: 0.250169038772583

BaB round 2
batch: 11
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 254] [/input, 254] [/input, 254] [/input, 154] [/input, 254] [/input, 254] [/input, 254] [/input, 158] [/input, 254] 
split level 1: [/input, 154] [/input, 154] [/input, 154] [/input, 245] [/input, 254] [/input, 154] [/input, 154] [/input, 245] [/input, 154] [/input, 245] 
split level 2: [/input, 135] [/input, 245] [/input, 245] [/input.3, 206] [/input.3, 206] [/input, 245] [/input, 245] [/input.3, 206] [/input, 135] [/input.3, 206] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 88 = 0.9772727272727273
pruning-in-iteration extra time: 0.009218692779541016
Time: prepare 0.0103    bound 0.2065    transfer 0.0003    finalize 0.0040    func 0.2211    
Accumulated time: func 0.4313    prepare 0.0147    bound 0.4098    transfer 0.0007    finalize 0.0067    
Current worst splitting domains lb-rhs (depth):
-0.06814 (9), -0.06204 (9), 
length of domains: 2
Time: pickout 0.0006    decision 0.0288    set_bounds 0.0119    solve 0.2213    add 0.0008    
Accumulated time: pickout 0.0011    decision 0.0520    set_bounds 0.0230    solve 0.4314    add 0.0017    
Current (lb-rhs): -0.06814205646514893
13 domains visited
Cumulative time: 0.5140707492828369

BaB round 3
batch: 2
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input, 135] 
split level 1: [/input, 245] [/input.3, 74] 
split level 2: [/input.3, 74] [/input, 245] 
split level 3: [/input.3, 206] [/input.3, 31] 
split level 4: [/input.3, 31] [/input.3, 155] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.082389831542969e-05
Time: prepare 0.0079    bound 0.0049    transfer 0.0001    finalize 0.0028    func 0.0157    
Accumulated time: func 0.4469    prepare 0.0231    bound 0.4147    transfer 0.0009    finalize 0.0095    
length of domains: 0
Time: pickout 0.0007    decision 0.0220    set_bounds 0.0118    solve 0.0157    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0740    set_bounds 0.0348    solve 0.4472    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
13 domains visited
Cumulative time: 0.5648345947265625


Properties batch 8, size 1
Remaining timeout: 112.30039143562317
##### Instance 468 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.40723121]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.99746943, -0.03045658,  0.00955695, -0.02313155, -0.01330739,
        -0.00129384,  0.00956611,  0.02351189, -0.00686999, -0.02128508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /15 start_node /18 with alignment adjustment
setting alpha for layer /17 start_node /18 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 256]), torch.Size([1, 1, 256])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.40723121]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/18
Keeping alphas for these layers: ['/18']
Node /15 input 0: size torch.Size([256]) unstable 15
Node /17 input 0: size torch.Size([256]) unstable 80
-----------------
# of unstable neurons: 95
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 1] 
split level 1: [/input.3, 80] 
split level 2: [/input.3, 119] 
split level 3: [/input.3, 26] 
split level 4: [/input.3, 159] 
split level 5: [/input.3, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 38 / 64 = 0.59375
pruning-in-iteration extra time: 0.009422540664672852
Time: prepare 0.0035    bound 0.2062    transfer 0.0004    finalize 0.0023    func 0.2126    
Accumulated time: func 0.2126    prepare 0.0041    bound 0.2062    transfer 0.0004    finalize 0.0023    
Current worst splitting domains lb-rhs (depth):
-0.78485 (6), -0.48557 (6), -0.48507 (6), -0.42707 (6), -0.42273 (6), -0.41401 (6), -0.35122 (6), -0.31251 (6), -0.30830 (6), -0.27616 (6), -0.27577 (6), -0.26831 (6), -0.26041 (6), -0.25221 (6), -0.24519 (6), -0.20942 (6), -0.16153 (6), -0.11412 (6), -0.11194 (6), -0.09116 (6), 
length of domains: 26
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0109    solve 0.2127    add 0.0014    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0109    solve 0.2127    add 0.0014    
Current (lb-rhs): -0.7848513126373291
26 domains visited
Cumulative time: 0.2532823085784912

BaB round 2
batch: 26
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 158] [/input, 135] [/input, 158] [/input, 135] [/input, 158] [/input, 135] [/input, 135] [/input, 135] [/input, 158] [/input, 135] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 52 = 0.6923076923076923
pruning-in-iteration extra time: 0.009473085403442383
Time: prepare 0.0063    bound 0.2083    transfer 0.0003    finalize 0.0026    func 0.2176    
Accumulated time: func 0.4302    prepare 0.0109    bound 0.4146    transfer 0.0006    finalize 0.0049    
Current worst splitting domains lb-rhs (depth):
-0.57601 (7), -0.28373 (7), -0.27926 (7), -0.23580 (7), -0.19435 (7), -0.16729 (7), -0.14433 (7), -0.14253 (7), -0.13942 (7), -0.12869 (7), -0.12792 (7), -0.12744 (7), -0.12534 (7), -0.10536 (7), -0.09412 (7), -0.01082 (7), 
length of domains: 16
Time: pickout 0.0007    decision 0.0372    set_bounds 0.0055    solve 0.2179    add 0.0013    
Accumulated time: pickout 0.0012    decision 0.0606    set_bounds 0.0163    solve 0.4306    add 0.0027    
Current (lb-rhs): -0.5760135054588318
42 domains visited
Cumulative time: 0.5164322853088379

BaB round 3
batch: 16
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 154] [/input.3, 254] [/input, 154] [/input, 154] [/input, 158] [/input, 154] [/input, 158] [/input, 135] [/input, 158] [/input.3, 254] 
split level 1: [/input, 135] [/input.3, 132] [/input, 135] [/input, 135] [/input.3, 254] [/input.3, 74] [/input.3, 254] [/input, 154] [/input.3, 254] [/input, 158] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.009323596954345703
Time: prepare 0.0076    bound 0.2072    transfer 0.0004    finalize 0.0036    func 0.2188    
Accumulated time: func 0.6491    prepare 0.0189    bound 0.6218    transfer 0.0010    finalize 0.0085    
Current worst splitting domains lb-rhs (depth):
-0.26915 (9), -0.15632 (9), -0.09438 (9), -0.05224 (9), -0.03819 (9), -0.02744 (9), -0.02655 (9), -0.02240 (9), 
length of domains: 8
Time: pickout 0.0008    decision 0.0315    set_bounds 0.0087    solve 0.2189    add 0.0011    
Accumulated time: pickout 0.0020    decision 0.0921    set_bounds 0.0250    solve 0.6495    add 0.0038    
Current (lb-rhs): -0.2691475749015808
50 domains visited
Cumulative time: 0.7780411243438721

BaB round 4
batch: 8
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 209] [/input.3, 132] [/input, 35] [/input, 158] [/input, 209] [/input.3, 254] [/input.3, 74] [/input, 209] 
split level 1: [/input, 254] [/input.3, 74] [/input.3, 74] [/input.3, 74] [/input, 254] [/input.3, 74] [/input.3, 132] [/input, 254] 
split level 2: [/input.3, 74] [/input.3, 19] [/input.3, 132] [/input.3, 19] [/input.3, 74] [/input.3, 132] [/input.3, 19] [/input.3, 74] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0003643035888671875
Time: prepare 0.0074    bound 0.0129    transfer 0.0002    finalize 0.0025    func 0.0232    
Accumulated time: func 0.6722    prepare 0.0268    bound 0.6348    transfer 0.0012    finalize 0.0110    
length of domains: 0
Time: pickout 0.0008    decision 0.0271    set_bounds 0.0096    solve 0.0232    add 0.0001    
Accumulated time: pickout 0.0028    decision 0.1192    set_bounds 0.0346    solve 0.6727    add 0.0039    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 0.8391573429107666

Result: safe in 8.6359 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 469, vnnlib ID: 469 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01317740,  0.55863166,  0.04537576, -0.01276928,  0.02465167,
          0.05543208,  0.00404027,  0.07428306,  0.24348539, -0.00135604]],
       device='cuda:0')
diversed PGD initialization time: 0.1430
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01777213, -0.01454244,  0.00904430, -0.00619042, -0.00865306,
           0.01299999, -0.00757442, -0.03069130,  1.02470374, -0.00688639],
         [-0.01777213, -0.01454244,  0.00904430, -0.00619042, -0.00865306,
           0.01299999, -0.00757442, -0.03069130,  1.02470374, -0.00688639]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00322969, -0.02358674, -0.00835202, -0.00588938, -0.02754243,
          -0.00696802,  0.01614886, -1.03924620, -0.00765605]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1530 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2311 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 470, vnnlib ID: 470 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.30719790e-03, -8.52128863e-03,  2.80328095e-03,  9.81590033e-01,
         -2.07764618e-02,  3.05589810e-02, -4.64643538e-03, -1.83051676e-02,
          3.43650579e-04,  1.34856254e-03]], device='cuda:0')
diversed PGD initialization time: 0.1265
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03640844, -0.04421134, -0.04674566,  0.54337418, -0.02513849,
          -0.13844985, -0.01617342, -0.04870410,  0.82508194, -0.04803294],
         [-0.03640844, -0.04421134, -0.04674566,  0.54337418, -0.02513849,
          -0.13844985, -0.01617342, -0.04870410,  0.82508194, -0.04803294]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.57978261,  0.58758551,  0.59011984,  0.56851268,  0.68182403,
           0.55954760,  0.59207827, -0.28170776,  0.59140712]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1354 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1965 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 471, vnnlib ID: 471 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03412743,  0.45225686,  0.02449232, -0.08024189,  0.05453574,
          0.16051528,  0.00734667,  0.07651003,  0.35557100, -0.03269525]],
       device='cuda:0')
diversed PGD initialization time: 0.1331
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1417 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2092 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 472, vnnlib ID: 472 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.55021113e-03, -6.99620694e-03, -1.02758408e-04,  9.88011837e-01,
         -1.58091970e-02,  2.06539631e-02, -4.39637154e-03, -1.56272352e-02,
          2.02611089e-04,  1.87027454e-03]], device='cuda:0')
diversed PGD initialization time: 0.1351
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00784439,  0.00105380, -0.03825143, -0.00678254, -0.01068304,
          -0.01617912, -0.00646240, -1.00761104, -0.00757756]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1438 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2125 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 473, vnnlib ID: 473 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00136350,  0.00236544,  0.01157884,  0.00582973,  0.96593964,
          0.00314806,  0.00360037, -0.01754083,  0.00345903, -0.00830913]],
       device='cuda:0')
diversed PGD initialization time: 0.1438
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.85197210,  0.02117815,  0.01833871,  0.02846003,  0.02163410,
          -0.01638420, -0.06589007,  0.07576179,  0.01077994,  0.02372444],
         [ 0.85197210,  0.02117815,  0.01833871,  0.02846003,  0.02163410,
          -0.01638420, -0.06589007,  0.07576179,  0.01077994,  0.02372444]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-8.30338001e-01,  4.55949455e-04,  3.29538807e-03, -6.82593510e-03,
           3.80182974e-02,  8.75241607e-02, -5.41276895e-02,  1.08541586e-02,
          -2.09033862e-03]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1527 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2031 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 474, vnnlib ID: 474 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02478567, -0.02826389,  0.52817822,  0.07384763, -0.01331760,
         -0.03906674, -0.00764049,  0.52399600, -0.01668038, -0.03702526]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02478567, -0.02826389,  0.52817816,  0.07384760, -0.01331760,
          -0.03906672, -0.00764050,  0.52399600, -0.01668039, -0.03702524],
         [-0.02478567, -0.02826389,  0.52817816,  0.07384760, -0.01331760,
          -0.03906672, -0.00764050,  0.52399600, -0.01668039, -0.03702524]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.54878169,  0.55225986, -0.00418216,  0.45014840,  0.53731358,
           0.56306273,  0.53163648,  0.54067636,  0.56102121]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0899 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 475, vnnlib ID: 475 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.58733940e-03, -1.53814107e-02,  1.00918388e+00, -8.87176394e-03,
          3.46996263e-03,  1.42358989e-03, -8.65051150e-03, -1.38064772e-02,
         -9.00119543e-04, -4.48805094e-03]], device='cuda:0')
diversed PGD initialization time: 0.1322
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.35897976e-03, -2.71084309e-02,  8.49273801e-03, -1.60406083e-02,
          -1.28274001e-02,  1.69594288e-02,  9.84746963e-04, -2.85582393e-02,
           1.02127683e+00, -1.69763044e-02],
         [ 9.35897976e-03, -2.71084309e-02,  8.49273801e-03, -1.60406083e-02,
          -1.28274001e-02,  1.69594288e-02,  9.84746963e-04, -2.85582393e-02,
           1.02127683e+00, -1.69763044e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-8.66241753e-04,  3.56011689e-02,  2.45333463e-02,  2.13201381e-02,
          -8.46669078e-03,  7.50799105e-03,  3.70509773e-02, -1.01278412e+00,
           2.54690424e-02]]], device='cuda:0')
number of violation:  3
Attack finished in 0.1407 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 476, vnnlib ID: 476 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01492308,  0.05733825,  0.37085789,  0.02586712, -0.01004310,
          0.01136025, -0.00313446,  0.54066110, -0.00858325, -0.01509056]],
       device='cuda:0')
diversed PGD initialization time: 0.1268
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.09053995,  0.04497446,  0.98077393, -0.03589571, -0.04609505,
          -0.00208409, -0.00360222,  0.07630222, -0.07997125, -0.01805051],
         [-0.09053995,  0.04497446,  0.98077393, -0.03589571, -0.04609505,
          -0.00208409, -0.00360222,  0.07630222, -0.07997125, -0.01805051]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.16684216,  0.03132777, -0.90447170,  0.11219793,  0.12239727,
           0.07838631,  0.07990444,  0.15627347,  0.09435273]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1350 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1834 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 477, vnnlib ID: 477 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00186459,  0.68124133,  0.03142542, -0.00356638,  0.02009677,
          0.08896695,  0.01520108,  0.07590723,  0.05995013,  0.01889884]],
       device='cuda:0')
diversed PGD initialization time: 0.1303
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01362845, -0.02591565,  0.00890401, -0.01505810, -0.00943696,
           0.01383169, -0.01027986, -0.02945848,  1.02637231, -0.01794429],
         [ 0.01362845, -0.02591565,  0.00890401, -0.01505810, -0.00943696,
           0.01383169, -0.01027986, -0.02945848,  1.02637231, -0.01794429]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03954410, -0.03481966, -0.01085755, -0.01647869, -0.03974734,
          -0.01563580,  0.00354283, -1.05228794, -0.00797136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1422 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2136 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 478, vnnlib ID: 478 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01374277,  0.17814514,  0.49514258,  0.05532409,  0.00270046,
          0.03335255, -0.03970944, -0.00128426,  0.24835977,  0.01041574]],
       device='cuda:0')
diversed PGD initialization time: 0.1342
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02482462,  0.07019288, -0.07884797,  0.61461318, -0.02276670,
          -0.14690232, -0.01687358, -0.05207679,  0.65306413, -0.02257010],
         [-0.02482462,  0.07019288, -0.07884797,  0.61461318, -0.02276670,
          -0.14690232, -0.01687358, -0.05207679,  0.65306413, -0.02257010]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.05402335, -0.14904085, -0.69346118, -0.05608128,  0.06805435,
          -0.06197440, -0.02677119, -0.73191214, -0.05627788]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1431 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2328 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 479, vnnlib ID: 479 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.06289636.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.015724092721939087, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 7.21611083e-04,  9.49629486e-01,  7.62720406e-03, -2.22693384e-03,
         -4.09531221e-03,  5.59127331e-03, -3.82230431e-03,  7.24630058e-03,
          4.28546220e-03,  1.30501166e-02]], device='cuda:0')
diversed PGD initialization time: 0.1393
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02418032, -0.02021322,  0.01068665, -0.00354595, -0.00831161,
           0.01612949, -0.00569555, -0.02849793,  1.02199244, -0.00396612],
         [-0.02418032, -0.02021322,  0.01068665, -0.00354595, -0.00831161,
           0.01612949, -0.00569555, -0.02849793,  1.02199244, -0.00396612]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00396710, -0.03089987, -0.01666726, -0.01190161, -0.03634270,
          -0.01451766,  0.00828472, -1.04220569, -0.01624709]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1510 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2364 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 480, vnnlib ID: 480 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.09311917,  0.02217334,  0.15639600,  0.01034617,  0.00648752,
          0.06861244, -0.02609330,  0.04599924,  0.84079707, -0.06670345]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.09311919,  0.02217334,  0.15639600,  0.01034617,  0.00648753,
           0.06861244, -0.02609330,  0.04599924,  0.84079707, -0.06670347],
         [-0.09311919,  0.02217334,  0.15639600,  0.01034617,  0.00648753,
           0.06861244, -0.02609330,  0.04599924,  0.84079707, -0.06670347]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13911843,  0.02382591, -0.11039676,  0.03565307,  0.03951172,
          -0.02261320,  0.07209255, -0.79479784,  0.11270271]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0864 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 481, vnnlib ID: 481 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00261925, -0.03823872,  0.93680018,  0.14038488,  0.00300113,
         -0.05760757,  0.00097384, -0.03330986,  0.00510344, -0.00354463]],
       device='cuda:0')
diversed PGD initialization time: 0.1255
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01425089, -0.06853668,  0.20621493,  0.80657291, -0.02653167,
          -0.09826311, -0.00539878, -0.16081388,  0.31247038, -0.03053294],
         [ 0.01425089, -0.06853668,  0.20621493,  0.80657291, -0.02653167,
          -0.09826311, -0.00539878, -0.16081388,  0.31247038, -0.03053294]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19196405,  0.27475160, -0.60035801,  0.23274660,  0.30447805,
           0.21161371,  0.36702883, -0.10625544,  0.23674788]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1333 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1989 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 482, vnnlib ID: 482 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03002644,  0.31026673, -0.04373890, -0.07183515, -0.01271186,
         -0.02400611, -0.02815097, -0.02272771,  0.92503834, -0.02054040]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03002646,  0.31026679, -0.04373893, -0.07183510, -0.01271186,
          -0.02400614, -0.02815098, -0.02272771,  0.92503846, -0.02054042],
         [-0.03002646,  0.31026679, -0.04373893, -0.07183510, -0.01271186,
          -0.02400614, -0.02815098, -0.02272771,  0.92503846, -0.02054042]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.34029326,  0.35400572,  0.38210189,  0.32297865,  0.33427292,
           0.33841777,  0.33299452, -0.61477166,  0.33080721]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0882 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 483, vnnlib ID: 483 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99177587, -0.00557044,  0.01663305, -0.01251441, -0.00656943,
          0.01704852, -0.00328476, -0.02342166,  0.00643829, -0.00487690]],
       device='cuda:0')
diversed PGD initialization time: 0.1347
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1433 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2294 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 484, vnnlib ID: 484 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00547820,  0.00586290,  0.02534002,  0.00313561,  0.10708596,
          0.02326452,  0.00590358, -0.00553773,  0.01978920,  0.81240755]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00547820,  0.00586290,  0.02534002,  0.00313561,  0.10708614,
           0.02326453,  0.00590359, -0.00553776,  0.01978920,  0.81240737],
         [ 0.00547820,  0.00586290,  0.02534002,  0.00313561,  0.10708614,
           0.02326453,  0.00590359, -0.00553776,  0.01978920,  0.81240737]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.10160793,  0.10122324,  0.08174612,  0.10395053,  0.08382160,
           0.10118255,  0.11262390,  0.08729694, -0.70532125]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1268 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 485, vnnlib ID: 485 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01801331, 0.59313273, 0.05676135, 0.03640947, 0.02063970, 0.04237539,
         0.01868299, 0.07147086, 0.04114981, 0.06615141]], device='cuda:0')
diversed PGD initialization time: 0.1274
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04232660, -0.04581849, -0.11482118, -0.14739057,  0.32927471,
          -0.09415393, -0.11544082,  0.71292031,  0.56224662, -0.10602395],
         [-0.04232660, -0.04581849, -0.11482118, -0.14739057,  0.32927471,
          -0.09415393, -0.11544082,  0.71292031,  0.56224662, -0.10602395]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00349189,  0.06900269,  0.10157208, -0.37509322,  0.04833544,
           0.06962232, -0.75873882, -0.60806513,  0.06020546]]],
       device='cuda:0')
number of violation:  4
Attack finished in 0.1375 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2431 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 486, vnnlib ID: 486 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04426912,  0.00177506,  0.02267720, -0.05619574,  0.32591939,
          0.00356799, -0.03527646, -0.01235071,  0.74043584, -0.05858587]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.04426913,  0.00177507,  0.02267720, -0.05619578,  0.32591945,
           0.00356799, -0.03527644, -0.01235074,  0.74043578, -0.05858588],
         [ 0.04426913,  0.00177507,  0.02267720, -0.05619578,  0.32591945,
           0.00356799, -0.03527644, -0.01235074,  0.74043578, -0.05858588]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.28165033,  0.32414436,  0.30324227,  0.38211524,  0.32235146,
           0.36119589,  0.33827019, -0.41451633,  0.38450533]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0693 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 487, vnnlib ID: 487 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01205633, -0.02843273, -0.00317416, -0.08377323,  0.00615108,
          0.03920468, -0.00590279, -0.05243538,  0.56387424,  0.59609097]],
       device='cuda:0')
diversed PGD initialization time: 0.1344
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1425 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1885 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 488, vnnlib ID: 488 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02397058, -0.00284422,  0.02075592, -0.00400393,  0.00301250,
          0.57059008,  0.44285226, -0.00785710,  0.02232851, -0.00947075]],
       device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1357 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1869 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 489, vnnlib ID: 489 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00875648, -0.01185761, -0.00361545, -0.01604903,  0.02551202,
          0.03855811,  0.01157973, -0.02235706,  0.04287263,  0.94554514]],
       device='cuda:0')
diversed PGD initialization time: 0.1244
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1880 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 490, vnnlib ID: 490 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00257349, -0.00601445,  0.00264065, -0.00629757, -0.00142177,
         -0.00368747, -0.00418250, -0.00936003,  0.00149123, -0.00514232]],
       device='cuda:0')
diversed PGD initialization time: 0.1243
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.23314129, -0.03682935,  0.04176700, -0.04997978, -0.01481711,
          -0.03621718,  0.04572129,  0.00286306,  0.81165582, -0.02128751],
         [ 0.23314129, -0.03682935,  0.04176700, -0.04997978, -0.01481711,
          -0.03621718,  0.04572129,  0.00286306,  0.81165582, -0.02128751]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.26997066,  0.19137429,  0.28312105,  0.24795839,  0.26935846,
           0.18742000,  0.23027822, -0.57851452,  0.25442880]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1333 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 491, vnnlib ID: 491 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.96980720e-02,  6.55265898e-03,  1.01532191e-02,  1.04819909e-02,
         -1.59818679e-04,  9.96631384e-03,  9.08596992e-01,  8.48148763e-03,
          1.06326714e-02,  1.61865428e-02]], device='cuda:0')
diversed PGD initialization time: 0.1264
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2019 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 492, vnnlib ID: 492 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.26963985e-05, -2.61293575e-02, -5.81409037e-03, -7.91900456e-02,
         -3.18015926e-02,  1.67093426e-03, -4.22219858e-02, -6.13988489e-02,
          7.54158437e-01,  4.60421145e-01]], device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.27112997e-05, -2.61293501e-02, -5.81410527e-03, -7.91901052e-02,
          -3.18016000e-02,  1.67093426e-03, -4.22219634e-02, -6.13988638e-02,
           7.54158378e-01,  4.60421264e-01],
         [-9.27112997e-05, -2.61293501e-02, -5.81410527e-03, -7.91901052e-02,
          -3.18016000e-02,  1.67093426e-03, -4.22219634e-02, -6.13988638e-02,
           7.54158378e-01,  4.60421264e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.46051398,  0.48655063,  0.46623537,  0.53961134,  0.49222288,
           0.45875034,  0.50264323,  0.52182013, -0.29373711]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1086 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 493, vnnlib ID: 493 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.95579857,  0.00349995, -0.02815531, -0.04043993,  0.01349273,
          0.10159409, -0.01509101,  0.01496743, -0.00158797, -0.00321724]],
       device='cuda:0')
diversed PGD initialization time: 0.1482
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.94184411e-01, -4.38100547e-02,  7.70121813e-03,  7.60808587e-04,
          -4.97293882e-02,  8.24756145e-01, -4.17356193e-02, -3.89554352e-02,
           1.30162284e-01, -3.27514410e-02],
         [ 3.94184411e-01, -4.38100547e-02,  7.70121813e-03,  7.60808587e-04,
          -4.97293882e-02,  8.24756145e-01, -4.17356193e-02, -3.89554352e-02,
           1.30162284e-01, -3.27514410e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.43799448,  0.38648319,  0.39342362,  0.44391379, -0.43057173,
           0.43592003,  0.43313986,  0.26402211,  0.42693585]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1595 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2095 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 494, vnnlib ID: 494 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.01615417e-04,  9.49781060e-01,  5.56218624e-03, -1.59772485e-03,
         -3.08582187e-03, -1.30290538e-03,  1.91283226e-03,  8.67168605e-03,
          5.15612960e-03,  7.04277307e-03]], device='cuda:0')
diversed PGD initialization time: 0.1329
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00805951, -0.02766102,  0.00729947, -0.01379187, -0.01103442,
           0.01793019,  0.00338143, -0.03105463,  1.01738453, -0.01380499],
         [ 0.00805951, -0.02766102,  0.00729947, -0.01379187, -0.01103442,
           0.01793019,  0.00338143, -0.03105463,  1.01738453, -0.01380499]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03572052, -0.03496049, -0.01386914, -0.01662660, -0.04559121,
          -0.03104245,  0.00339361, -1.04504550, -0.01385603]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1411 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2265 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 495, vnnlib ID: 495 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.56233492e-03, -7.18774647e-03, -3.23508680e-03, -1.13662630e-02,
         -2.12274380e-02,  1.03046751e+00,  9.87559557e-04, -2.69154310e-02,
         -9.31441039e-03, -2.46027857e-03]], device='cuda:0')
diversed PGD initialization time: 0.1409
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03605540, -0.02845731, -0.01728171,  0.00466652, -0.01349399,
           0.09747797, -0.03496969, -0.02337138,  1.04461348, -0.02786629],
         [-0.03605540, -0.02845731, -0.01728171,  0.00466652, -0.01349399,
           0.09747797, -0.03496969, -0.02337138,  1.04461348, -0.02786629]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.13353337,  0.12593527,  0.11475968,  0.09281144,  0.11097196,
           0.13244766,  0.12084935, -0.94713551,  0.12534425]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1492 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2186 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 496, vnnlib ID: 496 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.50537622e-04,  3.26002389e-03,  1.35177523e-02,  3.39458883e-03,
         -6.88602403e-03,  1.22466609e-02, -2.83263624e-04, -1.37752593e-02,
          1.31108537e-02,  9.77412224e-01]], device='cuda:0')
diversed PGD initialization time: 0.1278
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1363 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1830 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 497, vnnlib ID: 497 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03869046, -0.02886726,  0.02084219, -0.04594630,  0.00341555,
          0.07732368,  0.01539189,  0.33608413,  0.65644181, -0.04084207]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03869044, -0.02886727,  0.02084219, -0.04594631,  0.00341554,
           0.07732365,  0.01539189,  0.33608404,  0.65644193, -0.04084203],
         [-0.03869044, -0.02886727,  0.02084219, -0.04594631,  0.00341554,
           0.07732365,  0.01539189,  0.33608404,  0.65644193, -0.04084203]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.37477449,  0.36495131,  0.31524184,  0.38203037,  0.33266848,
           0.25876039,  0.32069215, -0.32035789,  0.37692606]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1020 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 498, vnnlib ID: 498 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00482354, -0.03202436,  0.02438278,  0.39498985, -0.02149146,
          0.09238663,  0.00450588, -0.06386600,  0.11901174,  0.47293001]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00482354, -0.03202436,  0.02438278,  0.39498985, -0.02149146,
           0.09238663,  0.00450588, -0.06386600,  0.11901172,  0.47293007],
         [-0.00482354, -0.03202436,  0.02438278,  0.39498985, -0.02149146,
           0.09238663,  0.00450588, -0.06386600,  0.11901172,  0.47293007]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39981338,  0.42701420,  0.37060708,  0.41648132,  0.30260321,
           0.39048398,  0.45885587,  0.27597815, -0.07794023]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0515 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 499, vnnlib ID: 499 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03556190, -0.04691835, -0.03241859, -0.02769732,  0.35800764,
         -0.01774925,  0.04928134, -0.04002847,  0.70659661,  0.05064441]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03556189, -0.04691835, -0.03241859, -0.02769731,  0.35800767,
          -0.01774926,  0.04928133, -0.04002847,  0.70659661,  0.05064430],
         [-0.03556189, -0.04691835, -0.03241859, -0.02769731,  0.35800767,
          -0.01774926,  0.04928133, -0.04002847,  0.70659661,  0.05064430]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.39356956,  0.40492600,  0.39042628,  0.38570499,  0.37575692,
           0.30872634,  0.39803612, -0.34858894,  0.30736336]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0575 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 500, vnnlib ID: 500 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01150683, -0.01610269, -0.00306149, -0.03153126,  0.01225165,
          0.04176353,  0.01126331, -0.02621265,  0.13452750,  0.88739055]],
       device='cuda:0')
diversed PGD initialization time: 0.1343
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1423 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3035 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 501, vnnlib ID: 501 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.08397295,  0.02266873,  0.04142882,  0.00876465, -0.08438124,
          0.15891019,  0.60183179, -0.00835173,  0.26585412,  0.07268068]],
       device='cuda:0')
diversed PGD initialization time: 0.1260
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03583855, -0.00273605,  0.02022009, -0.02373962, -0.01870201,
           0.99537128,  0.01654622, -0.04400514,  0.02621528,  0.01525781],
         [-0.03583855, -0.00273605,  0.02022009, -0.02373962, -0.01870201,
           0.99537128,  0.01654622, -0.04400514,  0.02621528,  0.01525781]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.05238477,  0.01928227, -0.00367387,  0.04028584,  0.03524823,
          -0.97882509,  0.06055136, -0.00966906,  0.00128841]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1966 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 502, vnnlib ID: 502 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.97347626e-03,  2.57357955e-04,  7.04175234e-03,  7.11183995e-03,
         -3.28106061e-03,  5.36067039e-03,  1.00005913e+00, -2.64988840e-03,
          3.72863561e-03,  6.38002902e-03]], device='cuda:0')
diversed PGD initialization time: 0.1265
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03305795, -0.04491407,  0.00343712, -0.01631254, -0.00861967,
           0.02364384,  0.46334791,  0.02554553,  0.56909555,  0.01184038],
         [-0.03305795, -0.04491407,  0.00343712, -0.01631254, -0.00861967,
           0.02364384,  0.46334791,  0.02554553,  0.56909555,  0.01184038]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.49640587,  0.50826198,  0.45991081,  0.47966045,  0.47196758,
           0.43970406,  0.43780237, -0.10574764,  0.45150754]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1349 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2037 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 503, vnnlib ID: 503 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.61056796e-03, -9.77203995e-03, -8.89331102e-04, -2.84591317e-03,
         -1.79752223e-02,  1.02533817e+00,  8.98741186e-04, -2.36608237e-02,
         -7.94053078e-03, -2.87990272e-03]], device='cuda:0')
diversed PGD initialization time: 0.1396
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1484 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1957 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 504, vnnlib ID: 504 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.05093278,  0.00390756,  0.01547405, -0.06310171,  0.28507027,
         -0.00315005, -0.02618113, -0.01326655,  0.67032743,  0.05513766]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.05093279,  0.00390757,  0.01547407, -0.06310174,  0.28507042,
          -0.00315005, -0.02618113, -0.01326658,  0.67032743,  0.05513747],
         [ 0.05093279,  0.00390757,  0.01547407, -0.06310174,  0.28507042,
          -0.00315005, -0.02618113, -0.01326658,  0.67032743,  0.05513747]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23413762,  0.28116286,  0.26959634,  0.34817216,  0.28822047,
           0.31125155,  0.29833698, -0.38525701,  0.22993295]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 505, vnnlib ID: 505 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.81517434e-01,  2.90490687e-04,  5.86581230e-03, -2.27969140e-03,
          1.79883465e-03,  9.70728695e-03, -2.13508084e-02, -1.34120882e-03,
          4.39714640e-03, -1.42990053e-03]], device='cuda:0')
diversed PGD initialization time: 0.1542
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1628 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2122 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 506, vnnlib ID: 506 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.22544783, 0.01502139, 0.03795181, 0.02387018, 0.04789053, 0.09552716,
         0.03190587, 0.32026243, 0.04172216, 0.14430043]], device='cuda:0')
diversed PGD initialization time: 0.1280
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99236035, -0.02306419, -0.03174950,  0.01895075, -0.00109996,
          -0.02237639, -0.01506470,  0.09513099, -0.03422143, -0.02252404],
         [ 0.99236035, -0.02306419, -0.03174950,  0.01895075, -0.00109996,
          -0.02237639, -0.01506470,  0.09513099, -0.03422143, -0.02252404]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.89722937,  0.11819518,  0.12688050,  0.07618024,  0.09623094,
           0.11750738,  0.11019569,  0.12935242,  0.11765502]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1850 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 507, vnnlib ID: 507 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00649958, 0.01086822, 0.03356670, 0.03262275, 0.67480171, 0.02563027,
         0.01232203, 0.04600763, 0.01861314, 0.13531142]], device='cuda:0')
diversed PGD initialization time: 0.1253
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.33830035e-04,  3.57004255e-03,  1.15844905e-02,  4.14562225e-03,
          -8.12043622e-03,  1.11194327e-02,  9.42684710e-05, -9.01080668e-03,
           1.16319954e-02,  9.77800250e-01],
         [-7.33830035e-04,  3.57004255e-03,  1.15844905e-02,  4.14562225e-03,
          -8.12043622e-03,  1.11194327e-02,  9.42684710e-05, -9.01080668e-03,
           1.16319954e-02,  9.77800250e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-7.38660619e-03, -1.16904788e-02, -1.97049268e-02, -1.22660585e-02,
          -1.92398690e-02, -8.21470469e-03,  8.90370458e-04, -1.97524317e-02,
          -9.85920668e-01]]], device='cuda:0')
number of violation:  8
Attack finished in 0.1343 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1914 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 508, vnnlib ID: 508 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99658984, -0.03350802,  0.01776271, -0.02017254, -0.01269151,
         -0.00538039,  0.00765723,  0.02541932, -0.01227979, -0.01802772]],
       device='cuda:0')
diversed PGD initialization time: 0.1567
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.51354700, -0.05979225,  0.07340283, -0.03724539, -0.00931295,
          -0.00943208, -0.01191741,  0.02490792,  0.51556194, -0.01699556],
         [ 0.51354700, -0.05979225,  0.07340283, -0.03724539, -0.00931295,
          -0.00943208, -0.01191741,  0.02490792,  0.51556194, -0.01699556]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.57333922,  0.44014418,  0.55079240,  0.52285993,  0.52297908,
           0.52546442,  0.48863909, -0.00201494,  0.53054255]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1728 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2218 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 509, vnnlib ID: 509 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01386148,  0.45948559,  0.03426546, -0.04223724,  0.02391554,
          0.06177438, -0.01457604,  0.07245246,  0.40985647, -0.01309127]],
       device='cuda:0')
diversed PGD initialization time: 0.1462
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02387867, -0.02041353,  0.00882646, -0.00326911, -0.00736962,
           0.01274049, -0.00346635, -0.02515164,  1.01930904, -0.00124671],
         [-0.02387867, -0.02041353,  0.00882646, -0.00326911, -0.00736962,
           0.01274049, -0.00346635, -0.02515164,  1.01930904, -0.00124671]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00346514, -0.02924000, -0.01714442, -0.01304391, -0.03315402,
          -0.01694719,  0.00473811, -1.03972256, -0.01916683]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1573 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2374 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 510, vnnlib ID: 510 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-6.37970120e-03, -8.50880146e-03,  1.63559616e-03,  9.82536077e-01,
         -1.85104124e-02,  3.05604562e-02, -4.72303480e-03, -1.77301019e-02,
          7.12789595e-04,  1.36420876e-03]], device='cuda:0')
diversed PGD initialization time: 0.1240
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.30470221e-02, -3.27513590e-02, -2.15595663e-02,  7.66281486e-02,
          -6.01153448e-03,  4.54831123e-03, -1.41257271e-02, -2.74897516e-02,
           1.02892506e+00, -7.54624605e-04],
         [-4.30470221e-02, -3.27513590e-02, -2.15595663e-02,  7.66281486e-02,
          -6.01153448e-03,  4.54831123e-03, -1.41257271e-02, -2.74897516e-02,
           1.02892506e+00, -7.54624605e-04]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.11967517,  0.10937951,  0.09818771,  0.08263968,  0.07207984,
           0.09075388,  0.10411790, -0.95229691,  0.07738277]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2166 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 511, vnnlib ID: 511 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03713224,  0.39098662,  0.02043273, -0.08924502,  0.08173912,
          0.15033187, -0.00245491,  0.07454623,  0.44132593, -0.04289024]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03713224,  0.39098656,  0.02043271, -0.08924504,  0.08173911,
           0.15033188, -0.00245493,  0.07454622,  0.44132602, -0.04289024],
         [-0.03713224,  0.39098656,  0.02043271, -0.08924504,  0.08173911,
           0.15033188, -0.00245493,  0.07454622,  0.44132602, -0.04289024]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42811880,  0.37055385,  0.48023158,  0.30924743,  0.24065468,
           0.39344150,  0.31644034, -0.05033946,  0.43387681]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 512, vnnlib ID: 512 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.88688967e-03, -7.24281371e-03, -1.19611621e-03,  9.89709973e-01,
         -1.41550489e-02,  2.13756263e-02, -4.54297289e-03, -1.51005983e-02,
          3.42383981e-04,  1.72211975e-03]], device='cuda:0')
diversed PGD initialization time: 0.1240
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00784439,  0.00105380, -0.03825143, -0.00678254, -0.01068304,
          -0.01617912, -0.00646240, -1.00761104, -0.00757756]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1329 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1923 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 513, vnnlib ID: 513 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.65799123e-04,  3.17368656e-03,  1.10804588e-02,  7.33049959e-03,
          9.70250487e-01,  2.51213461e-03,  3.91495973e-03, -1.54611170e-02,
          2.77320296e-03, -1.06721744e-02]], device='cuda:0')
diversed PGD initialization time: 0.1351
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.85284734,  0.02047336,  0.01635994,  0.02782250,  0.01873175,
          -0.02338073, -0.07538854,  0.09517136,  0.00861036,  0.02921188],
         [ 0.85284734,  0.02047336,  0.01635994,  0.02782250,  0.01873175,
          -0.02338073, -0.07538854,  0.09517136,  0.00861036,  0.02921188]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.83411556, -0.00174161,  0.00237181, -0.00909076,  0.04211248,
           0.09412028, -0.07643962,  0.01012139, -0.01048013]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1445 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1921 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 514, vnnlib ID: 514 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02440700, -0.00410601,  0.54603034,  0.09851640, -0.01131446,
         -0.03889636, -0.00211222,  0.43838578, -0.01301362, -0.02825475]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02440701, -0.00410603,  0.54603040,  0.09851640, -0.01131446,
          -0.03889636, -0.00211222,  0.43838578, -0.01301362, -0.02825475],
         [-0.02440701, -0.00410603,  0.54603040,  0.09851640, -0.01131446,
          -0.03889636, -0.00211222,  0.43838578, -0.01301362, -0.02825475]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.46279278,  0.44249183, -0.10764462,  0.33986938,  0.44970024,
           0.47728214,  0.44049799,  0.45139942,  0.46664053]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0682 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 515, vnnlib ID: 515 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-4.32124361e-03, -1.18996352e-02,  1.00537038e+00, -9.71464813e-03,
          4.36269864e-03,  1.19031966e-03, -8.40654224e-03, -1.29318833e-02,
         -8.40254128e-04, -3.22438031e-03]], device='cuda:0')
diversed PGD initialization time: 0.1352
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01079447, -0.02697955,  0.00852637, -0.01623246, -0.01215013,
           0.01559506, -0.00234701, -0.02813677,  1.02303922, -0.01710354],
         [ 0.01079447, -0.02697955,  0.00852637, -0.01623246, -0.01215013,
           0.01559506, -0.00234701, -0.02813677,  1.02303922, -0.01710354]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00226810,  0.03550592,  0.02475883,  0.02067650, -0.00706869,
           0.01087338,  0.03666314, -1.01451290,  0.02562991]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1439 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2651 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 516, vnnlib ID: 516 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01829823,  0.07192950,  0.41723683,  0.03475378, -0.00830945,
          0.01616868, -0.00128351,  0.45919287, -0.00444902, -0.01366349]],
       device='cuda:0')
diversed PGD initialization time: 0.1251
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.71871358e-02,  6.67243674e-02,  8.95639896e-01, -1.27252638e-02,
          -3.76981981e-02,  2.75358558e-04, -3.32478434e-03,  1.03087857e-01,
          -6.52703121e-02, -1.35581493e-02],
         [-7.71871358e-02,  6.67243674e-02,  8.95639896e-01, -1.27252638e-02,
          -3.76981981e-02,  2.75358558e-04, -3.32478434e-03,  1.03087857e-01,
          -6.52703121e-02, -1.35581493e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.18027499,  0.03636349, -0.79255205,  0.11581312,  0.14078605,
           0.10281250,  0.10641264,  0.16835818,  0.11664601]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1331 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1794 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 517, vnnlib ID: 517 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00385887,  0.62134069,  0.04179519, -0.00800021,  0.02410378,
          0.09011224,  0.01101875,  0.08321552,  0.10851082,  0.01666626]],
       device='cuda:0')
diversed PGD initialization time: 0.1337
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01450552, -0.02513841,  0.00898905, -0.01457104, -0.01051844,
           0.01249205, -0.01563736, -0.03166856,  1.02765858, -0.01244315],
         [ 0.01450552, -0.02513841,  0.00898905, -0.01457104, -0.01051844,
           0.01249205, -0.01563736, -0.03166856,  1.02765858, -0.01244315]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03964392, -0.03412746, -0.01056737, -0.01461997, -0.03763045,
          -0.00950105,  0.00653015, -1.05279696, -0.01269526]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1436 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3205 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 518, vnnlib ID: 518 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02181191,  0.16322836,  0.46760941,  0.03208985, -0.00178878,
          0.01435830, -0.04653858, -0.01195705,  0.38106966, -0.00436313]],
       device='cuda:0')
diversed PGD initialization time: 0.1398
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00589247,  0.07686228,  0.01429467,  0.01795280, -0.01813341,
          -0.00370687, -0.01793680, -0.01711635,  0.90514052,  0.00373872],
         [-0.00589247,  0.07686228,  0.01429467,  0.01795280, -0.01813341,
          -0.00370687, -0.01793680, -0.01711635,  0.90514052,  0.00373872]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02018714, -0.06256761, -0.00365813,  0.03242807,  0.01800153,
           0.03223147,  0.03141102, -0.89084584,  0.01055595]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1505 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2161 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 519, vnnlib ID: 519 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.06861064.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01715266704559326, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.42511654e-05,  9.43315625e-01,  4.78561223e-03, -1.48552805e-02,
         -7.17890263e-03, -4.06146049e-03, -1.47608519e-02,  2.16831267e-03,
          5.37519678e-02,  1.45602971e-02]], device='cuda:0')
diversed PGD initialization time: 0.1257
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.90040357e-02, -2.51365677e-02,  3.18896770e-03, -1.63822621e-03,
          -7.06663355e-03,  1.01702660e-03, -3.47513705e-04, -2.03143656e-02,
           1.01439106e+00,  8.14338028e-03],
         [-1.90040357e-02, -2.51365677e-02,  3.18896770e-03, -1.63822621e-03,
          -7.06663355e-03,  1.01702660e-03, -3.47513705e-04, -2.03143656e-02,
           1.01439106e+00,  8.14338028e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00613253, -0.02832554, -0.02349834, -0.01806993, -0.02615359,
          -0.02478905, -0.00482220, -1.03952765, -0.03327995]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1344 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1949 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 520, vnnlib ID: 520 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.07192622,  0.00854553,  0.10514365,  0.00506019,  0.00995544,
          0.06512514, -0.02349254,  0.03886710,  0.90673536, -0.07974710]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.07192616,  0.00854550,  0.10514353,  0.00506019,  0.00995545,
           0.06512512, -0.02349252,  0.03886705,  0.90673554, -0.07974710],
         [-0.07192616,  0.00854550,  0.10514353,  0.00506019,  0.00995545,
           0.06512512, -0.02349252,  0.03886705,  0.90673554, -0.07974710]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.11079321,  0.03032155, -0.06627648,  0.03380686,  0.02891159,
          -0.02625807,  0.06235957, -0.86786848,  0.11861414]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0747 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 521, vnnlib ID: 521 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00871553, -0.03557853,  0.89499539,  0.15109587,  0.00535049,
         -0.05125424,  0.00525752, -0.03163067,  0.01025975,  0.00191250]],
       device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01592233, -0.07013780,  0.11948742,  0.84149337, -0.03317971,
          -0.08604250, -0.00604644, -0.12516110,  0.31921831, -0.03633070],
         [ 0.01592233, -0.07013780,  0.11948742,  0.84149337, -0.03317971,
          -0.08604250, -0.00604644, -0.12516110,  0.31921831, -0.03633070]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.10356508,  0.18962522, -0.72200596,  0.15266714,  0.20552993,
           0.12553386,  0.24464852, -0.19973089,  0.15581812]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1999 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 522, vnnlib ID: 522 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03394100,  0.23244639, -0.04158434, -0.04400261, -0.01156815,
         -0.03758643, -0.02982655, -0.02058515,  0.98669213, -0.02082598]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03394100,  0.23244646, -0.04158431, -0.04400264, -0.01156816,
          -0.03758643, -0.02982656, -0.02058513,  0.98669207, -0.02082597],
         [-0.03394100,  0.23244646, -0.04158431, -0.04400264, -0.01156816,
          -0.03758643, -0.02982656, -0.02058513,  0.98669207, -0.02082597]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.26638746,  0.27403077,  0.27644908,  0.24401462,  0.27003288,
           0.26227301,  0.25303161, -0.75424564,  0.25327241]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0811 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 523, vnnlib ID: 523 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.98404717, -0.00462712,  0.01460047, -0.01134634, -0.00681823,
          0.01869252, -0.00195571, -0.02182403,  0.00980835, -0.00217238]],
       device='cuda:0')
diversed PGD initialization time: 0.1257
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1341 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1812 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 524, vnnlib ID: 524 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01116014, -0.00112341,  0.02040674, -0.01047158,  0.02832711,
          0.03171897,  0.00206454, -0.01370470,  0.07038478,  0.86410737]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01116014, -0.00112340,  0.02040675, -0.01047158,  0.02832711,
           0.03171898,  0.00206456, -0.01370470,  0.07038473,  0.86410737],
         [ 0.01116014, -0.00112340,  0.02040675, -0.01047158,  0.02832711,
           0.03171898,  0.00206456, -0.01370470,  0.07038473,  0.86410737]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01716697,  0.02945051,  0.00792036,  0.03879869, -0.00339187,
           0.02626255,  0.04203181, -0.04205761, -0.83578026]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0619 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 525, vnnlib ID: 525 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.01952355, 0.54399359, 0.06382453, 0.04124319, 0.03117193, 0.04573270,
         0.02058932, 0.07899199, 0.04440938, 0.07503356]], device='cuda:0')
diversed PGD initialization time: 0.1264
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.08504800,  0.47516906, -0.19613717, -0.19496059,  1.00852072,
          -0.09442582, -0.04059245,  0.20637982, -0.08808697, -0.02759798],
         [-0.08504800,  0.47516906, -0.19613717, -0.19496059,  1.00852072,
          -0.09442582, -0.04059245,  0.20637982, -0.08808697, -0.02759798]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.56021708,  0.67130625,  0.67012966, -0.53335166,  0.56959486,
           0.51576149,  0.26878923,  0.56325603,  0.50276703]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1354 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2043 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 526, vnnlib ID: 526 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03301065, -0.00461793,  0.01948185, -0.04964826,  0.26936477,
          0.01028721, -0.03838835, -0.01011550,  0.79730821, -0.05551048]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.03301067, -0.00461793,  0.01948185, -0.04964830,  0.26936480,
           0.01028717, -0.03838836, -0.01011552,  0.79730821, -0.05551051],
         [ 0.03301067, -0.00461793,  0.01948185, -0.04964830,  0.26936480,
           0.01028717, -0.03838836, -0.01011552,  0.79730821, -0.05551051]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.23635414,  0.27398273,  0.24988295,  0.31901312,  0.25907764,
           0.30775315,  0.27948034, -0.52794337,  0.32487530]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0519 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 527, vnnlib ID: 527 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02672219, -0.04219072, -0.00485352, -0.09620658,  0.01802856,
          0.03645004, -0.00153618, -0.05684765,  0.64758420,  0.54451954]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02672220, -0.04219076, -0.00485350, -0.09620655,  0.01802852,
           0.03645002, -0.00153617, -0.05684766,  0.64758438,  0.54451948],
         [-0.02672220, -0.04219076, -0.00485350, -0.09620655,  0.01802852,
           0.03645002, -0.00153617, -0.05684766,  0.64758438,  0.54451948]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.57124168,  0.58671021,  0.54937297,  0.64072603,  0.52649099,
           0.50806946,  0.54605567,  0.60136712, -0.10306489]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0514 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 528, vnnlib ID: 528 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.49658839e-02, -1.61670148e-04,  3.76097262e-02,  1.79077312e-02,
         -1.41363032e-02,  5.50565422e-01,  4.39808846e-01,  1.76355243e-04,
          2.10196972e-02, -7.33314455e-03]], device='cuda:0')
diversed PGD initialization time: 0.1314
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1391 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 529, vnnlib ID: 529 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01104660, -0.02029692,  0.00221154, -0.04159318,  0.01266197,
          0.05019155,  0.01203685, -0.01842324,  0.17988329,  0.83735055]],
       device='cuda:0')
diversed PGD initialization time: 0.1426
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1516 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1984 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 530, vnnlib ID: 530 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.00233769e+00, -5.56533784e-03,  2.79054046e-03, -6.54134154e-03,
         -6.35620207e-04, -2.64282525e-03, -3.34560126e-03, -9.11349058e-03,
          1.52585655e-03, -4.87644970e-03]], device='cuda:0')
diversed PGD initialization time: 0.1268
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.08080089, -0.00745545,  0.00316192, -0.01242819, -0.00894764,
          -0.01567706, -0.00225194, -0.02894983,  0.96871799, -0.01163810],
         [ 0.08080089, -0.00745545,  0.00316192, -0.01242819, -0.00894764,
          -0.01567706, -0.00225194, -0.02894983,  0.96871799, -0.01163810]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.08825634,  0.07763897,  0.09322909,  0.08974853,  0.09647795,
           0.08305283,  0.10975072, -0.88791710,  0.09243899]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1396 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2823 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 531, vnnlib ID: 531 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.03788235, 0.00873628, 0.01310913, 0.01180612, 0.00162298, 0.01532894,
         0.87013483, 0.01523873, 0.01396815, 0.02083096]], device='cuda:0')
diversed PGD initialization time: 0.1325
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1415 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2160 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 532, vnnlib ID: 532 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00355031, -0.02968621,  0.01085298, -0.05801481, -0.02031812,
         -0.00439412, -0.02365031, -0.04649316,  0.84099716,  0.29699701]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00355032, -0.02968623,  0.01085296, -0.05801487, -0.02031814,
          -0.00439414, -0.02365029, -0.04649316,  0.84099710,  0.29699707],
         [-0.00355032, -0.02968623,  0.01085296, -0.05801487, -0.02031814,
          -0.00439414, -0.02365029, -0.04649316,  0.84099710,  0.29699707]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.30054739,  0.32668328,  0.28614411,  0.35501194,  0.31731522,
           0.30139121,  0.32064736,  0.34349024, -0.54400003]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0605 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 533, vnnlib ID: 533 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.42834973e-01,  5.25243580e-03, -3.69364321e-02, -4.69774455e-02,
          2.00685561e-02,  1.31730258e-01, -1.75814033e-02,  2.10870653e-02,
          1.47096813e-04, -5.69767505e-03]], device='cuda:0')
diversed PGD initialization time: 0.1381
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.57344931, -0.04476827,  0.01451534,  0.03691137, -0.09055369,
           0.76694191, -0.05287346, -0.02767165,  0.01972539,  0.00109775],
         [ 0.57344931, -0.04476827,  0.01451534,  0.03691137, -0.09055369,
           0.76694191, -0.05287346, -0.02767165,  0.01972539,  0.00109775]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.61821759,  0.55893397,  0.53653795,  0.66400301, -0.19349259,
           0.62632275,  0.60112095,  0.55372393,  0.57235157]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1480 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 534, vnnlib ID: 534 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-9.81848687e-04,  9.38789189e-01,  4.40494716e-03, -5.07138669e-04,
         -1.47314742e-03, -5.42706996e-03,  9.61028039e-03,  1.15100294e-02,
          1.00307316e-02,  7.18426704e-03]], device='cuda:0')
diversed PGD initialization time: 0.1767
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1872 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2833 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 535, vnnlib ID: 535 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00322497, -0.00608810, -0.00347637, -0.01165447, -0.01976324,
          1.03088439,  0.00151150, -0.02593796, -0.00935427, -0.00288882]],
       device='cuda:0')
diversed PGD initialization time: 0.1247
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01798514, -0.03349866, -0.01530944,  0.00624067, -0.00910089,
           0.03289135, -0.01781344, -0.00919682,  1.03411663, -0.00844432],
         [-0.01798514, -0.03349866, -0.01530944,  0.00624067, -0.00910089,
           0.03289135, -0.01781344, -0.00919682,  1.03411663, -0.00844432]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.05087649,  0.06639001,  0.04820079,  0.02665069,  0.04199224,
           0.05070479,  0.04208817, -1.00122523,  0.04133567]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1325 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2338 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 536, vnnlib ID: 536 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00161360,  0.00176176,  0.01793870,  0.00299968, -0.00645618,
          0.01308925, -0.00109338, -0.01635537,  0.01471800,  0.97585410]],
       device='cuda:0')
diversed PGD initialization time: 0.1354
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1441 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 537, vnnlib ID: 537 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02818046, -0.04265431,  0.02565610, -0.05757163, -0.00281613,
          0.06164490,  0.02699204,  0.29318517,  0.70590371, -0.02471970]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02818045, -0.04265432,  0.02565610, -0.05757160, -0.00281614,
           0.06164487,  0.02699207,  0.29318511,  0.70590377, -0.02471971],
         [-0.02818045, -0.04265432,  0.02565610, -0.05757160, -0.00281614,
           0.06164487,  0.02699207,  0.29318511,  0.70590377, -0.02471971]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.32136557,  0.33583945,  0.26752901,  0.35075670,  0.29600126,
           0.23154025,  0.26619303, -0.41271865,  0.31790483]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0870 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 538, vnnlib ID: 538 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00546667, -0.03686705,  0.02174850,  0.37806496, -0.02094016,
          0.09184884,  0.00395224, -0.06068805,  0.15637948,  0.45714581]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00546666, -0.03686702,  0.02174848,  0.37806502, -0.02094017,
           0.09184881,  0.00395226, -0.06068808,  0.15637927,  0.45714593],
         [-0.00546666, -0.03686702,  0.02174848,  0.37806502, -0.02094017,
           0.09184881,  0.00395226, -0.06068808,  0.15637927,  0.45714593]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.38353169,  0.41493204,  0.35631654,  0.39900520,  0.28621620,
           0.37411276,  0.43875310,  0.22168575, -0.07908091]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0512 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 539, vnnlib ID: 539 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00997943, -0.04103644, -0.02143069, -0.01763044,  0.27650777,
         -0.03920884,  0.03603630, -0.04206692,  0.83334547, -0.01640311]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00997943, -0.04103644, -0.02143069, -0.01763043,  0.27650779,
          -0.03920885,  0.03603627, -0.04206692,  0.83334559, -0.01640316],
         [-0.00997943, -0.04103644, -0.02143069, -0.01763043,  0.27650779,
          -0.03920885,  0.03603627, -0.04206692,  0.83334559, -0.01640316]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.28648722,  0.31754422,  0.29793847,  0.29413822,  0.31571665,
           0.24047153,  0.31857473, -0.55683780,  0.29291096]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 540, vnnlib ID: 540 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.60602890e-02, -2.35594064e-02, -7.26342201e-04, -5.80288172e-02,
          9.49974358e-03,  5.10273278e-02,  9.25736129e-03, -2.47875601e-02,
          2.56659627e-01,  7.98123240e-01]], device='cuda:0')
diversed PGD initialization time: 0.1240
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1321 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1789 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 541, vnnlib ID: 541 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.08828554,  0.02062206,  0.03099099, -0.00692666, -0.07435203,
          0.16195361,  0.49999148, -0.01564884,  0.40272579,  0.05847513]],
       device='cuda:0')
diversed PGD initialization time: 0.1174
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03197924, -0.01642926, -0.02265583, -0.02651252, -0.02088260,
           0.76569766,  0.44711393, -0.03973432, -0.04034983, -0.02200282],
         [-0.03197924, -0.01642926, -0.02265583, -0.02651252, -0.02088260,
           0.76569766,  0.44711393, -0.03973432, -0.04034983, -0.02200282]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47909316,  0.46354318,  0.46976978,  0.47362643,  0.46799654,
          -0.31858373,  0.48684824,  0.48746377,  0.46911675]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1267 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 542, vnnlib ID: 542 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.98591873e-03,  2.79448926e-04,  6.96420670e-03,  6.69728965e-03,
         -3.21787596e-03,  6.06905669e-03,  9.99511540e-01, -2.54650414e-03,
          3.35579365e-03,  6.27617538e-03]], device='cuda:0')
diversed PGD initialization time: 0.1273
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.09632789, -0.03960377, -0.03000866, -0.05494244, -0.02971708,
           0.07888934,  0.33198619,  0.08080192,  0.77381879, -0.03482196],
         [-0.09632789, -0.03960377, -0.03000866, -0.05494244, -0.02971708,
           0.07888934,  0.33198619,  0.08080192,  0.77381879, -0.03482196]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.42831409,  0.37158996,  0.36199486,  0.38692862,  0.36170328,
           0.25309685,  0.25118428, -0.44183260,  0.36680815]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2262 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 543, vnnlib ID: 543 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.32439116e-03, -9.01210308e-03, -5.27650118e-04, -2.86538899e-03,
         -1.59654506e-02,  1.02426159e+00,  1.44102424e-03, -2.19594985e-02,
         -7.66626745e-03, -3.13866138e-03]], device='cuda:0')
diversed PGD initialization time: 0.1236
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1325 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2013 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 544, vnnlib ID: 544 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03402201, -0.00444522,  0.01899144, -0.05091557,  0.26295078,
          0.00916755, -0.03649683, -0.01014255,  0.79013079, -0.04176331]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.03402200, -0.00444523,  0.01899144, -0.05091558,  0.26295075,
           0.00916754, -0.03649683, -0.01014255,  0.79013079, -0.04176325],
         [ 0.03402200, -0.00444523,  0.01899144, -0.05091558,  0.26295075,
           0.00916754, -0.03649683, -0.01014255,  0.79013079, -0.04176325]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.22892874,  0.26739597,  0.24395931,  0.31386632,  0.25378320,
           0.29944760,  0.27309328, -0.52718008,  0.30471399]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0906 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 545, vnnlib ID: 545 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.73797739e-01,  2.67364830e-03,  1.49013102e-03,  6.57059252e-04,
          2.92797759e-03,  7.66671449e-03, -2.06318349e-02,  2.72221863e-03,
          6.47262484e-03,  5.17547131e-04]], device='cuda:0')
diversed PGD initialization time: 0.1123
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1210 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2733 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 546, vnnlib ID: 546 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.28084105, -0.00137503,  0.02642559,  0.01100586,  0.03147160,
          0.08084639,  0.01221311,  0.20887586,  0.09943518,  0.23879597]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.28084105, -0.00137502,  0.02642559,  0.01100586,  0.03147160,
           0.08084639,  0.01221311,  0.20887589,  0.09943520,  0.23879589],
         [ 0.28084105, -0.00137502,  0.02642559,  0.01100586,  0.03147160,
           0.08084639,  0.01221311,  0.20887589,  0.09943520,  0.23879589]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.07196516,  0.21025091,  0.18245031,  0.19787005,  0.17740428,
           0.12802950,  0.19666278,  0.10944069, -0.02992000]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 547, vnnlib ID: 547 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.00433340, 0.00807533, 0.03407298, 0.02277680, 0.64029086, 0.02728188,
         0.00970565, 0.05125078, 0.05344637, 0.14470069]], device='cuda:0')
diversed PGD initialization time: 0.1261
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.96340406e-04,  4.22139466e-03,  4.76200879e-03,  6.36605173e-03,
          -1.27126016e-02,  8.49998742e-03,  2.62581930e-03,  3.75913084e-03,
           5.93406707e-03,  9.82371449e-01],
         [-7.96340406e-04,  4.22139466e-03,  4.76200879e-03,  6.36605173e-03,
          -1.27126016e-02,  8.49998742e-03,  2.62581930e-03,  3.75913084e-03,
           5.93406707e-03,  9.82371449e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01191626, -0.01693400, -0.01747461, -0.01907865, -0.02121259,
          -0.01533842, -0.01647173, -0.01864667, -0.99508405]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1355 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1859 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 548, vnnlib ID: 548 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99353617, -0.03955279,  0.04430701, -0.02032167, -0.01342642,
         -0.01177635,  0.00438265,  0.02614017, -0.01944950, -0.01709148]],
       device='cuda:0')
diversed PGD initialization time: 0.1225
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.42329168, -0.05458514,  0.28051651, -0.05557007, -0.04290185,
          -0.05236245, -0.05597377, -0.03426860, -0.03453681,  0.55307245],
         [ 0.42329168, -0.05458514,  0.28051651, -0.05557007, -0.04290185,
          -0.05236245, -0.05597377, -0.03426860, -0.03453681,  0.55307245]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47787684,  0.14277518,  0.47886175,  0.46619353,  0.47565413,
           0.47926545,  0.45756030,  0.45782849, -0.12978077]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1321 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1986 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 549, vnnlib ID: 549 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00906610,  0.39425063,  0.02123295, -0.05858587,  0.01990106,
          0.06443207, -0.02059133,  0.06296664,  0.51645422, -0.01415219]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00906609,  0.39425063,  0.02123292, -0.05858587,  0.01990105,
           0.06443208, -0.02059132,  0.06296663,  0.51645422, -0.01415219],
         [-0.00906609,  0.39425063,  0.02123292, -0.05858587,  0.01990105,
           0.06443208, -0.02059132,  0.06296663,  0.51645422, -0.01415219]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.40331674,  0.37301773,  0.45283651,  0.37434959,  0.32981855,
           0.41484195,  0.33128399, -0.12220359,  0.40840283]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 550, vnnlib ID: 550 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-5.45451418e-03, -8.49650800e-03,  4.69759107e-04,  9.83482003e-01,
         -1.62497722e-02,  3.05601731e-02, -4.79909033e-03, -1.71561539e-02,
          1.08142942e-03,  1.38048828e-03]], device='cuda:0')
diversed PGD initialization time: 0.1363
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00784439,  0.00105380, -0.03825143, -0.00678254, -0.01068304,
          -0.01617912, -0.00646240, -1.00761104, -0.00757756]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1452 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2020 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 551, vnnlib ID: 551 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.04218639,  0.32707059,  0.01014680, -0.09387121,  0.09339523,
          0.13092388, -0.00239657,  0.06124574,  0.52710837, -0.02035640]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04218639,  0.32707053,  0.01014677, -0.09387116,  0.09339522,
           0.13092385, -0.00239658,  0.06124572,  0.52710849, -0.02035636],
         [-0.04218639,  0.32707053,  0.01014677, -0.09387116,  0.09339522,
           0.13092385, -0.00239658,  0.06124572,  0.52710849, -0.02035636]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.36925691,  0.31692377,  0.42094171,  0.23367532,  0.19614668,
           0.32946712,  0.26582479, -0.20003796,  0.34742689]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0738 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 552, vnnlib ID: 552 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.29923630e-03, -7.65589625e-03, -1.84796751e-03,  9.90857244e-01,
         -1.26006939e-02,  2.21899226e-02, -4.67942655e-03, -1.47306174e-02,
          5.47863543e-04,  1.58399343e-03]], device='cuda:0')
diversed PGD initialization time: 0.1265
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00784439,  0.00105380, -0.03825143, -0.00678254, -0.01068304,
          -0.01617912, -0.00646240, -1.00761104, -0.00757756]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1351 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1952 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 553, vnnlib ID: 553 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 4.29652631e-04,  3.97621095e-03,  1.05823576e-02,  8.82386416e-03,
          9.74557757e-01,  1.87805295e-03,  4.22842428e-03, -1.33852065e-02,
          2.09075212e-03, -1.30282566e-02]], device='cuda:0')
diversed PGD initialization time: 0.1342
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.91603249,  0.01483531,  0.00975683,  0.01957224,  0.01231230,
          -0.01621503, -0.05936779,  0.05233071,  0.00742060,  0.01735083],
         [ 0.91603249,  0.01483531,  0.00975683,  0.01957224,  0.01231230,
          -0.01621503, -0.05936779,  0.05233071,  0.00742060,  0.01735083]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.90372020, -0.00252300,  0.00255547, -0.00725994,  0.02852734,
           0.07168010, -0.04001841,  0.00489170, -0.00503853]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1430 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2093 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 554, vnnlib ID: 554 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02400765,  0.02011591,  0.56386709,  0.12322506, -0.00930058,
         -0.03871583,  0.00342507,  0.35259837, -0.00933052, -0.01946920]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02400766,  0.02011592,  0.56386709,  0.12322504, -0.00930058,
          -0.03871583,  0.00342507,  0.35259840, -0.00933053, -0.01946921],
         [-0.02400766,  0.02011592,  0.56386709,  0.12322504, -0.00930058,
          -0.03871583,  0.00342507,  0.35259840, -0.00933053, -0.01946921]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.37660605,  0.33248249, -0.21126869,  0.22937337,  0.36189899,
           0.39131424,  0.34917334,  0.36192894,  0.37206760]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 555, vnnlib ID: 555 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-8.59674066e-04, -1.23051777e-02,  9.89323258e-01, -5.92499971e-03,
          5.83779067e-03,  3.78924608e-03, -7.68308342e-03, -1.41184628e-02,
          2.50047445e-03,  1.41873956e-04]], device='cuda:0')
diversed PGD initialization time: 0.1361
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.83730759e-02, -2.22503543e-02,  4.93359566e-03, -3.39008123e-03,
          -6.55124336e-03,  4.11812216e-03, -9.21156257e-04, -2.04429328e-02,
           1.01522589e+00,  4.22775745e-03],
         [-1.83730759e-02, -2.22503543e-02,  4.93359566e-03, -3.39008123e-03,
          -6.55124336e-03,  4.11812216e-03, -9.21156257e-04, -2.04429328e-02,
           1.01522589e+00,  4.22775745e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.33066715e-02,  2.71839499e-02,  8.32367688e-03,  1.14848390e-02,
           8.15473497e-04,  5.85475191e-03,  2.53765285e-02, -1.01029229e+00,
           7.05838203e-04]]], device='cuda:0')
number of violation:  1
Attack finished in 0.1442 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2039 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 556, vnnlib ID: 556 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02465266,  0.08799520,  0.46355760,  0.04490712, -0.00598743,
          0.02434985,  0.00123991,  0.37771738,  0.00071840, -0.01752381]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02465268,  0.08799522,  0.46355766,  0.04490715, -0.00598744,
           0.02434985,  0.00123991,  0.37771720,  0.00071841, -0.01752381],
         [-0.02465268,  0.08799522,  0.46355766,  0.04490715, -0.00598744,
           0.02434985,  0.00123991,  0.37771720,  0.00071841, -0.01752381]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.40236989,  0.28972197, -0.08584046,  0.33281004,  0.38370463,
           0.35336733,  0.37647727,  0.37699878,  0.39524102]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 557, vnnlib ID: 557 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01008249,  0.55917346,  0.04451159, -0.02478878,  0.02681883,
          0.09459399,  0.00674682,  0.08862683,  0.19555438,  0.00327931]],
       device='cuda:0')
diversed PGD initialization time: 0.1259
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 558, vnnlib ID: 558 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01806804,  0.14391837,  0.43824518,  0.00876178, -0.00719912,
         -0.00532345, -0.05136327, -0.02403928,  0.50452453, -0.01441206]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01806803,  0.14391834,  0.43824518,  0.00876176, -0.00719913,
          -0.00532346, -0.05136327, -0.02403928,  0.50452459, -0.01441208],
         [-0.01806803,  0.14391834,  0.43824518,  0.00876176, -0.00719913,
          -0.00532346, -0.05136327, -0.02403928,  0.50452459, -0.01441208]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.45631322,  0.29432684,  0.42948341,  0.44544432,  0.44356865,
           0.48960844,  0.46228445, -0.06627941,  0.45265725]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0520 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 559, vnnlib ID: 559 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.07432493.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.01858123391866684, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00104686,  0.86774832,  0.00980498, -0.01375446, -0.00656113,
         -0.01418554, -0.02903351,  0.00461403,  0.13355260,  0.02144238]],
       device='cuda:0')
diversed PGD initialization time: 0.1270
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01443858, -0.02155673,  0.01120317, -0.00472629, -0.00901885,
           0.01300383, -0.00677782, -0.03215490,  1.02553535, -0.00686316],
         [-0.01443858, -0.02155673,  0.01120317, -0.00472629, -0.00901885,
           0.01300383, -0.00677782, -0.03215490,  1.02553535, -0.00686316]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00711815, -0.03275990, -0.01683044, -0.01253788, -0.03456056,
          -0.01477890,  0.01059818, -1.04709208, -0.01469357]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1379 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1999 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 560, vnnlib ID: 560 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_0_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.04326914, -0.01000877,  0.05857446, -0.00367334,  0.01618439,
          0.04460029, -0.01156154,  0.01609861,  0.95574379, -0.06224804]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04326909, -0.01000880,  0.05857441, -0.00367339,  0.01618437,
           0.04460026, -0.01156154,  0.01609854,  0.95574385, -0.06224792],
         [-0.04326909, -0.01000880,  0.05857441, -0.00367339,  0.01618437,
           0.04460026, -0.01156154,  0.01609854,  0.95574385, -0.06224792]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.93676232e-02,  2.61073411e-02, -4.24758717e-02,  1.97719261e-02,
          -8.58344138e-05, -2.85017192e-02,  2.76600718e-02, -9.39645290e-01,
           7.83464536e-02]]], device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.1622 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 561, vnnlib ID: 561 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_1_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.97951052e-03, -3.05344909e-02,  8.38365018e-01,  1.43057242e-01,
          7.02838227e-03, -5.10783419e-02,  7.58633018e-04, -2.56080031e-02,
          5.90560324e-02,  7.67049193e-03]], device='cuda:0')
diversed PGD initialization time: 0.1272
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.31835312e-04, -7.92057216e-02,  2.12468982e-01,  6.69824600e-01,
          -3.06297429e-02, -1.63829565e-01, -6.55690357e-02, -1.56967565e-01,
           6.30299747e-01, -5.38631231e-02],
         [-6.31835312e-04, -7.92057216e-02,  2.12468982e-01,  6.69824600e-01,
          -3.06297429e-02, -1.63829565e-01, -6.55690357e-02, -1.56967565e-01,
           6.30299747e-01, -5.38631231e-02]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.21310082,  0.29167470, -0.45735562,  0.24309872,  0.37629855,
           0.27803802,  0.36943656, -0.41783077,  0.26633209]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1875 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 562, vnnlib ID: 562 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_2_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03714291,  0.17895830, -0.03634414, -0.02355957, -0.01178369,
         -0.04531058, -0.03289029, -0.01958860,  1.02582955, -0.02176374]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03714290,  0.17895830, -0.03634414, -0.02355959, -0.01178369,
          -0.04531059, -0.03289030, -0.01958860,  1.02582967, -0.02176374],
         [-0.03714290,  0.17895830, -0.03634414, -0.02355959, -0.01178369,
          -0.04531059, -0.03289030, -0.01958860,  1.02582967, -0.02176374]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.21610120,  0.21530244,  0.20251788,  0.19074199,  0.22426888,
           0.21184860,  0.19854690, -0.84687138,  0.20072204]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 563, vnnlib ID: 563 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_3_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.97289306, -0.00198368,  0.01395270, -0.00730431, -0.00663165,
          0.01698689, -0.00492122, -0.01574697,  0.01264530, -0.00232707]],
       device='cuda:0')
diversed PGD initialization time: 0.1250
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1342 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1928 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 564, vnnlib ID: 564 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_4_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00183770, -0.01592830,  0.00548156, -0.04729858, -0.01038917,
          0.02524671, -0.01665919, -0.03600933,  0.22969133,  0.86403060]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00183767, -0.01592831,  0.00548154, -0.04729858, -0.01038920,
           0.02524669, -0.01665922, -0.03600930,  0.22969139,  0.86403072],
         [ 0.00183767, -0.01592831,  0.00548154, -0.04729858, -0.01038920,
           0.02524669, -0.01665922, -0.03600930,  0.22969139,  0.86403072]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01222687,  0.00553911, -0.01587074,  0.03690938, -0.03563588,
           0.00627002,  0.02562010, -0.24008058, -0.87441993]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0549 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 565, vnnlib ID: 565 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_5_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.02014637, 0.49772269, 0.06643573, 0.04412006, 0.04107467, 0.04604895,
         0.02027675, 0.09449545, 0.05022983, 0.08444503]], device='cuda:0')
diversed PGD initialization time: 0.1366
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04305154,  0.00615083,  0.03062758,  0.01284114, -0.01822310,
           0.03528252, -0.03188170, -0.06487533,  1.01095712,  0.00785521],
         [-0.04305154,  0.00615083,  0.03062758,  0.01284114, -0.01822310,
           0.03528252, -0.03188170, -0.06487533,  1.01095712,  0.00785521]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.04920238, -0.02447674, -0.00669030,  0.02437393, -0.02913169,
           0.03803254,  0.07102617, -1.00480628, -0.00170437]]],
       device='cuda:0')
number of violation:  5
Attack finished in 0.1484 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2317 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 566, vnnlib ID: 566 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_6_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01522337, -0.01106334,  0.01419531, -0.04334489,  0.21063979,
          0.01218583, -0.02162495, -0.00794135,  0.85133737, -0.05395503]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01522338, -0.01106334,  0.01419531, -0.04334489,  0.21063980,
           0.01218582, -0.02162495, -0.00794137,  0.85133737, -0.05395502],
         [ 0.01522338, -0.01106334,  0.01419531, -0.04334489,  0.21063980,
           0.01218582, -0.02162495, -0.00794137,  0.85133737, -0.05395502]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19541642,  0.22170314,  0.19644450,  0.25398469,  0.19845399,
           0.23226476,  0.21858117, -0.64069760,  0.26459482]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0600 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 567, vnnlib ID: 567 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_7_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03267023, -0.06505226, -0.00780025, -0.09055796,  0.01240598,
          0.03681304, -0.00109275, -0.05765806,  0.72061837,  0.50153089]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03267023, -0.06505226, -0.00780025, -0.09055796,  0.01240598,
           0.03681304, -0.00109275, -0.05765806,  0.72061837,  0.50153089],
         [-0.03267023, -0.06505226, -0.00780025, -0.09055796,  0.01240598,
           0.03681304, -0.00109275, -0.05765806,  0.72061837,  0.50153089]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.53420109,  0.56658316,  0.50933111,  0.59208882,  0.48912489,
           0.46471784,  0.50262362,  0.55918896, -0.21908748]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0633 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 568, vnnlib ID: 568 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_8_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03612942,  0.00335918,  0.05064537,  0.02792951, -0.03848388,
          0.50975025,  0.44624907, -0.00160377,  0.02138679,  0.02153649]],
       device='cuda:0')
diversed PGD initialization time: 0.1243
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1333 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 569, vnnlib ID: 569 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_9_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01617054, -0.02804774,  0.00703029, -0.06893133,  0.00738775,
          0.06390885,  0.00992708, -0.01582833,  0.31720394,  0.73098749]],
       device='cuda:0')
diversed PGD initialization time: 0.1395
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1485 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2129 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 570, vnnlib ID: 570 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_10_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.98608053e-01, -3.30244005e-03,  6.49015605e-03, -2.22537667e-03,
          7.58912414e-04, -8.76522809e-03, -7.20576197e-03, -6.27896190e-03,
          1.25277042e-03, -3.36418301e-03]], device='cuda:0')
diversed PGD initialization time: 0.1325
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1416 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1911 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 571, vnnlib ID: 571 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_11_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[0.04551857, 0.01069187, 0.01617229, 0.01544861, 0.00346053, 0.01903578,
         0.83159369, 0.02248193, 0.01704232, 0.02539340]], device='cuda:0')
diversed PGD initialization time: 0.1271
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.02402351,  0.01723292, -0.02207231,  0.01617912,  0.00939659,
           0.00549608,  0.00971673, -0.99143189,  0.00860156]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1362 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2108 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 572, vnnlib ID: 572 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_12_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00594769, -0.03084074,  0.02792345, -0.04329579, -0.01885617,
         -0.00716706, -0.01606858, -0.02495207,  0.90874219,  0.16294448]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00594770, -0.03084074,  0.02792343, -0.04329573, -0.01885619,
          -0.00716707, -0.01606858, -0.02495208,  0.90874213,  0.16294454],
         [-0.00594770, -0.03084074,  0.02792343, -0.04329573, -0.01885619,
          -0.00716707, -0.01606858, -0.02495208,  0.90874213,  0.16294454]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.16889223,  0.19378528,  0.13502111,  0.20624027,  0.18180072,
           0.17011161,  0.17901312,  0.18789662, -0.74579757]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0670 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 573, vnnlib ID: 573 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_13_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.92142838,  0.00634014, -0.03940541, -0.04651512,  0.02808251,
          0.16105595, -0.01742157,  0.02689846,  0.00457955, -0.02184708]],
       device='cuda:0')
diversed PGD initialization time: 0.1404
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1496 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1975 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 574, vnnlib ID: 574 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_14_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009806379675865, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.24845856e-03,  9.25420165e-01,  1.61534548e-03,  2.91615725e-04,
          1.95101649e-03,  6.92769885e-04,  1.17102563e-02,  1.43918842e-02,
          1.32751018e-02,  8.49951059e-03]], device='cuda:0')
diversed PGD initialization time: 0.1237
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1326 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1981 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 575, vnnlib ID: 575 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_15_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00292898, -0.00509374, -0.00361900, -0.01203451, -0.01839747,
          1.03145397,  0.00194361, -0.02494386, -0.00938932, -0.00333308]],
       device='cuda:0')
diversed PGD initialization time: 0.1365
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04349278, -0.05894971, -0.02428597,  0.02758975, -0.02384701,
           0.22811729, -0.12078016, -0.04558913,  1.07053185, -0.05475099],
         [-0.04349278, -0.05894971, -0.02428597,  0.02758975, -0.02384701,
           0.22811729, -0.12078016, -0.04558913,  1.07053185, -0.05475099]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.27161005,  0.28706700,  0.25240326,  0.20052753,  0.25196430,
           0.34889746,  0.27370644, -0.84241456,  0.28286827]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1468 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2661 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 576, vnnlib ID: 576 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_16_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00742537, -0.00325035,  0.01146312, -0.01049940, -0.00816589,
          0.00824993, -0.01089194, -0.02409506,  0.07848158,  0.96649176]],
       device='cuda:0')
diversed PGD initialization time: 0.1421
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1517 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2077 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 577, vnnlib ID: 577 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_17_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01926840, -0.05713779,  0.03272986, -0.06666552, -0.00932253,
          0.04912283,  0.03961004,  0.24850403,  0.75405347, -0.01124793]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01926839, -0.05713783,  0.03272989, -0.06666557, -0.00932254,
           0.04912280,  0.03961006,  0.24850391,  0.75405359, -0.01124790],
         [-0.01926839, -0.05713783,  0.03272989, -0.06666557, -0.00932254,
           0.04912280,  0.03961006,  0.24850391,  0.75405359, -0.01124790]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.26777229,  0.30564174,  0.21577401,  0.31516948,  0.25782645,
           0.19938111,  0.20889385, -0.50554967,  0.25975180]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0713 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 578, vnnlib ID: 578 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_18_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00626764, -0.04233201,  0.01995541,  0.36139145, -0.02147398,
          0.09145983,  0.00358230, -0.05969729,  0.19447081,  0.44381088]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00626764, -0.04233199,  0.01995543,  0.36139154, -0.02147396,
           0.09145984,  0.00358231, -0.05969729,  0.19447073,  0.44381076],
         [-0.00626764, -0.04233199,  0.01995543,  0.36139154, -0.02147396,
           0.09145984,  0.00358231, -0.05969729,  0.19447073,  0.44381076]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.36765918,  0.40372354,  0.34143612,  0.38286549,  0.26993170,
           0.35780925,  0.42108881,  0.16692081, -0.08241922]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0749 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 579, vnnlib ID: 579 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_19_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00441010, -0.02932708,  0.01156665, -0.00849348,  0.21095395,
         -0.04690257,  0.01212518, -0.03625283,  0.92155272, -0.10367082]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00441010, -0.02932709,  0.01156664, -0.00849342,  0.21095400,
          -0.04690259,  0.01212519, -0.03625281,  0.92155266, -0.10367084],
         [ 0.00441010, -0.02932709,  0.01156664, -0.00849342,  0.21095400,
          -0.04690259,  0.01212519, -0.03625281,  0.92155266, -0.10367084]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.20654389,  0.24028108,  0.19938736,  0.21944742,  0.25785658,
           0.19882880,  0.24720681, -0.71059865,  0.31462485]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0752 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 580, vnnlib ID: 580 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_20_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02056268, -0.03223006,  0.00544360, -0.07718657,  0.00471326,
          0.06014686,  0.00692140, -0.02231251,  0.38098660,  0.69987714]],
       device='cuda:0')
diversed PGD initialization time: 0.1333
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.54219531e-02,  8.63135606e-03, -3.06738690e-02,  7.57756084e-03,
           7.95025378e-04, -3.10547650e-03, -8.60156119e-03,  1.11516565e-03,
          -1.00003338e+00]]], device='cuda:0')
number of violation:  4
Attack finished in 0.1436 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2021 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 581, vnnlib ID: 581 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_21_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.08569022,  0.00925792,  0.02947003, -0.01294397, -0.07303984,
          0.15439869,  0.39946777, -0.02423197,  0.54052734,  0.04473630]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.08569022,  0.00925792,  0.02947003, -0.01294397, -0.07303986,
           0.15439868,  0.39946783, -0.02423197,  0.54052728,  0.04473632],
         [-0.08569022,  0.00925792,  0.02947003, -0.01294397, -0.07303986,
           0.15439868,  0.39946783, -0.02423197,  0.54052728,  0.04473632]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.48515803,  0.39020991,  0.36999780,  0.41241181,  0.47250769,
           0.24506915,  0.42369980, -0.14105946,  0.35473150]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0526 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 582, vnnlib ID: 582 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_22_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-1.99833885e-03,  3.01517546e-04,  6.88664615e-03,  6.28271699e-03,
         -3.15469876e-03,  6.77752495e-03,  9.98963714e-01, -2.44314969e-03,
          2.98298150e-03,  6.17232919e-03]], device='cuda:0')
diversed PGD initialization time: 0.1264
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.07279079, -0.03594747, -0.02107570, -0.04128367, -0.02188665,
           0.05630964,  0.24763495,  0.05945610,  0.84465027, -0.03421521],
         [-0.07279079, -0.03594747, -0.02107570, -0.04128367, -0.02188665,
           0.05630964,  0.24763495,  0.05945610,  0.84465027, -0.03421521]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.32042575,  0.28358242,  0.26871064,  0.28891861,  0.26952159,
           0.19132531,  0.18817885, -0.59701532,  0.28185016]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1348 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1828 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 583, vnnlib ID: 583 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_23_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-2.03808025e-03, -8.25094432e-03, -1.64940953e-04, -2.88467109e-03,
         -1.39528699e-02,  1.02318251e+00,  1.98388100e-03, -2.02554911e-02,
         -7.39123672e-03, -3.39771062e-03]], device='cuda:0')
diversed PGD initialization time: 0.1252
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.01852743,  0.01173683, -0.02756839,  0.01068304,  0.00390050,
          -0.00549608,  0.00422064, -0.99692798,  0.00310548]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.1335 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2006 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 584, vnnlib ID: 584 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_24_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.01573617, -0.01087991,  0.01413468, -0.04346444,  0.21207775,
          0.01227988, -0.02208937, -0.00806253,  0.85009140, -0.05401635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.01573617, -0.01087993,  0.01413468, -0.04346445,  0.21207771,
           0.01227988, -0.02208935, -0.00806250,  0.85009140, -0.05401637],
         [ 0.01573617, -0.01087993,  0.01413468, -0.04346445,  0.21207771,
           0.01227988, -0.02208935, -0.00806250,  0.85009140, -0.05401637]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.19634153,  0.22295764,  0.19794303,  0.25554216,  0.19979782,
           0.23416707,  0.22014020, -0.63801372,  0.26609409]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0511 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 585, vnnlib ID: 585 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_25_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.96549511,  0.00452429, -0.00257017,  0.00320178,  0.00360158,
          0.00719339, -0.02041291,  0.00568740,  0.00888189,  0.00355852]],
       device='cuda:0')
diversed PGD initialization time: 0.1369
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00679060, -0.04609582, -0.00784439, -0.01462693, -0.01852743,
          -0.02402351, -0.01430679, -1.01545537, -0.01542195]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1462 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1934 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 586, vnnlib ID: 586 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_26_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.31494159, -0.03184883,  0.00380425, -0.01991080,  0.01574602,
          0.03370401,  0.00620368,  0.09111090,  0.29035273,  0.29201299]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.31494164, -0.03184883,  0.00380425, -0.01991078,  0.01574602,
           0.03370399,  0.00620369,  0.09111090,  0.29035276,  0.29201299],
         [ 0.31494164, -0.03184883,  0.00380425, -0.01991078,  0.01574602,
           0.03370399,  0.00620369,  0.09111090,  0.29035276,  0.29201299]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.22383074,  0.12295973,  0.08730665,  0.11102168,  0.07536487,
           0.05740691,  0.08490721, -0.19924186, -0.20090209]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 587, vnnlib ID: 587 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_27_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-3.00733745e-03, -3.52196395e-04,  2.38746256e-02,  9.81345773e-04,
          6.02290988e-01,  2.45528147e-02,  4.38437238e-03,  4.45829779e-02,
          1.51782259e-01,  1.45589203e-01]], device='cuda:0')
diversed PGD initialization time: 0.1254
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.56997275e-04,  3.93101573e-03,  7.77804852e-03,  5.04674017e-03,
          -8.97849724e-03,  9.36447829e-03,  8.86570662e-04, -1.64382160e-03,
           8.82597268e-03,  9.79133666e-01],
         [-9.56997275e-04,  3.93101573e-03,  7.77804852e-03,  5.04674017e-03,
          -8.97849724e-03,  9.36447829e-03,  8.86570662e-04, -1.64382160e-03,
           8.82597268e-03,  9.79133666e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.00802150, -0.01290951, -0.01675655, -0.01402524, -0.01834298,
          -0.00986507, -0.00733468, -0.01780447, -0.98811215]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1355 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1938 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 588, vnnlib ID: 588 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_28_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.90251422e-01, -4.42178994e-02,  7.30154961e-02, -2.10610330e-02,
         -1.43301077e-02, -1.89035758e-02,  7.60458410e-04,  2.61430964e-02,
         -2.68991590e-02, -1.68026313e-02]], device='cuda:0')
diversed PGD initialization time: 0.1274
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.05075136, -0.05013657,  0.07261115, -0.02432939, -0.00601350,
          -0.05577549, -0.03409897, -0.03200474,  1.02376461,  0.00473832],
         [ 0.05075136, -0.05013657,  0.07261115, -0.02432939, -0.00601350,
          -0.05577549, -0.03409897, -0.03200474,  1.02376461,  0.00473832]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.10088792, -0.02185979,  0.07508075,  0.05676486,  0.10652684,
           0.08485033,  0.08275610, -0.97301328,  0.04601304]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.1367 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1851 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 589, vnnlib ID: 589 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_29_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00682363,  0.36338687,  0.01185375, -0.06253864,  0.01731743,
          0.06486265, -0.01894221,  0.05458838,  0.57056111, -0.01731010]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.00682363,  0.36338687,  0.01185375, -0.06253864,  0.01731743,
           0.06486265, -0.01894221,  0.05458838,  0.57056111, -0.01731010],
         [-0.00682363,  0.36338687,  0.01185375, -0.06253864,  0.01731743,
           0.06486265, -0.01894221,  0.05458838,  0.57056111, -0.01731010]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.37021050,  0.35153311,  0.42592549,  0.34606946,  0.29852423,
           0.38232908,  0.30879849, -0.20717424,  0.38069695]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0793 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 590, vnnlib ID: 590 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_30_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.00202819, -0.00510132,  0.00543410,  0.96849549, -0.01285542,
          0.00983616,  0.00143813, -0.01167457,  0.00633014,  0.00547960]],
       device='cuda:0')
diversed PGD initialization time: 0.1382
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02265463, -0.02573977, -0.00446434, -0.05358119, -0.02306580,
           0.00608408, -0.00529001, -0.00667335,  1.01327753,  0.10280260],
         [-0.02265463, -0.02573977, -0.00446434, -0.05358119, -0.02306580,
           0.00608408, -0.00529001, -0.00667335,  1.01327753,  0.10280260]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03092657, -0.02784142, -0.04911685, -0.03051539, -0.05966527,
          -0.04829118, -0.04690784, -1.06685877, -0.15638378]]],
       device='cuda:0')
number of violation:  9
Attack finished in 0.1475 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.3051 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 591, vnnlib ID: 591 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_31_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.04185065,  0.29274172,  0.00626670, -0.09749459,  0.08777505,
          0.12358300, -0.00365961,  0.04971865,  0.57790786, -0.00398873]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.04185066,  0.29274166,  0.00626670, -0.09749459,  0.08777503,
           0.12358300, -0.00365961,  0.04971863,  0.57790792, -0.00398869],
         [-0.04185066,  0.29274166,  0.00626670, -0.09749459,  0.08777503,
           0.12358300, -0.00365961,  0.04971863,  0.57790792, -0.00398869]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33459231,  0.28647494,  0.39023626,  0.20496663,  0.16915867,
           0.29640126,  0.24302302, -0.28516626,  0.29673034]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0934 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 592, vnnlib ID: 592 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_32_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00115966, -0.00466219,  0.01314515,  0.94647026, -0.00859661,
          0.00135832,  0.00375612, -0.00307287,  0.00929505,  0.01055062]],
       device='cuda:0')
diversed PGD initialization time: 0.1251
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00784439,  0.00105380, -0.03825143, -0.00678254, -0.01068304,
          -0.01617912, -0.00646240, -1.00761104, -0.00757756]]],
       device='cuda:0')
number of violation:  7
Attack finished in 0.1339 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1828 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 593, vnnlib ID: 593 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_33_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00124004,  0.00424878,  0.00982220,  0.00975208,  0.97866970,
          0.00122130,  0.00441549, -0.01098020,  0.00150327, -0.01365119]],
       device='cuda:0')
diversed PGD initialization time: 0.1351
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.96202809,  0.00994044,  0.00420378,  0.01258001,  0.00729157,
          -0.00952120, -0.04512278,  0.02055891,  0.00634382,  0.00822218],
         [ 0.96202809,  0.00994044,  0.00420378,  0.01258001,  0.00729157,
          -0.00952120, -0.04512278,  0.02055891,  0.00634382,  0.00822218]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-9.54736531e-01, -2.64887139e-03,  3.08778509e-03, -5.28844818e-03,
           1.68127678e-02,  5.24143465e-02, -1.32673420e-02,  9.47747380e-04,
          -9.30611044e-04]]], device='cuda:0')
number of violation:  5
Attack finished in 0.1457 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2674 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 594, vnnlib ID: 594 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_34_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.02360992,  0.04435715,  0.58170956,  0.14792365, -0.00728513,
         -0.03852838,  0.00896040,  0.26678854, -0.00564738, -0.01068237]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02360992,  0.04435720,  0.58170944,  0.14792368, -0.00728512,
          -0.03852839,  0.00896040,  0.26678848, -0.00564738, -0.01068236],
         [-0.02360992,  0.04435720,  0.58170944,  0.14792368, -0.00728512,
          -0.03852839,  0.00896040,  0.26678848, -0.00564738, -0.01068236]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.29039839,  0.22243129, -0.31492096,  0.11886480,  0.27407360,
           0.30531687,  0.25782809,  0.27243584,  0.27747083]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0978 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 595, vnnlib ID: 595 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_35_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00125985, -0.00942443,  0.91510010,  0.02639350,  0.00910851,
          0.00954335, -0.00393214, -0.00724453,  0.00963916,  0.00838982]],
       device='cuda:0')
diversed PGD initialization time: 0.1258
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02692727, -0.05428116,  0.13832526, -0.01921026, -0.01545131,
           0.00890740,  0.01286526, -0.03799087,  0.95799524, -0.00751601],
         [-0.02692727, -0.05428116,  0.13832526, -0.01921026, -0.01545131,
           0.00890740,  0.01286526, -0.03799087,  0.95799524, -0.00751601]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.16525254,  0.19260642,  0.15753552,  0.15377657,  0.12941787,
           0.12546000,  0.17631613, -0.81966996,  0.14584127]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.1344 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.2145 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 596, vnnlib ID: 596 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_36_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.03782574,  0.10595971,  0.51297826,  0.05509154, -0.00348280,
          0.03515175,  0.00209419,  0.29494977,  0.00335715, -0.01958565]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03782574,  0.10595971,  0.51297832,  0.05509154, -0.00348280,
           0.03515175,  0.00209419,  0.29494971,  0.00335714, -0.01958564],
         [-0.03782574,  0.10595971,  0.51297832,  0.05509154, -0.00348280,
           0.03515175,  0.00209419,  0.29494971,  0.00335714, -0.01958564]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.33277544,  0.18899000, -0.21802860,  0.23985817,  0.29843250,
           0.25979796,  0.29285553,  0.29159257,  0.31453535]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.1169 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 597, vnnlib ID: 597 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_37_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01500399,  0.50573081,  0.04417710, -0.04036559,  0.02834252,
          0.09690310,  0.00174672,  0.09125233,  0.27994207, -0.00883410]],
       device='cuda:0')
diversed PGD initialization time: 0.1220
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550],
         [-0.02075746, -0.01396686,  0.02533837, -0.01291306, -0.00613053,
          -0.00223003,  0.00326606, -0.00645067,  0.99469793, -0.00533550]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.00679060, -0.03930523, -0.00105380, -0.00783633, -0.01173683,
          -0.01723292, -0.00751619, -1.00866485, -0.00863136]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1321 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1975 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 598, vnnlib ID: 598 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_38_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-0.01645908,  0.12352374,  0.40100801, -0.00160842, -0.00923029,
         -0.01145536, -0.04818247, -0.02931772,  0.58616167, -0.01845906]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.01645909,  0.12352373,  0.40100789, -0.00160840, -0.00923028,
          -0.01145538, -0.04818246, -0.02931771,  0.58616185, -0.01845906],
         [-0.01645909,  0.12352373,  0.40100789, -0.00160840, -0.00923028,
          -0.01145538, -0.04818246, -0.02931771,  0.58616185, -0.01845906]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.41746697,  0.27748418,  0.40261629,  0.41023818,  0.41246328,
           0.44919035,  0.43032560, -0.18515396,  0.41946694]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0595 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 599, vnnlib ID: 599 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx mnist-net_256x2.onnx
Using vnnlib prop_39_0.08003922.vnnlib
784 inputs and 10 outputs in vnnlib
Loading onnx ../../props/mnist_2/mnist-net_256x2.onnx wih quirks {}
Attack parameters: initialization=osi, steps=100, restarts=100, alpha=0.020009808242321014, initialization=osi, GAMA=False
Model output of first 5 examples:
 tensor([[-7.10301101e-05,  7.72220790e-01,  2.21139193e-03, -1.79214478e-02,
         -6.62979484e-03, -2.56514400e-02, -4.28997427e-02,  5.00902534e-03,
          2.70689011e-01,  1.64493993e-02]], device='cuda:0')
diversed PGD initialization time: 0.1199
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00725039, -0.02392735,  0.01007377, -0.01178294, -0.01030812,
           0.01306475, -0.01374855, -0.03375036,  1.02755797, -0.01071613],
         [ 0.00725039, -0.02392735,  0.01007377, -0.01178294, -0.01030812,
           0.01306475, -0.01374855, -0.03375036,  1.02755797, -0.01071613]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03117774, -0.03400111, -0.01214440, -0.01361923, -0.03699210,
          -0.01017880,  0.00982301, -1.05148530, -0.01321121]]],
       device='cuda:0')
number of violation:  8
Attack finished in 0.1280 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.1760 seconds
############# Summary #############
Final verified acc: 41.833333333333336% (total 600 examples)
Problem instances count: 600 , total verified (safe/unsat): 251 , total falsified (unsafe/sat): 349 , timeout: 0
mean time for ALL instances (total 600):0.6519892329587895, max time: 18.673662900924683
mean time for verified SAFE instances(total 251): 1.2947223376467882, max time: 18.673662900924683
mean time for verified (SAFE + UNSAFE) instances (total 600): 0.6519892438252767, max time: [3.50744366645813, 0.474773645401001, 0.517298698425293, 0.5454244613647461, 0.5475332736968994, 0.5429158210754395, 0.5487422943115234, 0.5071690082550049, 0.803307294845581, 0.5532586574554443, 0.6137974262237549, 0.5432937145233154, 0.5152735710144043, 0.5304872989654541, 0.5469229221343994, 0.5426793098449707, 0.5403175354003906, 0.5043771266937256, 0.5413691997528076, 0.5307037830352783, 0.5405797958374023, 0.5486688613891602, 0.5448377132415771, 0.5282142162322998, 0.5594840049743652, 0.5975608825683594, 0.5435404777526855, 0.49683070182800293, 0.5515704154968262, 0.5332880020141602, 0.5281262397766113, 0.519390344619751, 0.5448117256164551, 0.5197789669036865, 0.5175495147705078, 0.5251345634460449, 0.5312929153442383, 0.5716242790222168, 0.5079331398010254, 0.4971635341644287, 0.7486245632171631, 0.5696425437927246, 0.5161988735198975, 0.5173685550689697, 0.5894341468811035, 0.5400176048278809, 0.5413017272949219, 0.5494306087493896, 0.5248510837554932, 0.5149595737457275, 0.500119686126709, 0.500664234161377, 0.5080130100250244, 0.5362143516540527, 0.5457108020782471, 0.6262795925140381, 0.5371403694152832, 0.5441141128540039, 0.5973312854766846, 0.6180055141448975, 0.5195038318634033, 0.5536832809448242, 0.5245800018310547, 0.46126389503479004, 0.487729549407959, 0.4689910411834717, 0.5213971138000488, 0.5347166061401367, 0.4942054748535156, 0.5497817993164062, 0.5002560615539551, 0.5886571407318115, 0.5383367538452148, 0.6069848537445068, 0.5578932762145996, 0.5456616878509521, 0.5274436473846436, 0.5395429134368896, 0.5033361911773682, 0.5375325679779053, 0.47702693939208984, 0.5253586769104004, 0.5473933219909668, 0.5254073143005371, 0.5054752826690674, 0.544177770614624, 0.4822390079498291, 0.5920975208282471, 3.382462501525879, 0.5081572532653809, 0.5723881721496582, 0.5503857135772705, 0.5558221340179443, 0.5081045627593994, 0.5059471130371094, 0.5458428859710693, 0.5154950618743896, 0.5256786346435547, 0.48093438148498535, 0.5156302452087402, 0.5348167419433594, 0.5957949161529541, 0.5714232921600342, 0.4997575283050537, 0.46729302406311035, 0.4446887969970703, 0.4847376346588135, 0.4920206069946289, 0.5214138031005859, 0.5562057495117188, 0.5107097625732422, 0.5281939506530762, 0.5192625522613525, 0.5293228626251221, 0.5077829360961914, 0.5315396785736084, 0.6013820171356201, 3.571213483810425, 0.5455594062805176, 0.5277247428894043, 2.849586009979248, 0.5125467777252197, 0.6457953453063965, 0.4886934757232666, 0.5042195320129395, 0.541090726852417, 0.5103838443756104, 0.49199414253234863, 0.5245451927185059, 0.5064849853515625, 0.5169222354888916, 0.5059669017791748, 0.4875917434692383, 0.5090861320495605, 0.588346004486084, 0.5614533424377441, 0.4751443862915039, 0.5126183032989502, 0.48685455322265625, 0.44270896911621094, 0.5659112930297852, 0.5136630535125732, 0.5134694576263428, 0.487823486328125, 0.49993348121643066, 0.5125799179077148, 0.5313546657562256, 0.5169181823730469, 0.5729143619537354, 0.5162911415100098, 0.5035624504089355, 0.5335171222686768, 0.5284755229949951, 0.5236830711364746, 0.5741596221923828, 0.553210973739624, 3.0575919151306152, 3.775609254837036, 0.5463676452636719, 0.5028440952301025, 0.5134127140045166, 2.909214735031128, 0.5172615051269531, 0.537020206451416, 0.5179080963134766, 0.517411470413208, 3.7902657985687256, 2.935406446456909, 0.5523033142089844, 2.974980354309082, 0.4930388927459717, 0.5036747455596924, 0.48616909980773926, 3.688720703125, 0.6437282562255859, 0.510037899017334, 0.5613622665405273, 0.5827772617340088, 5.43721866607666, 0.48302578926086426, 0.5523455142974854, 2.428919553756714, 0.5225784778594971, 3.3008511066436768, 0.6005868911743164, 0.5252640247344971, 2.9677908420562744, 0.5215880870819092, 5.312569618225098, 0.5977656841278076, 0.5002555847167969, 0.5787098407745361, 0.49367213249206543, 0.5086228847503662, 0.4897615909576416, 2.9010846614837646, 2.5187835693359375, 7.122143983840942, 0.4969182014465332, 0.5203423500061035, 0.5504398345947266, 2.6216137409210205, 0.5847136974334717, 0.5548772811889648, 0.49965763092041016, 0.48936939239501953, 0.5108928680419922, 3.8768246173858643, 2.682286024093628, 0.5485703945159912, 0.4970259666442871, 2.7425832748413086, 2.894641637802124, 3.1675450801849365, 0.6324231624603271, 5.372981786727905, 0.5282762050628662, 0.5511815547943115, 0.5359439849853516, 0.5706818103790283, 0.5291156768798828, 2.4488799571990967, 2.5868170261383057, 0.5235376358032227, 3.6475918292999268, 0.4980320930480957, 3.8399906158447266, 4.7609124183654785, 3.1972239017486572, 0.630918025970459, 2.5091183185577393, 0.5108716487884521, 0.5440773963928223, 0.6797447204589844, 7.048566818237305, 5.647972583770752, 0.5578658580780029, 6.391518831253052, 18.673662900924683, 5.915463209152222, 2.7081539630889893, 0.5080723762512207, 2.926868200302124, 2.978334426879883, 10.076924562454224, 3.4372241497039795, 3.227266550064087, 5.408573389053345, 5.797636032104492, 12.850299596786499, 8.635879039764404]
mean time for verified UNSAFE instances (total 349): 0.18973707606252763, max time: 0.6489200592041016
safe-incomplete (total 204), index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 169, 170, 171, 173, 174, 175, 176, 180, 182, 183, 185, 187, 188, 189, 190, 192, 193, 195, 197, 199, 203, 209, 210, 211, 213, 214, 215, 222, 223, 225, 228, 230, 232, 233, 235, 243, 250, 255, 262, 263, 265, 268, 270, 275, 290, 302, 305, 308, 310, 330, 345]
safe (total 47), index: [88, 118, 122, 165, 167, 172, 177, 179, 181, 186, 191, 194, 196, 201, 205, 216, 220, 221, 227, 237, 239, 251, 253, 254, 256, 272, 273, 283, 293, 294, 295, 303, 313, 323, 333, 334, 335, 342, 348, 370, 375, 382, 388, 422, 428, 462, 468]
unsafe-pgd (total 349), index: [98, 120, 128, 138, 144, 158, 160, 162, 164, 166, 168, 178, 184, 198, 200, 202, 204, 206, 207, 208, 212, 217, 218, 219, 224, 226, 229, 231, 234, 236, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 257, 258, 259, 260, 261, 264, 266, 267, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 296, 297, 298, 299, 300, 301, 304, 306, 307, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599]
